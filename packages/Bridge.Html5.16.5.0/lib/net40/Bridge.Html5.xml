<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bridge.Html5</name>
    </assembly>
    <members>
        <member name="T:Bridge.Html5.AjaxReadyState">
            <summary>
            The state of the XMLHttpRequest
            </summary>
        </member>
        <member name="F:Bridge.Html5.AjaxReadyState.Unsent">
            <summary>
            open() has not been called yet.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AjaxReadyState.Opened">
            <summary>
            send() has not been called yet.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AjaxReadyState.HeadersReceived">
            <summary>
            send() has been called, and headers and status are available.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AjaxReadyState.Loading">
            <summary>
            Downloading; responseText holds partial data.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AjaxReadyState.Done">
            <summary>
            The operation is complete.
            </summary>
        </member>
        <member name="T:Bridge.Html5.FormData">
            <summary>
            XMLHttpRequest Level 2 adds support for the new FormData interface. FormData objects provide a way to easily construct a set of key/value pairs representing form fields and their values, which can then be easily sent using the XMLHttpRequest send() method.
            It uses the same format a form would use if the encoding type were set to "multipart/form-data".
            </summary>
        </member>
        <member name="M:Bridge.Html5.FormData.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:Bridge.Html5.FormData.#ctor(Bridge.Html5.HTMLFormElement)">
             <summary>
            
             </summary>
             <param name="form">HTML Form Element to send for keys/values. It will also encode file input content.</param>
        </member>
        <member name="M:Bridge.Html5.FormData.Append(System.String,System.String)">
            <summary>
            Appends a key/value pair to the FormData object.
            </summary>
            <param name="name">The name of the field whose data is contained in value.</param>
            <param name="value">The field's value. Can be a Blob, File, or a string, if neither, the value is converted to a string.</param>
        </member>
        <member name="M:Bridge.Html5.FormData.Append(System.String,Bridge.Html5.Blob)">
            <summary>
            Appends a key/value pair to the FormData object.
            </summary>
            <param name="name">The name of the field whose data is contained in value.</param>
            <param name="value">The field's value. Can be a Blob, File, or a string, if neither, the value is converted to a string.</param>
        </member>
        <member name="M:Bridge.Html5.FormData.Append(System.String,Bridge.Html5.File)">
            <summary>
            Appends a key/value pair to the FormData object.
            </summary>
            <param name="name">The name of the field whose data is contained in value.</param>
            <param name="value">The field's value. Can be a Blob, File, or a string, if neither, the value is converted to a string.</param>
        </member>
        <member name="M:Bridge.Html5.FormData.Append(System.String,Bridge.Html5.Blob,System.String)">
            <summary>
            Appends a key/value pair to the FormData object.
            </summary>
            <param name="name">The name of the field whose data is contained in value.</param>
            <param name="value">The field's value. Can be a Blob, File, or a string, if neither, the value is converted to a string.</param>
            <param name="filename">The filename reported to the server, when a Blob or File is passed as second paramter. The default filename for Blob objects is "blob".</param>
        </member>
        <member name="M:Bridge.Html5.FormData.Append(System.String,Bridge.Html5.File,System.String)">
            <summary>
            Appends a key/value pair to the FormData object.
            </summary>
            <param name="name">The name of the field whose data is contained in value.</param>
            <param name="value">The field's value. Can be a Blob, File, or a string, if neither, the value is converted to a string.</param>
            <param name="filename">The filename reported to the server, when a Blob or File is passed as second paramter. The default filename for Blob objects is "blob".</param>
        </member>
        <member name="T:Bridge.Html5.XMLHttpRequestUpload">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.XMLHttpRequest">
            <summary>
            XMLHttpRequest is a JavaScript object that was designed by Microsoft and adopted by Mozilla, Apple, and Google. It's now being standardized in the W3C. It provides an easy way to retrieve data from a URL without having to do a full page refresh. A Web page can update just a part of the page without disrupting what the user is doing.  XMLHttpRequest is used heavily in AJAX programming.
            Despite its name, XMLHttpRequest can be used to retrieve any type of data, not just XML, and it supports protocols other than HTTP (including file and ftp).
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequest.OnReadyStateChange">
            <summary>
            A JavaScript function object that is called whenever the readyState attribute changes. The callback is called from the user interface thread.
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequest.Response">
            <summary>
            The response entity body according to responseType, as an ArrayBuffer, Blob, Document, JavaScript object (for "json"), or string. This is null if the request is not complete or was not successful.
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequest.ResponseText">
            <summary>
            The response to the request as text, or null if the request was unsuccessful or has not yet been sent.
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequest.Status">
            <summary>
            The status of the response to the request. This is the HTTP result code (for example, status is 200 for a successful request).
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequest.StatusText">
            <summary>
            The response string returned by the HTTP server. Unlike status, this includes the entire text of the response message ("200 OK", for example).
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequest.Timeout">
            <summary>
            The number of milliseconds a request can take before automatically being terminated. A value of 0 (which is the default) means there is no timeout.
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequest.WithCredentials">
            <summary>
            Indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies or authorization headers. The default is false.
            </summary>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.Abort">
            <summary>
            Aborts the request if it has already been sent.
            </summary>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.GetAllResponseHeaders">
            <summary>
            Returns all the response headers as a string, or null if no response has been received. Note: For multipart requests, this returns the headers from the current part of the request, not from the original channel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.GetResponseHeader(System.String)">
            <summary>
            Returns the string containing the text of the specified header, or null if either the response has not yet been received or the header doesn't exist in the response.
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.Open(System.String,System.String)">
            <summary>
            Initializes a request. This method is to be used from JavaScript code; to initialize a request from native code, use openRequest()instead.
            </summary>
            <param name="method">The HTTP method to use, such as "GET", "POST", "PUT", "DELETE", etc. Ignored for non-HTTP(S) URLs.</param>
            <param name="url">The URL to send the request to.</param>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.Open(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a request. This method is to be used from JavaScript code; to initialize a request from native code, use openRequest()instead.
            </summary>
            <param name="method">The HTTP method to use, such as "GET", "POST", "PUT", "DELETE", etc. Ignored for non-HTTP(S) URLs.</param>
            <param name="url">The URL to send the request to.</param>
            <param name="async">An optional boolean parameter, defaulting to true, indicating whether or not to perform the operation asynchronously. If this value is false, the send()method does not return until the response is received. If true, notification of a completed transaction is provided using event listeners. This must be true if the multipart attribute is true, or an exception will be thrown.</param>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.Open(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a request. This method is to be used from JavaScript code; to initialize a request from native code, use openRequest()instead.
            </summary>
            <param name="method">The HTTP method to use, such as "GET", "POST", "PUT", "DELETE", etc. Ignored for non-HTTP(S) URLs.</param>
            <param name="url">The URL to send the request to.</param>
            <param name="async">An optional boolean parameter, defaulting to true, indicating whether or not to perform the operation asynchronously. If this value is false, the send()method does not return until the response is received. If true, notification of a completed transaction is provided using event listeners. This must be true if the multipart attribute is true, or an exception will be thrown.</param>
            <param name="user">The optional user name to use for authentication purposes; by default, this is an empty string.</param>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.Open(System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a request. This method is to be used from JavaScript code; to initialize a request from native code, use openRequest()instead.
            </summary>
            <param name="method">The HTTP method to use, such as "GET", "POST", "PUT", "DELETE", etc. Ignored for non-HTTP(S) URLs.</param>
            <param name="url">The URL to send the request to.</param>
            <param name="async">An optional boolean parameter, defaulting to true, indicating whether or not to perform the operation asynchronously. If this value is false, the send()method does not return until the response is received. If true, notification of a completed transaction is provided using event listeners. This must be true if the multipart attribute is true, or an exception will be thrown.</param>
            <param name="user">The optional user name to use for authentication purposes; by default, this is an empty string.</param>
            <param name="password">The optional password to use for authentication purposes; by default, this is an empty string.</param>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.OverrideMimeType(System.String)">
            <summary>
            Overrides the MIME type returned by the server. This may be used, for example, to force a stream to be treated and parsed as text/xml, even if the server does not report it as such. This method must be called before send().
            </summary>
            <param name="mimetype"></param>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.Send">
            <summary>
            Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.
            </summary>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.Send(System.String)">
            <summary>
            Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.SetRequestHeader(System.String,System.String)">
            <summary>
            Sets the value of an HTTP request header. You must call setRequestHeader() after open(), but before send(). If this method is called several times with the same header, the values are merged into one single request header.
            </summary>
            <param name="header">The name of the header whose value is to be set.</param>
            <param name="value">The value to set as the body of the header.</param>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequest.ReadyState">
            <summary>
            The state of the request
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequest.Upload">
            <summary>
            The upload process can be tracked by adding an event listener to upload.
            </summary>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.Send(Bridge.Html5.ArrayBuffer)">
            <summary>
            Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.Send(Bridge.Html5.ArrayBufferView)">
            <summary>
            Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.Send(Bridge.Html5.Blob)">
            <summary>
            Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.Send(Bridge.Html5.DocumentInstance)">
            <summary>
            Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Bridge.Html5.XMLHttpRequest.Send(Bridge.Html5.FormData)">
            <summary>
            Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.
            </summary>
            <param name="data"></param>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequest.ResponseType">
            <summary>
            Is an enumerated value that defines the response type. For possible values refer to
            enum Bridge.Html5.XMLHttpRequestResponseType.
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequest.ResponseXML">
            <summary>
            The response to the request as a DOM Document object, or null if the request was unsuccessful, has not yet been sent, or cannot be parsed as XML or HTML. The response is parsed as if it were a text/xml stream. When the responseType is set to "document" and the request has been made asynchronously, the response is parsed as a text/html stream.
            </summary>
        </member>
        <member name="T:Bridge.Html5.XMLHttpRequestEventTarget">
            <summary>
            XMLHttpRequestEventTarget is the interface that describes the event handlers you can implement in an object that will handle events for an XMLHttpRequest.
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequestEventTarget.OnAbort">
            <summary>
            The function to call when a request is aborted.
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequestEventTarget.OnError">
            <summary>
            The function to call when a request encounters an error.
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequestEventTarget.OnLoad">
            <summary>
            The function to call when an HTTP request returns after successfully loading content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequestEventTarget.OnLoadStart">
            <summary>
            A function that gets called when the HTTP request first begins loading data.
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequestEventTarget.OnProgress">
            <summary>
            A function that is called periodically with information about the progress of the request.
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequestEventTarget.OnTimeout">
            <summary>
            A function that is called if the event times out; this only happens if a timeout has been previously established by setting the value of the XMLHttpRequest object's timeout attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.XMLHttpRequestEventTarget.OnLoadEnd">
            <summary>
            A function that is called when the load is completed, even if the request failed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BarProp.Visible">
            <summary>
            False to hide location bar
            </summary>
        </member>
        <member name="T:Bridge.Html5.CaretPosition">
            <summary>
            The CaretPosition interface represents the caret postion, an indicator for the text insertion point. You can get a CaretPosition using the document.caretPositionFromPoint method.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CaretPosition.OffsetNode">
            <summary>
            Returns a Node containing the found node at the caret's position.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CaretPosition.Offset">
            <summary>
            Returns a long representing the character offset in the caret position node.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ClientRect.Bottom">
            <summary>
            Y-coordinate, relative to the viewport origin, of the bottom of the rectangle box. Read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ClientRect.Left">
            <summary>
            X-coordinate, relative to the viewport origin, of the left of the rectangle box. Read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ClientRect.Right">
            <summary>
            X-coordinate, relative to the viewport origin, of the right of the rectangle box. Read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ClientRect.Top">
            <summary>
            Y-coordinate, relative to the viewport origin, of the top of the rectangle box. Read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ClientRect.Width">
            <summary>
            Width of the rectangle box (This is identical to right minus left). Read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ClientRect.Height">
            <summary>
            Height of the rectangle box (This is identical to bottom minus top). Read only.
            </summary>
        </member>
        <member name="T:Bridge.Html5.ClientRectList">
            <summary>
            collection of rectangles that indicate the bounding rectangles for each box in a client.
            </summary>
        </member>
        <member name="P:Bridge.Html5.ClientRectList.Item(System.Int32)">
            <summary>
            Returns an item in the list by its index, or null if out-of-bounds.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.ClientRectList.GetItem(System.Int32)">
            <summary>
            Returns an item in the list by its index, or null if out-of-bounds. Equivalent to nodeList[idx].
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="F:Bridge.Html5.ClientRectList.Length">
            <summary>
            The number of items in the ClientRectList.
            </summary>
        </member>
        <member name="T:Bridge.Html5.CompatMode">
            <summary>
            mode is the string "BackCompat" for Quirks mode or "CSS1Compat" for Strict mode.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CompatMode.BackCompat">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.CompatMode.CSS1Compat">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.Date">
            <summary>
            JavaScript Date instances inherit from Date.prototype. You can modify the constructor's prototype object to affect properties and methods inherited by JavaScript Date instances.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Date.Now">
            <summary>
            The Date.now() method returns the number of milliseconds elapsed since 1 January 1970 00:00:00 UTC.
            </summary>
            <remarks>
            Because now() is a static method of Date, you always use it as Date.now().
            </remarks>
            <returns>A Number representing the milliseconds elapsed since the UNIX epoch.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.UTC(System.Int32,System.Int32)">
             <summary>
             The Date.UTC() method accepts the same parameters as the longest form of the constructor, and returns the number of milliseconds in a Date object since January 1, 1970, 00:00:00, universal time.
             </summary>
             <remarks>
             UTC() takes comma-delimited date parameters and returns the number of milliseconds between January 1, 1970, 00:00:00, universal time and the time you specified.
            
             You should specify a full year for the year; for example, 1998. If a year between 0 and 99 is specified, the method converts the year to a year in the 20th century(1900 + year); for example, if you specify 95, the year 1995 is used.
             </remarks>
             <param name="year">A year after 1900.</param>
             <param name="month">An integer between 0 and 11 representing the month.</param>
             <returns>A number representing the number of milliseconds in the given Date object since January 1, 1970, 00:00:00, universal time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.UTC(System.Int32,System.Int32,System.Int32)">
             <summary>
             The Date.UTC() method accepts the same parameters as the longest form of the constructor, and returns the number of milliseconds in a Date object since January 1, 1970, 00:00:00, universal time.
             </summary>
             <remarks>
             UTC() takes comma-delimited date parameters and returns the number of milliseconds between January 1, 1970, 00:00:00, universal time and the time you specified.
            
             You should specify a full year for the year; for example, 1998. If a year between 0 and 99 is specified, the method converts the year to a year in the 20th century(1900 + year); for example, if you specify 95, the year 1995 is used.
             </remarks>
             <param name="year">A year after 1900.</param>
             <param name="month">An integer between 0 and 11 representing the month.</param>
             <param name="day">An integer between 1 and 31 representing the day of the month.</param>
             <returns>A number representing the number of milliseconds in the given Date object since January 1, 1970, 00:00:00, universal time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.UTC(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             The Date.UTC() method accepts the same parameters as the longest form of the constructor, and returns the number of milliseconds in a Date object since January 1, 1970, 00:00:00, universal time.
             </summary>
             <remarks>
             UTC() takes comma-delimited date parameters and returns the number of milliseconds between January 1, 1970, 00:00:00, universal time and the time you specified.
            
             You should specify a full year for the year; for example, 1998. If a year between 0 and 99 is specified, the method converts the year to a year in the 20th century(1900 + year); for example, if you specify 95, the year 1995 is used.
             </remarks>
             <param name="year">A year after 1900.</param>
             <param name="month">An integer between 0 and 11 representing the month.</param>
             <param name="day">An integer between 1 and 31 representing the day of the month.</param>
             <param name="hour">An integer between 0 and 23 representing the hours.</param>
             <returns>A number representing the number of milliseconds in the given Date object since January 1, 1970, 00:00:00, universal time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.UTC(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             The Date.UTC() method accepts the same parameters as the longest form of the constructor, and returns the number of milliseconds in a Date object since January 1, 1970, 00:00:00, universal time.
             </summary>
             <remarks>
             UTC() takes comma-delimited date parameters and returns the number of milliseconds between January 1, 1970, 00:00:00, universal time and the time you specified.
            
             You should specify a full year for the year; for example, 1998. If a year between 0 and 99 is specified, the method converts the year to a year in the 20th century(1900 + year); for example, if you specify 95, the year 1995 is used.
             </remarks>
             <param name="year">A year after 1900.</param>
             <param name="month">An integer between 0 and 11 representing the month.</param>
             <param name="day">An integer between 1 and 31 representing the day of the month.</param>
             <param name="hour">An integer between 0 and 23 representing the hours.</param>
             <param name="minute">An integer between 0 and 59 representing the minutes.</param>
             <returns>A number representing the number of milliseconds in the given Date object since January 1, 1970, 00:00:00, universal time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.UTC(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             The Date.UTC() method accepts the same parameters as the longest form of the constructor, and returns the number of milliseconds in a Date object since January 1, 1970, 00:00:00, universal time.
             </summary>
             <remarks>
             UTC() takes comma-delimited date parameters and returns the number of milliseconds between January 1, 1970, 00:00:00, universal time and the time you specified.
            
             You should specify a full year for the year; for example, 1998. If a year between 0 and 99 is specified, the method converts the year to a year in the 20th century(1900 + year); for example, if you specify 95, the year 1995 is used.
             </remarks>
             <param name="year">A year after 1900.</param>
             <param name="month">An integer between 0 and 11 representing the month.</param>
             <param name="day">An integer between 1 and 31 representing the day of the month.</param>
             <param name="hour">An integer between 0 and 23 representing the hours.</param>
             <param name="minute">An integer between 0 and 59 representing the minutes.</param>
             <param name="second">An integer between 0 and 59 representing the seconds.</param>
             <returns>A number representing the number of milliseconds in the given Date object since January 1, 1970, 00:00:00, universal time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.UTC(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             The Date.UTC() method accepts the same parameters as the longest form of the constructor, and returns the number of milliseconds in a Date object since January 1, 1970, 00:00:00, universal time.
             </summary>
             <remarks>
             UTC() takes comma-delimited date parameters and returns the number of milliseconds between January 1, 1970, 00:00:00, universal time and the time you specified.
            
             You should specify a full year for the year; for example, 1998. If a year between 0 and 99 is specified, the method converts the year to a year in the 20th century(1900 + year); for example, if you specify 95, the year 1995 is used.
             </remarks>
             <param name="year">A year after 1900.</param>
             <param name="month">An integer between 0 and 11 representing the month.</param>
             <param name="day">An integer between 1 and 31 representing the day of the month.</param>
             <param name="hour">An integer between 0 and 23 representing the hours.</param>
             <param name="minute">An integer between 0 and 59 representing the minutes.</param>
             <param name="second">An integer between 0 and 59 representing the seconds.</param>
             <param name="millisecond">An integer between 0 and 999 representing the milliseconds.</param>
             <returns>A number representing the number of milliseconds in the given Date object since January 1, 1970, 00:00:00, universal time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.Parse(System.String)">
            <summary>
            The Date.parse() method parses a string representation of a date, and returns the number of milliseconds since January 1, 1970, 00:00:00 UTC or NaN if the string is unrecognised or, in some cases, contains illegal date values (e.g. 2015-02-31).
            </summary>
            <param name="dateString">A string representing an RFC2822 or ISO 8601 date (other formats may be used, but results may be unexpected).</param>
            <returns>A number representing the milliseconds elapsed since January 1, 1970, 00:00:00 UTC and the date obtained by parsing the given string representation of a date. If the argument doesn't represent a valid date, NaN is returned.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.#ctor">
            <summary>
            Creates a JavaScript Date instance that represents a single moment in time. Date objects are based on a time value that is the number of milliseconds since 1 January, 1970 UTC.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Date.#ctor(System.Double)">
            <summary>
            Double value representing the number of milliseconds since 1 January 1970 00:00:00 UTC (Unix Epoch).
            </summary>
            <param name="value">The numberof milliseconds since 1 January 1970 00:00:00 UTC (Unix Epoch)</param>
        </member>
        <member name="M:Bridge.Html5.Date.#ctor(System.String)">
            <summary>
            String value representing a date. The string should be in a format recognized by the Date.parse() method (IETF-compliant RFC 2822 timestamps and also a version of ISO8601).
            </summary>
            <param name="dateString"></param>
        </member>
        <member name="M:Bridge.Html5.Date.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a JavaScript Date instance that represents a single moment in time. Date objects are based on a time value that is the number of milliseconds since 1 January, 1970 UTC.
            </summary>
            <param name="year">Integer value representing the year. Values from 0 to 99 map to the years 1900 to 1999.</param>
            <param name="month">Integer value representing the month, beginning with 0 for January to 11 for December.</param>
            <param name="date">Integer value representing the day of the month.</param>
            <param name="hours">Integer value representing the hour of the day.</param>
            <param name="minutes">Integer value representing the minute segment of a time.</param>
            <param name="seconds">Integer value representing the second segment of a time.</param>
            <param name="milliseconds">Integer value representing the millisecond segment of a time.</param>
        </member>
        <member name="M:Bridge.Html5.Date.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a JavaScript Date instance that represents a single moment in time. Date objects are based on a time value that is the number of milliseconds since 1 January, 1970 UTC.
            </summary>
            <param name="year">Integer value representing the year. Values from 0 to 99 map to the years 1900 to 1999.</param>
            <param name="month">Integer value representing the month, beginning with 0 for January to 11 for December.</param>
            <param name="date">Integer value representing the day of the month.</param>
            <param name="hours">Integer value representing the hour of the day.</param>
            <param name="minutes">Integer value representing the minute segment of a time.</param>
            <param name="seconds">Integer value representing the second segment of a time.</param>
        </member>
        <member name="M:Bridge.Html5.Date.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a JavaScript Date instance that represents a single moment in time. Date objects are based on a time value that is the number of milliseconds since 1 January, 1970 UTC.
            </summary>
            <param name="year">Integer value representing the year. Values from 0 to 99 map to the years 1900 to 1999.</param>
            <param name="month">Integer value representing the month, beginning with 0 for January to 11 for December.</param>
            <param name="date">Integer value representing the day of the month.</param>
            <param name="hours">Integer value representing the hour of the day.</param>
            <param name="minutes">Integer value representing the minute segment of a time.</param>
        </member>
        <member name="M:Bridge.Html5.Date.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a JavaScript Date instance that represents a single moment in time. Date objects are based on a time value that is the number of milliseconds since 1 January, 1970 UTC.
            </summary>
            <param name="year">Integer value representing the year. Values from 0 to 99 map to the years 1900 to 1999.</param>
            <param name="month">Integer value representing the month, beginning with 0 for January to 11 for December.</param>
            <param name="date">Integer value representing the day of the month.</param>
            <param name="hours">Integer value representing the hour of the day.</param>
        </member>
        <member name="M:Bridge.Html5.Date.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a JavaScript Date instance that represents a single moment in time. Date objects are based on a time value that is the number of milliseconds since 1 January, 1970 UTC.
            </summary>
            <param name="year">Integer value representing the year. Values from 0 to 99 map to the years 1900 to 1999.</param>
            <param name="month">Integer value representing the month, beginning with 0 for January to 11 for December.</param>
            <param name="date">Integer value representing the day of the month.</param>
        </member>
        <member name="M:Bridge.Html5.Date.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a JavaScript Date instance that represents a single moment in time. Date objects are based on a time value that is the number of milliseconds since 1 January, 1970 UTC.
            </summary>
            <param name="year">Integer value representing the year. Values from 0 to 99 map to the years 1900 to 1999.</param>
            <param name="month">Integer value representing the month, beginning with 0 for January to 11 for December.</param>
        </member>
        <member name="M:Bridge.Html5.Date.ToDateString">
            <summary>
            The toDateString() method returns the date portion of a Date object in human readable form in American English.
            </summary>
            <returns>A string representing the date portion of the given Date object in human readable form in American English.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.ToTimeString">
            <summary>
            The toTimeString() method returns the time portion of a Date object in human readable form in American English.
            </summary>
            <returns>A string representing the time portion of the given date in human readable form in American English.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.ToLocaleDateString">
            <summary>
            The toLocaleDateString() method returns a string with a language sensitive representation of the date portion of this date. The new locales and options arguments let applications specify the language whose formatting conventions should be used and allow to customize the behavior of the function. In older implementations, which ignore the locales and options arguments, the locale used and the form of the string returned are entirely implementation dependent.
            </summary>
            <returns>A string representing the date portion of the given Date instance according to language-specific conventions.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.ToLocaleDateString(Bridge.Union{System.String,System.String[]})">
            <summary>
            The toLocaleDateString() method returns a string with a language sensitive representation of the date portion of this date. The new locales and options arguments let applications specify the language whose formatting conventions should be used and allow to customize the behavior of the function. In older implementations, which ignore the locales and options arguments, the locale used and the form of the string returned are entirely implementation dependent.
            </summary>
            <param name="locales">A string with a BCP 47 language tag, or an array of such strings.</param>
            <returns>A string representing the date portion of the given Date instance according to language-specific conventions.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.ToLocaleDateString(Bridge.Union{System.String,System.String[]},Bridge.Html5.Date.ToLocaleStringOptions)">
            <summary>
            The toLocaleDateString() method returns a string with a language sensitive representation of the date portion of this date. The new locales and options arguments let applications specify the language whose formatting conventions should be used and allow to customize the behavior of the function. In older implementations, which ignore the locales and options arguments, the locale used and the form of the string returned are entirely implementation dependent.
            </summary>
            <param name="locales">A string with a BCP 47 language tag, or an array of such strings.</param>
            <param name="options">An object with some or all of the following properties:</param>
            <returns>A string representing the date portion of the given Date instance according to language-specific conventions.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.ToLocaleTimeString">
            <summary>
            The toLocaleTimeString() method returns a string with a language sensitive representation of the time portion of this date. The new locales and options arguments let applications specify the language whose formatting conventions should be used and customize the behavior of the function. In older implementations, which ignore the locales and options arguments, the locale used and the form of the string returned are entirely implementation dependent.
            </summary>
            <returns>A string representing the time portion of the given Date instance according to language-specific conventions.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.ToLocaleTimeString(Bridge.Union{System.String,System.String[]})">
            <summary>
            The toLocaleTimeString() method returns a string with a language sensitive representation of the time portion of this date. The new locales and options arguments let applications specify the language whose formatting conventions should be used and customize the behavior of the function. In older implementations, which ignore the locales and options arguments, the locale used and the form of the string returned are entirely implementation dependent.
            </summary>
            <param name="locales">A string with a BCP 47 language tag, or an array of such strings.</param>
            <returns>A string representing the time portion of the given Date instance according to language-specific conventions.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.ToLocaleTimeString(Bridge.Union{System.String,System.String[]},Bridge.Html5.Date.ToLocaleStringOptions)">
            <summary>
            The toLocaleTimeString() method returns a string with a language sensitive representation of the time portion of this date. The new locales and options arguments let applications specify the language whose formatting conventions should be used and customize the behavior of the function. In older implementations, which ignore the locales and options arguments, the locale used and the form of the string returned are entirely implementation dependent.
            </summary>
            <param name="locales">A string with a BCP 47 language tag, or an array of such strings.</param>
            <param name="options">An object with some or all of the following properties:</param>
            <returns>A string representing the time portion of the given Date instance according to language-specific conventions.</returns>
        </member>
        <member name="T:Bridge.Html5.Date.ToLocaleStringOptions">
            <summary>
            An object with some or all of the following properties:
            </summary>
            <remarks>The default value for each date-time component property is undefined, but if the weekday, year, month, day properties are all undefined, then year, month, and day are assumed to be "numeric".</remarks>
        </member>
        <member name="P:Bridge.Html5.Date.ToLocaleStringOptions.LocaleMatcher">
            <summary>
            The locale matching algorithm to use. Possible values are "lookup" and "best fit"; the default is "best fit". For information about this option, see the Intl page.
            </summary>
        </member>
        <member name="P:Bridge.Html5.Date.ToLocaleStringOptions.TimeZone">
            <summary>
            The time zone to use. The only value implementations must recognize is "UTC"; the default is the runtime's default time zone. Implementations may also recognize the time zone names of the IANA time zone database, such as "Asia/Shanghai", "Asia/Kolkata", "America/New_York".
            </summary>
        </member>
        <member name="P:Bridge.Html5.Date.ToLocaleStringOptions.Hour12">
            <summary>
            Whether to use 12-hour time (as opposed to 24-hour time). Possible values are true and false; the default is locale dependent.
            </summary>
        </member>
        <member name="P:Bridge.Html5.Date.ToLocaleStringOptions.FormatMatcher">
            <summary>
            The format matching algorithm to use. Possible values are "basic" and "best fit"; the default is "best fit". See the following paragraphs for information about the use of this property.
            </summary>
        </member>
        <member name="P:Bridge.Html5.Date.ToLocaleStringOptions.Weekday">
            <summary>
            The representation of the weekday. Possible values are "narrow", "short", "long".
            </summary>
        </member>
        <member name="P:Bridge.Html5.Date.ToLocaleStringOptions.Era">
            <summary>
            The representation of the era. Possible values are "narrow", "short", "long".
            </summary>
        </member>
        <member name="P:Bridge.Html5.Date.ToLocaleStringOptions.Year">
            <summary>
            The representation of the year. Possible values are "numeric", "2-digit".
            </summary>
        </member>
        <member name="P:Bridge.Html5.Date.ToLocaleStringOptions.Month">
            <summary>
            The representation of the month. Possible values are "numeric", "2-digit", "narrow", "short", "long".
            </summary>
        </member>
        <member name="P:Bridge.Html5.Date.ToLocaleStringOptions.Day">
            <summary>
            The representation of the day. Possible values are "numeric", "2-digit".
            </summary>
        </member>
        <member name="P:Bridge.Html5.Date.ToLocaleStringOptions.Hour">
            <summary>
            The representation of the hour. Possible values are "numeric", "2-digit".
            </summary>
        </member>
        <member name="P:Bridge.Html5.Date.ToLocaleStringOptions.Minute">
            <summary>
            The representation of the minute. Possible values are "numeric", "2-digit".
            </summary>
        </member>
        <member name="P:Bridge.Html5.Date.ToLocaleStringOptions.Second">
            <summary>
            The representation of the second. Possible values are "numeric", "2-digit".
            </summary>
        </member>
        <member name="P:Bridge.Html5.Date.ToLocaleStringOptions.TimeZoneName">
            <summary>
            The representation of the time zone name. Possible values are "short", "long".
            </summary>
        </member>
        <member name="M:Bridge.Html5.Date.ValueOf">
            <summary>
            The valueOf() method returns the primitive value of a Date object.
            </summary>
            <remarks>The valueOf() method returns the primitive value of a Date object as a number data type, the number of milliseconds since midnight 01 January, 1970 UTC.</remarks>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the given date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.ToISOString">
            <summary>
            The toISOString() method returns a string in simplified extended ISO format (ISO 8601), which is always 24 or 27 characters long (YYYY-MM-DDTHH:mm:ss.sssZ or ±YYYYYY-MM-DDTHH:mm:ss.sssZ, respectively). The timezone is always zero UTC offset, as denoted by the suffix "Z".
            </summary>
            <returns>A string representing the given date in the ISO 8601 format according to universal time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.ToUTCString">
            <summary>
            The toUTCString() method converts a date to a string, using the UTC time zone.
            </summary>
            <returns>A string representing the given date using the UTC time zone.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetTime">
            <summary>
            The getTime() method returns the numeric value corresponding to the time for the specified date according to universal time. You can use this method to help assign a date and time to another Date object. This method is functionally equivalent to the valueOf() method.
            </summary>
            <returns>A number representing the milliseconds elapsed between 1 January 1970 00:00:00 UTC and the given date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetTime(System.Double)">
            <summary>
            The setTime() method sets the Date object to the time represented by a number of milliseconds since January 1, 1970, 00:00:00 UTC.
            </summary>
            <param name="time">The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date (effectively, the value of the argument).</param>
        </member>
        <member name="M:Bridge.Html5.Date.GetTimezoneOffset">
            <summary>
            The getTimezoneOffset() method returns the time zone difference, in minutes, from current locale (host system settings) to UTC.
            </summary>
            <returns>A number representing the time-zone offset from UTC, in minutes, for the date based on current host system settings.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetFullYear">
            <summary>
            The getFullYear() method returns the year of the specified date according to local time. Use this method instead of the getYear() method.
            </summary>
            <returns>A number corresponding to the year of the given date, according to local time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetUTCFullYear">
            <summary>
            The getUTCFullYear() method returns the year in the specified date according to universal time.
            </summary>
            <returns>A number representing the year in the given date according to universal time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetMonth">
            <summary>
            The getMonth() method returns the month in the specified date according to local time, as a zero-based value (where zero indicates the first month of the year).
            </summary>
            <returns>An integer number, between 0 and 11, representing the month in the given date according to local time. 0 corresponds to January, 1 to February, and so on.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetUTCMonth">
            <summary>
            The getUTCMonth() returns the month of the specified date according to universal time, as a zero-based value (where zero indicates the first month of the year).
            </summary>
            <returns>An integer number, between 0 and 11, corresponding to the month of the given date according to universal time. 0 for January, 1 for February, 2 for March, and so on.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetDate">
            <summary>
            The getDate() method returns the day of the month for the specified date according to local time.
            </summary>
            <returns>An integer number, between 1 and 31, representing the day of the month for the given date according to local time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetUTCDate">
            <summary>
            The getUTCDate() method returns the day (date) of the month in the specified date according to universal time.
            </summary>
            <returns>An integer number, between 1 and 31, representing the day of the month in the given date according to universal time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetDay">
            <summary>
            The getDay() method returns the day of the week for the specified date according to local time, where 0 represents Sunday.
            </summary>
            <returns>An integer number corresponding to the day of the week for the given date, according to local time: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetUTCDay">
            <summary>
            The getUTCDay() method returns the day of the week in the specified date according to universal time, where 0 represents Sunday.
            </summary>
            <returns>An integer number corresponding to the day of the week for the given date, according to universal time: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetHours">
            <summary>
            The getHours() method returns the hour for the specified date, according to local time.
            </summary>
            <returns>An integer number, between 0 and 23, representing the hour for the given date according to local time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetUTCHours">
            <summary>
            The getUTCHours() method returns the hours in the specified date according to universal time.
            </summary>
            <returns>An integer number, between 0 and 23, representing the hours in the given date according to universal time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetMinutes">
            <summary>
            The getMinutes() method returns the minutes in the specified date according to local time.
            </summary>
            <returns>An integer number, between 0 and 59, representing the minutes in the given date according to local time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetUTCMinutes">
            <summary>
            The getUTCMinutes() method returns the minutes in the specified date according to universal time.
            </summary>
            <returns>An integer number, between 0 and 59, representing the minutes in the given date according to universal time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetSeconds">
            <summary>
            The getSeconds() method returns the seconds in the specified date according to local time.
            </summary>
            <returns>An integer number, between 0 and 59, representing the seconds in the given date according to local time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetUTCSeconds">
            <summary>
            The getUTCSeconds() method returns the seconds in the specified date according to universal time.
            </summary>
            <returns>An integer number, between 0 and 59, representing the seconds in the given date according to universal time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetMilliseconds">
            <summary>
            The getMilliseconds() method returns the milliseconds in the specified date according to local time.
            </summary>
            <returns>A number, between 0 and 999, representing the milliseconds for the given date according to local time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.GetUTCMilliseconds">
            <summary>
            The getUTCMilliseconds() method returns the milliseconds in the specified date according to universal time.
            </summary>
            <returns>An integer number, between 0 and 999, representing the milliseconds in the given date according to universal time.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetMilliseconds(System.Int32)">
            <summary>
            The setMilliseconds() method sets the milliseconds for a specified date according to local time.
            </summary>
            <param name="milliseconds">A number between 0 and 999, representing the milliseconds.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCMilliseconds(System.Int32)">
            <summary>
            The setUTCMilliseconds() method sets the milliseconds for a specified date according to universal time.
            </summary>
            <param name="milliseconds">A number between 0 and 999, representing the milliseconds.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetSeconds(System.Int32)">
            <summary>
            The setSeconds() method sets the seconds for a specified date according to local time.
            </summary>
            <param name="secondsValue">An integer between 0 and 59, representing the seconds.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetSeconds(System.Int32,System.Int32)">
            <summary>
            The setSeconds() method sets the seconds for a specified date according to local time.
            </summary>
            <param name="secondsValue">An integer between 0 and 59, representing the seconds.</param>
            <param name="msValue">A number between 0 and 999, representing the milliseconds.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCSeconds(System.Int32)">
            <summary>
            The setUTCSeconds() method sets the seconds for a specified date according to universal time.
            </summary>
            <param name="secondsValue">An integer between 0 and 59, representing the seconds.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCSeconds(System.Int32,System.Int32)">
            <summary>
            The setUTCSeconds() method sets the seconds for a specified date according to universal time.
            </summary>
            <param name="secondsValue">An integer between 0 and 59, representing the seconds.</param>
            <param name="msValue">A number between 0 and 999, representing the milliseconds.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetMinutes(System.Int32)">
            <summary>
            The setMinutes() method sets the minutes for a specified date according to local time.
            </summary>
            <param name="minutesValue">An integer between 0 and 59, representing the minutes.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetMinutes(System.Int32,System.Int32)">
            <summary>
            The setMinutes() method sets the minutes for a specified date according to local time.
            </summary>
            <param name="minutesValue">An integer between 0 and 59, representing the minutes.</param>
            <param name="secondsValue">An integer between 0 and 59, representing the seconds. If you specify the secondsValue parameter, you must also specify the minutesValue.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetMinutes(System.Int32,System.Int32,System.Int32)">
            <summary>
            The setMinutes() method sets the minutes for a specified date according to local time.
            </summary>
            <param name="minutesValue">An integer between 0 and 59, representing the minutes.</param>
            <param name="secondsValue">An integer between 0 and 59, representing the seconds. If you specify the secondsValue parameter, you must also specify the minutesValue.</param>
            <param name="msValue">A number between 0 and 999, representing the milliseconds. If you specify the msValue parameter, you must also specify the minutesValue and secondsValue.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCMinutes(System.Int32)">
            <summary>
            The setUTCMinutes() method sets the minutes for a specified date according to universal time.
            </summary>
            <param name="minutesValue">An integer between 0 and 59, representing the minutes.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCMinutes(System.Int32,System.Int32)">
            <summary>
            The setUTCMinutes() method sets the minutes for a specified date according to universal time.
            </summary>
            <param name="minutesValue">An integer between 0 and 59, representing the minutes.</param>
            <param name="secondsValue">An integer between 0 and 59, representing the seconds. If you specify the secondsValue parameter, you must also specify the minutesValue.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCMinutes(System.Int32,System.Int32,System.Int32)">
            <summary>
            The setUTCMinutes() method sets the minutes for a specified date according to universal time.
            </summary>
            <param name="minutesValue">An integer between 0 and 59, representing the minutes.</param>
            <param name="secondsValue">An integer between 0 and 59, representing the seconds. If you specify the secondsValue parameter, you must also specify the minutesValue.</param>
            <param name="msValue">A number between 0 and 999, representing the milliseconds. If you specify the msValue parameter, you must also specify the minutesValue and secondsValue.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetHours(System.Int32)">
            <summary>
            The setHours() method sets the hours for a specified date according to local time, and returns the number of milliseconds since 1 January 1970 00:00:00 UTC until the time represented by the updated Date instance.
            </summary>
            <param name="hoursValue">An integer between 0 and 23, representing the hour.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetHours(System.Int32,System.Int32)">
            <summary>
            The setHours() method sets the hours for a specified date according to local time, and returns the number of milliseconds since 1 January 1970 00:00:00 UTC until the time represented by the updated Date instance.
            </summary>
            <param name="hoursValue">An integer between 0 and 23, representing the hour.</param>
            <param name="minutesValue">An integer between 0 and 59, representing the minutes.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetHours(System.Int32,System.Int32,System.Int32)">
            <summary>
            The setHours() method sets the hours for a specified date according to local time, and returns the number of milliseconds since 1 January 1970 00:00:00 UTC until the time represented by the updated Date instance.
            </summary>
            <param name="hoursValue">An integer between 0 and 23, representing the hour.</param>
            <param name="minutesValue">An integer between 0 and 59, representing the minutes.</param>
            <param name="secondsValue">An integer between 0 and 59, representing the seconds. If you specify the secondsValue parameter, you must also specify the minutesValue.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetHours(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            The setHours() method sets the hours for a specified date according to local time, and returns the number of milliseconds since 1 January 1970 00:00:00 UTC until the time represented by the updated Date instance.
            </summary>
            <param name="hoursValue">An integer between 0 and 23, representing the hour.</param>
            <param name="minutesValue">An integer between 0 and 59, representing the minutes.</param>
            <param name="secondsValue">An integer between 0 and 59, representing the seconds. If you specify the secondsValue parameter, you must also specify the minutesValue.</param>
            <param name="msValue">A number between 0 and 999, representing the milliseconds. If you specify the msValue parameter, you must also specify the minutesValue and secondsValue.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCHours(System.Int32)">
            <summary>
            The setUTCHours() method sets the hour for a specified date according to universal time, and returns the number of milliseconds since 1 January 1970 00:00:00 UTC until the time represented by the updated Date instance.
            </summary>
            <param name="hoursValue">An integer between 0 and 23, representing the hour.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCHours(System.Int32,System.Int32)">
            <summary>
            The setUTCHours() method sets the hour for a specified date according to universal time, and returns the number of milliseconds since 1 January 1970 00:00:00 UTC until the time represented by the updated Date instance.
            </summary>
            <param name="hoursValue">An integer between 0 and 23, representing the hour.</param>
            <param name="minutesValue">An integer between 0 and 59, representing the minutes.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCHours(System.Int32,System.Int32,System.Int32)">
            <summary>
            The setUTCHours() method sets the hour for a specified date according to universal time, and returns the number of milliseconds since 1 January 1970 00:00:00 UTC until the time represented by the updated Date instance.
            </summary>
            <param name="hoursValue">An integer between 0 and 23, representing the hour.</param>
            <param name="minutesValue">An integer between 0 and 59, representing the minutes.</param>
            <param name="secondsValue">An integer between 0 and 59, representing the seconds. If you specify the secondsValue parameter, you must also specify the minutesValue.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCHours(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            The setUTCHours() method sets the hour for a specified date according to universal time, and returns the number of milliseconds since 1 January 1970 00:00:00 UTC until the time represented by the updated Date instance.
            </summary>
            <param name="hoursValue">An integer between 0 and 23, representing the hour.</param>
            <param name="minutesValue">An integer between 0 and 59, representing the minutes.</param>
            <param name="secondsValue">An integer between 0 and 59, representing the seconds. If you specify the secondsValue parameter, you must also specify the minutesValue.</param>
            <param name="msValue">A number between 0 and 999, representing the milliseconds. If you specify the msValue parameter, you must also specify the minutesValue and secondsValue.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetDate(System.Int32)">
            <summary>
            The setDate() method sets the day of the Date object relative to the beginning of the currently set month.
            </summary>
            <param name="dayValue">An integer representing the day of the month.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the given date (the Date object is also changed in place).</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCDate(System.Int32)">
            <summary>
            The setUTCDate() method sets the day of the month for a specified date according to universal time.
            </summary>
            <param name="dayValue">An integer representing the day of the month.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetMonth(System.Int32)">
            <summary>
            The setMonth() method sets the month for a specified date according to the currently set year.
            </summary>
            <param name="monthValue">An integer between 0 and 11, representing the months January through December.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetMonth(System.Int32,System.Int32)">
            <summary>
            The setMonth() method sets the month for a specified date according to the currently set year.
            </summary>
            <param name="monthValue">An integer between 0 and 11, representing the months January through December.</param>
            <param name="dayValue">An integer from 1 to 31, representing the day of the month.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCMonth(System.Int32)">
            <summary>
            The setUTCMonth() method sets the month for a specified date according to universal time.
            </summary>
            <param name="monthValue">An integer between 0 and 11, representing the months January through December.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCMonth(System.Int32,System.Int32)">
            <summary>
            The setUTCMonth() method sets the month for a specified date according to universal time.
            </summary>
            <param name="monthValue">An integer between 0 and 11, representing the months January through December.</param>
            <param name="dayValue">An integer from 1 to 31, representing the day of the month.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetFullYear(System.Int32)">
            <summary>
            The setFullYear() method sets the full year for a specified date according to local time. Returns new timestamp.
            </summary>
            <param name="yearValue">An integer specifying the numeric value of the year, for example, 1995.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetFullYear(System.Int32,System.Int32)">
            <summary>
            The setFullYear() method sets the full year for a specified date according to local time. Returns new timestamp.
            </summary>
            <param name="yearValue">An integer specifying the numeric value of the year, for example, 1995.</param>
            <param name="monthValue">An integer between 0 and 11 representing the months January through December.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetFullYear(System.Int32,System.Int32,System.Int32)">
            <summary>
            The setFullYear() method sets the full year for a specified date according to local time. Returns new timestamp.
            </summary>
            <param name="yearValue">An integer specifying the numeric value of the year, for example, 1995.</param>
            <param name="monthValue">An integer between 0 and 11 representing the months January through December.</param>
            <param name="dayValue">An integer between 1 and 31 representing the day of the month. If you specify the dayValue parameter, you must also specify the monthValue.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCFullYear(System.Int32)">
            <summary>
            The setUTCFullYear() method sets the full year for a specified date according to universal time.
            </summary>
            <param name="yearValue">An integer specifying the numeric value of the year, for example, 1995.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCFullYear(System.Int32,System.Int32)">
            <summary>
            The setUTCFullYear() method sets the full year for a specified date according to universal time.
            </summary>
            <param name="yearValue">An integer specifying the numeric value of the year, for example, 1995.</param>
            <param name="monthValue">An integer between 0 and 11 representing the months January through December.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="M:Bridge.Html5.Date.SetUTCFullYear(System.Int32,System.Int32,System.Int32)">
            <summary>
            The setUTCFullYear() method sets the full year for a specified date according to universal time.
            </summary>
            <param name="yearValue">An integer specifying the numeric value of the year, for example, 1995.</param>
            <param name="monthValue">An integer between 0 and 11 representing the months January through December.</param>
            <param name="dayValue">An integer between 1 and 31 representing the day of the month. If you specify the dayValue parameter, you must also specify the monthValue.</param>
            <returns>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</returns>
        </member>
        <member name="T:Bridge.Html5.DOMParser">
            <summary>
            DOMParser can parse XML or HTML source stored in a string into a DOM Document.
            </summary>
        </member>
        <member name="M:Bridge.Html5.DOMParser.#ctor">
            <summary>
            Constructs a new DOMParser object.
            </summary>
        </member>
        <member name="M:Bridge.Html5.DOMParser.ParseFromString(System.String,System.String)">
            <summary>
            Builds an XMLDocument object from the specified string.
            </summary>
            <param name="xmlString">String that specifies the contents of the XML file to parse.</param>
            <param name="mimeType">String that specifies the content type of the string to parse. Can be one of the following values <see cref="T:Bridge.Html5.DOMParser.SupportedType"/>.
            If type does not match a value in the <see cref="T:Bridge.Html5.DOMParser.SupportedType"/>, an exception is thrown.
            </param>
            <returns>Document object contained the parsed content if successful. If not successful, returns a Document describing the error.</returns>
        </member>
        <member name="T:Bridge.Html5.DOMParser.SupportedType">
            <summary>
            Supported MIME types
            </summary>
        </member>
        <member name="F:Bridge.Html5.DOMParser.SupportedType.TextHtml">
            <summary>
            text/html
            </summary>
        </member>
        <member name="F:Bridge.Html5.DOMParser.SupportedType.TextXml">
            <summary>
            text/xml
            </summary>
        </member>
        <member name="F:Bridge.Html5.DOMParser.SupportedType.ApplicationXml">
            <summary>
            application/xml
            </summary>
        </member>
        <member name="F:Bridge.Html5.DOMParser.SupportedType.ApplicationXhtmlXml">
            <summary>
            application/xhtml+xml
            </summary>
        </member>
        <member name="F:Bridge.Html5.DOMParser.SupportedType.ImageSvgXml">
            <summary>
            image/svg+xml
            </summary>
        </member>
        <member name="F:Bridge.Html5.DataTransferItem.Kind">
            <summary>
            The kind of drag data item such as a string or a file.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DataTransferItem.Type">
            <summary>
            The drag data item's type, typically a MIME type.
            </summary>
        </member>
        <member name="M:Bridge.Html5.DataTransferItem.GetAsFile">
            <summary>
            Returns the File object associated with the drag data item (or null if the drag item is not a file).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DataTransferItem.GetAsString(System.Action{System.String})">
            <summary>
            Invokes the specified callback with the drag data item string as its argument.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:Bridge.Html5.DataTransferItemList.Add(Bridge.Html5.File)">
            <summary>
            Adds an File to the drag item list and returns a DataTransferItem for the new item.
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DataTransferItemList.Add(System.String,System.String)">
            <summary>
            Adds a string of a specific type to the drag item list and returns a DataTransferItem for the new item.
            </summary>
            <param name="data">A string representing the drag item's data.</param>
            <param name="type">A string of the drag item's type.
            Some example types are text/html and text/plain.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DataTransferItemList.Remove(System.Int32)">
            <summary>
            Removes the drag item from the list at the given index.
            </summary>
            <param name="index">index of the item in the drag data list to remove.</param>
        </member>
        <member name="M:Bridge.Html5.DataTransferItemList.Clear">
            <summary>
            Removes all of the drag items from the list.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DataTransferItemList.Length">
            <summary>
            Number of drag items in the list.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DataTransfer.DropEffect">
            <summary>
            Type of drag-and-drop.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DataTransfer.EffectAllowed">
            <summary>
            Types of operations that are possible.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DataTransfer.Items">
            <summary>
            List of all of the drag data.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DataTransfer.Files">
            <summary>
            Contains a list of all the local files available on the data transfer.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DataTransfer.Types">
            <summary>
            formats that were set in the dragstart event.
            </summary>
        </member>
        <member name="M:Bridge.Html5.DataTransfer.ClearData(System.String)">
            <summary>
            Remove the data associated with a given type. The type argument is optional. If the type is empty or not
            specified, the data associated with all types is removed. If data for the specified type does not exist,
            or the data transfer contains no data, this method will have no effect.
            </summary>
            <param name="format">A string representing the type of data to remove. (Optional)</param>
        </member>
        <member name="M:Bridge.Html5.DataTransfer.GetData(System.String)">
            <summary>
            Retrieves the data for a given type, or an empty string if data for that type does not exist or the data
            transfer contains no data.
            </summary>
            <param name="format">Type of data to retrieve. Example data types are text/plain and text/uri-list.</param>
            <returns>rag data for the specified format.</returns>
        </member>
        <member name="M:Bridge.Html5.DataTransfer.SetData(System.String,System.String)">
            <summary>
            Set the data for a given type. If data for the type does not exist, it is added at the end, such that the
            last item in the types list will be the new format. If data for the type already exists, the existing data
            is replaced in the same position.
            </summary>
            <param name="format">Type of the drag data to add to the drag object.
            Example data types are text/plain and text/uri-list.</param>
            <param name="data">Data to add to the drag object.</param>
        </member>
        <member name="M:Bridge.Html5.DataTransfer.SetDragImage(Bridge.Html5.HTMLElement,System.Int32,System.Int32)">
            <summary>
            Set the image to be used for dragging if a custom one is desired.
            </summary>
            <param name="img">An image Element element to use for the drag feedback image.</param>
            <param name="xOffset">A long indicating the horizontal offset within the image.</param>
            <param name="yOffset">A long indicating the vertical offset within the image.</param>
        </member>
        <member name="T:Bridge.Html5.Element">
             <summary>
             The Element interface represents an object of a Document. This interface describes methods and properties common to all kinds of elements. Specific behaviors are described in interfaces which inherit from Element but add additional functionality. For example, the HTMLElement interface is the base interface for HTML elements, while the SVGElement interface is the basis for all SVG elements.
            
             Languages outside the realm of the Web platform, like XUL through the XULElement interface, also implement it.
             </summary>
        </member>
        <member name="F:Bridge.Html5.Element.Attributes">
            <summary>
            Collection of all attribute nodes registered to the specified node.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.ChildElementCount">
            <summary>
            The number of child nodes that are elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.Children">
            <summary>
            All child elements of an element as a collection.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.ClassList">
            <summary>
            Token list of class attribute
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.ClassName">
            <summary>
            gets and sets the value of the class attribute of the specified element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.ClientHeight">
            <summary>
            The Element.clientHeight read-only property returns the inner height of an element in pixels, including padding but not the horizontal scrollbar height, border, or margin.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.ClientLeft">
            <summary>
            The width of the left border of an element in pixels. It includes the width of the vertical scrollbar if the text direction of the element is right–to–left and if there is an overflow causing a left vertical scrollbar to be rendered. clientLeft does not include the left margin or the left padding. clientLeft is read-only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.ClientTop">
            <summary>
            The width of the top border of an element in pixels. It does not include the top margin or padding. clientTop is read-only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.ClientWidth">
            <summary>
            The Element.clientWidth property is the inner width of an element in pixels. It includes padding but not the vertical scrollbar (if present, if rendered), border or margin.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.FirstElementChild">
            <summary>
            The ParentNode.firstElementChild read-only property returns the object's first child Element, or null if there are no child elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.Hidden">
            <summary>
            The hidden global attribute is a Boolean attribute indicating that the element is not yet, or is no longer, relevant.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.Id">
            <summary>
            Gets or sets the element's identifier (attribute id).
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.InnerHTML">
            <summary>
            The innerHTML sets or gets the HTML syntax describing the element's descendants.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.LastElementChild">
            <summary>
            The ParentNode.lastElementChild read-only method returns the object's last child Element or null if there are no child elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.PreviousElementSibling">
            <summary>
            Returns the Element immediately prior to this ChildNode in its parent's children list, or null if there is no Element in the list prior to this ChildNode.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.NextElementSibling">
            <summary>
            Returns the Element immediately following this ChildNode in its parent's children list, or null if there is no Element in the list following this ChildNode.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.OuterHTML">
            <summary>
            The outerHTML attribute of the element DOM interface gets the serialized HTML fragment describing the element including its descendants. It can be set to replace the element with nodes parsed from the given string.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.ScrollHeight">
            <summary>
            The Element.scrollHeight read-only attribute is a measurement of the height of an element's content including content not visible on the screen due to overflow. The scrollHeight value is equal to the minimum clientHeight the element would require in order to fit all the content in the viewpoint without using a vertical scrollbar. It includes the element padding but not its margin.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.ScrollLeft">
            <summary>
            The Element.scrollLeft property gets or sets the number of pixels that an element's content is scrolled to the left.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.ScrollTop">
            <summary>
            The Element.scrollTop property gets or sets the number of pixels that the content of an element is scrolled upward. An element's scrollTop is a measurement of the distance of an element's top to its topmost visible content. When an element content does not generate a vertical scrollbar, then its scrollTop value defaults to 0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.ScrollWidth">
            <summary>
            The Element.scrollWidth read–only property returns either the width in pixels of the content of an element or the width of the element itself, whichever is greater. If the element is wider than its content area (for example, if there are scroll bars for scrolling through the content), the scrollWidth is larger than the clientWidth.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.TagName">
            <summary>
            Returns the name of the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Element.OnWheel">
            <summary>
            Returns the event handling code for the wheel event.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Element.GetAttribute(System.String)">
             <summary>
             Returns the value of a specified attribute on the element. If the given attribute does not exist, the value returned will either be null or "" (the empty string)
             </summary>
             <param name="attributeName">name of the attribute whose value you want to get.</param>
             <returns>string containing the value of attributeName.</returns>
            
        </member>
        <member name="M:Bridge.Html5.Element.GetAttributeNS(System.String,System.String)">
            <summary>
             returns the string value of the attribute with the specified namespace and name. If the named attribute does not exist, the value returned will either be null or "" (the empty string);
            </summary>
            <param name="namespace">The namespace in which to look for the specified attribute.</param>
            <param name="attributeName"></param>
            <returns>The string value of the specified attribute. If the attribute doesn't exist, the result is null.</returns>
        </member>
        <member name="M:Bridge.Html5.Element.GetBoundingClientRect">
            <summary>
            The Element.getBoundingClientRect() method returns a text rectangle object that encloses a group of text rectangles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Element.GetClientRects">
            <summary>
            The Element.getClientRects() method returns a collection of rectangles that indicate the bounding rectangles for each box in a client.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Element.GetElementsByClassName(System.String)">
            <summary>
            Returns an array-like object of all child elements which have all of the given class names.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Element.GetElementsByTagName(System.String)">
            <summary>
            Retrieve a set of all descendant elements, of a particular tag name, from the current element.
            </summary>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Element.GetElementsByTagNameNS(System.String,System.String)">
            <summary>
            Retrieve a set of all descendant elements, of a particular tag name and namespace, from the current element.
            </summary>
            <param name="namespaceURI">namespace URI of elements to look for</param>
            <param name="localName">local name of elements to look for or the special value "*", which matches all elements </param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Element.HasAttribute(System.String)">
            <summary>
            Check if the element has the specified attribute, or not.
            </summary>
            <param name="attName">string representing the name of the attribute.</param>
            <returns>holds the return value true or false.</returns>
        </member>
        <member name="M:Bridge.Html5.Element.HasAttributeNS(System.String,System.String)">
            <summary>
            Check if the element has the specified attribute, in the specified namespace, or not.
            </summary>
            <param name="namespace">string specifying the namespace of the attribute.</param>
            <param name="localName">name of the attribute.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Element.QuerySelector(System.String)">
            <summary>
            Returns the first element that is a descendant of the element on which it is invoked that matches the specified group of selectors.
            </summary>
            <param name="selectors">selectors is a group of selectors to match on.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Element.QuerySelectorAll(System.String)">
            <summary>
            Returns a non-live NodeList of all elements descended from the element on which it is invoked that match the specified group of CSS selectors.
            </summary>
            <param name="selectors">selectors is a group of selectors to match on.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Element.Remove">
            <summary>
            The ChildNode.remove method removes the object from the tree it belongs to.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Element.RemoveAttribute(System.String)">
            <summary>
            Removes an attribute from the specified element.
            </summary>
            <param name="attrName">String that names the attribute to be removed from element.</param>
        </member>
        <member name="M:Bridge.Html5.Element.RemoveAttributeNS(System.String,System.String)">
            <summary>
            Remove the attribute with the specified name and namespace, from the current node.
            </summary>
            <param name="namespaceURI">String that contains the namespace of the attribute.</param>
            <param name="attrName">String that names the attribute to be removed from the current node.</param>
        </member>
        <member name="M:Bridge.Html5.Element.ScrollIntoView(System.Boolean)">
            <summary>
            Scrolls the page until the element gets into the view.
            </summary>
            <param name="alignWithTop">If true, the scrolled element is aligned with the top of the scroll area. If false, it is aligned with the bottom.</param>
        </member>
        <member name="M:Bridge.Html5.Element.SetAttribute(System.String,System.String)">
            <summary>
            Adds a new attribute or changes the value of an existing attribute on the specified element.
            </summary>
            <param name="name">the name of the attribute as a string.</param>
            <param name="value">the desired new value of the attribute.</param>
        </member>
        <member name="M:Bridge.Html5.Element.SetAttributeNS(System.String,System.String,System.String)">
            <summary>
            Adds a new attribute or changes the value of an attribute with the given namespace and name.
            </summary>
            <param name="namespaceURI">String specifying the namespace of the attribute.</param>
            <param name="name">string identifying the attribute to be set.</param>
            <param name="value">the desired string value of the new attribute.</param>
        </member>
        <member name="M:Bridge.Html5.Element.SetCapture">
            <summary>
            Call this method during the handling of a mousedown event to retarget all mouse events to this element until the mouse button is released or document.releaseCapture() is called.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Element.SetCapture(System.Boolean)">
            <summary>
            Call this method during the handling of a mousedown event to retarget all mouse events to this element until the mouse button is released or document.releaseCapture() is called.
            </summary>
            <param name="retargetToElement">If true, all events are targeted directly to this element; if false, events can also fire at descendants of this element.</param>
        </member>
        <member name="M:Bridge.Html5.Element.InsertAdjacentHTML(Bridge.Html5.InsertPosition,System.String)">
            <summary>
            Parses the specified text as HTML or XML and inserts the resulting nodes into the DOM tree at a specified position. It does not reparse the element it is being used on and thus it does not corrupt the existing elements inside the element. This, and avoiding the extra step of serialization make it much faster than direct innerHTML manipulation.
            </summary>
            <param name="position">The position relative to the element</param>
            <param name="text">String to be parsed as HTML or XML and inserted into the tree.</param>
        </member>
        <member name="T:Bridge.Html5.HTMLTemplateElement">
            <summary>
            The template element is used to declare fragments of HTML that can be cloned and inserted in the document by script.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTemplateElement.Content">
            <summary>
            The content IDL attribute must return the template element's template contents.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DragEvent.DataTransfer">
            <summary>
            The data that is transferred during a drag and drop interaction.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DragEventInit.DataTransfer">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.DragEvent`1">
            <summary>
            A generic version of the DragEvent class. The type parameter is a type of CurrentTarget.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type.</typeparam>
        </member>
        <member name="F:Bridge.Html5.DragEvent`1.CurrentTarget">
            <summary>
            Identifies the current target for the event, as the event traverses the DOM. It always refers to the element the event handler has been attached to as opposed to event.target which identifies the element on which the event occurred.
            On Internet Explorer 6 through 8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, there is no equivalent to event.currentTarget and this is the global object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DragEvent`1.Target">
            <summary>
            This property of event objects is the object the event was dispatched on. It is different than event.currentTarget when the event handler is called in bubbling or capturing phase of the event.
            On IE6-8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, the event object is not passed as an argument to the event handler function but is the window.event object. This object has an srcElement property which has the same semantics than event.target.
            </summary>
        </member>
        <member name="T:Bridge.Html5.MessageEvent">
            <summary>
            A MessageEvent interface represents a message received by a target, being a WebSocket or a WebRTC RTCDataChannel.
            </summary>
        </member>
        <member name="M:Bridge.Html5.MessageEvent.#ctor(System.String)">
            <summary>
            Creates a new MessageEvent
            </summary>
            <param name="typeArg">Is a DOMString representing the name of the event.</param>
        </member>
        <member name="M:Bridge.Html5.MessageEvent.#ctor(System.String,Bridge.Html5.MessageEventInit)">
            <summary>
            Creates a new MessageEvent
            </summary>
            <param name="typeArg">Is a DOMString representing the name of the event.</param>
            <param name="messageEventInit">Is a DOMString representing the name of the event</param>
        </member>
        <member name="F:Bridge.Html5.MessageEvent.Data">
            <summary>
            Returns a DOMString, Blob or an ArrayBuffer containing the data send by the emitter.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MessageEventInit.Data">
            <summary>
            A DOMString, Blob or an ArrayBuffer containing the data send by the emitter.
            </summary>
        </member>
        <member name="T:Bridge.Html5.CloseEvent">
            <summary>
            A CloseEvent is sent to clients using WebSockets when the connection is closed.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CloseEvent.#ctor(System.String)">
            <summary>
            Creates a new CloseEvent
            </summary>
            <param name="typeArg">Is a DOMString representing the name of the event.</param>
        </member>
        <member name="M:Bridge.Html5.CloseEvent.#ctor(System.String,Bridge.Html5.CloseEventInit)">
            <summary>
            Creates a new CloseEvent
            </summary>
            <param name="typeArg">Is a DOMString representing the name of the event.</param>
            <param name="closeEventInit">Is a CloseEventInit dictionary</param>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.Code">
            <summary>
            Close code sent by the server.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.Reason">
            <summary>
            Reason the server closed the connection. This is specific to the particular server and sub-protocol.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.WasClean">
            <summary>
            Indicates whether or not the connection was cleanly closed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.StatusCode.CLOSE_NORMAL">
            <summary>
            Normal closure; the connection successfully completed whatever purpose for which it was created.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.StatusCode.CLOSE_GOING_AWAY">
            <summary>
            The endpoint is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.StatusCode.CLOSE_PROTOCOL_ERROR">
            <summary>
            // The endpoint is terminating the connection due to a protocol error.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.StatusCode.CLOSE_UNSUPPORTED">
            <summary>
            The connection is being terminated because the endpoint received data of a type it cannot accept (for example, a text-only endpoint received binary data).
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.StatusCode.CLOSE_NO_STATUS">
            <summary>
            Reserved.  Indicates that no status code was provided even though one was expected.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.StatusCode.CLOSE_ABNORMAL">
            <summary>
            Reserved. Used to indicate that a connection was closed abnormally (that is, with no close frame being sent) when a status code is expected.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.StatusCode.UNSUPPORTED_DATA">
            <summary>
            The endpoint is terminating the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.StatusCode.POLICY_VIOLATION">
            <summary>
            The endpoint is terminating the connection because it received a message that violates its policy. This is a generic status code, used when codes 1003 and 1009 are not suitable.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.StatusCode.CLOSE_TOO_LARGE">
            <summary>
            The endpoint is terminating the connection because a data frame was received that is too large.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.StatusCode.MISSIN_EXTENTION">
            <summary>
            The client is terminating the connection because it expected the server to negotiate one or more extension, but the server didn't.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.StatusCode.INTERNAL_ERROR">
            <summary>
            The server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.StatusCode.SERVICE_RESTART">
            <summary>
            The server is terminating the connection because it is restarting. [Ref]
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.StatusCode.TRY_AGAIN_LATER">
            <summary>
            The server is terminating the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients. [Ref]
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEvent.StatusCode.TLS_HANDSHAKE">
            <summary>
            Reserved. Indicates that the connection was closed due to a failure to perform a TLS handshake (e.g., the server certificate can't be verified).
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEventInit.Code">
            <summary>
            Indicates the Close code.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEventInit.Reason">
            <summary>
            Indicates the Reason the server closed the connection. This is specific to the particular server and sub-protocol.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CloseEventInit.WasClean">
            <summary>
            Indicates whether or not the connection was cleanly closed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TouchEvent.AltKey">
            <summary>
            A Boolean value indicating whether or not the alt key was down when the touch event was fired.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TouchEvent.ChangedTouches">
            <summary>
            A <see cref="T:Bridge.Html5.TouchList"/> of all the <see cref="T:Bridge.Html5.Touch"/> objects representing individual points of contact whose states changed between the previous touch event and this one.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TouchEvent.CtrlKey">
            <summary>
            A Boolean value indicating whether or not the control key was down when the touch event was fired.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TouchEvent.MetaKey">
            <summary>
            A Boolean value indicating whether or not the meta key was down when the touch event was fired.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TouchEvent.ShiftKey">
            <summary>
            A Boolean value indicating whether or not the shift key was down when the touch event was fired.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TouchEvent.TargetTouches">
            <summary>
            A <see cref="T:Bridge.Html5.TouchList"/> of all the <see cref="T:Bridge.Html5.Touch"/> objects that are both currently in contact with the touch surface and were also started on the same element that is the target of the event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TouchEvent.Touches">
            <summary>
            A <see cref="T:Bridge.Html5.TouchList"/> of all the <see cref="T:Bridge.Html5.Touch"/> objects representing all current points of contact with the surface, regardless of target or changed status.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TouchEvent`1">
            <summary>
            A generic version of the TouchEvent class. The type parameter is a type of CurrentTarget.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type</typeparam>
        </member>
        <member name="F:Bridge.Html5.TouchEvent`1.CurrentTarget">
            <summary>
            Identifies the current target for the event, as the event traverses the DOM. It always refers to the element the event handler has been attached to as opposed to event.target which identifies the element on which the event occurred.
            On Internet Explorer 6 through 8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, there is no equivalent to event.currentTarget and this is the global object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TouchEvent`1.Target">
            <summary>
            This property of event objects is the object the event was dispatched on. It is different than event.currentTarget when the event handler is called in bubbling or capturing phase of the event.
            On IE6-8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, the event object is not passed as an argument to the event handler function but is the window.event object. This object has an srcElement property which has the same semantics than event.target.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Function">
            <summary>
            Equivalent to the Function type in Javascript.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Function.#ctor(System.String[])">
            <summary>
            Creates a new function with the specified implementation, and the
            set of named parameters.
            </summary>
            <param name="argNamesAndBody">Argument names, followed by the function body.</param>
        </member>
        <member name="M:Bridge.Html5.Function.#ctor(System.String,System.String)">
            <summary>
            Creates a new function with the specified implementation, and the
            set of named parameters.
            </summary>
            <param name="parameters">List of comma separated argument names</param>
            <param name="body">The function body</param>
        </member>
        <member name="M:Bridge.Html5.Function.#ctor(System.String[],System.String)">
            <summary>
            Creates a new function with the specified implementation, and the
            set of named parameters.
            </summary>
            <param name="parameters">Argument names</param>
            <param name="body">The function body</param>
        </member>
        <member name="F:Bridge.Html5.Function.Length">
            <summary>
            Gets the number of parameters expected by the function.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Function.Apply(System.Object)">
            <summary>
            Invokes the function against the specified object instance.
            </summary>
            <param name="instance">The object used as the value of 'this' within the function.</param>
            <returns>Any return value returned from the function.</returns>
        </member>
        <member name="M:Bridge.Html5.Function.Apply(System.Object,System.Object[])">
            <summary>
            Invokes the function against the specified object instance.
            </summary>
            <param name="instance">The object used as the value of 'this' within the function.</param>
            <param name="arguments">The set of arguments to pass in into the function.</param>
            <returns>Any return value returned from the function.</returns>
        </member>
        <member name="M:Bridge.Html5.Function.Call(System.Object)">
            <summary>
            Invokes the function against the specified object instance.
            </summary>
            <param name="instance">The object used as the value of 'this' within the function.</param>
            <returns>Any return value returned from the function.</returns>
        </member>
        <member name="M:Bridge.Html5.Function.Call(System.Object,System.Object[])">
            <summary>
            Invokes the function against the specified object instance.
            </summary>
            <param name="instance">The object used as the value of 'this' within the function.</param>
            <param name="arguments">One or more arguments to pass in into the function.</param>
            <returns>Any return value returned from the function.</returns>
        </member>
        <member name="F:Bridge.Html5.Gamepad.DisplayId">
            <summary>
            Returns the VRDisplay.displayId of the associated VRDisplay — the VRDisplay that the gamepad is controlling the displayed scene of.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Gamepad.Id">
            <summary>
            An identification string for the gamepad. This string identifies the brand or style of connected gamepad device. Typically, this will include the USB vendor and a product ID.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Gamepad.Index">
            <summary>
            The index of the gamepad in the Navigator. When multiple gamepads are connected to a user agent, indices must be assigned on a first-come, first-serve basis, starting at zero. If a gamepad is disconnected, previously assigned indices must not be reassigned to gamepads that continue to be connected. However, if a gamepad is disconnected, and subsequently the same or a different gamepad is then connected, index entries must be reused.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Gamepad.Connected">
            <summary>
            Indicates whether the physical device represented by this object is still connected to the system. When a gamepad becomes unavailable, whether by being physically disconnected, powered off or otherwise unusable, the connected attribute must be set to false.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Gamepad.Timestamp">
            <summary>
            Last time the data for this gamepad was updated. Timestamp is a monotonically increasing value that allows the author to determine if the axes and button data have been updated from the hardware. The value must be relative to the navigationStart attribute of the PerformanceTiming interface. Since values are monotonically increasing they can be compared to determine the ordering of updates, as newer values will always be greater than or equal to older values. If no data has been received from the hardware, the value of the timestamp attribute should be the time relative to navigationStart when the Gamepad object was first made available to script.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Gamepad.Mapping">
            <summary>
            The mapping in use for this device. If the user agent has knowledge of the layout of the device, then it should indicate that a mapping is in use by setting this property to a known mapping name. Currently the only known mapping is "standard", which corresponds to the Standard Gamepad layout. If the user agent does not have knowledge of the device layout and is simply providing the controls as represented by the driver in use, then it must set the mapping property to an empty string.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Gamepad.Axes">
            <summary>
            Array of values for all axes of the gamepad. All axis values must be linearly normalized to the range [-1.0 .. 1.0]. As appropriate, -1.0 should correspond to "up" or "left", and 1.0 should correspond to "down" or "right". Axes that are drawn from a 2D input device should appear next to each other in the axes array, X then Y. It is recommended that axes appear in decreasing order of importance, such that element 0 and 1 typically represent the X and Y axis of a directional stick.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Gamepad.Buttons">
            <summary>
            Array of button states for all buttons of the gamepad. It is recommended that buttons appear in decreasing importance such that the primary button, secondary button, tertiary button, and so on appear as elements 0, 1, 2, ... in the buttons array.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GamepadButton.Pressed">
            <summary>
            The pressed state of the button. This property must be true if the button is currently pressed, and false if it is not pressed. For buttons which do not have a digital switch to indicate a pure pressed or released state, the user agent must choose a threshold value to indicate the button as pressed when its value is above a certain amount. If the platform API gives a recommended value, the user agent should use that. In other cases, the user agent should choose some other reasonable value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GamepadButton.Value">
            <summary>
            For buttons that have an analog sensor, this property must represent the amount which the button has been pressed. All button values must be linearly normalized to the range [0.0 .. 1.0]. 0.0 must mean fully unpressed, and 1.0 must mean fully pressed. For buttons without an analog sensor, only the values 0.0 and 1.0 for fully unpressed and fully pressed must be provided.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Touch.Identifier">
            <summary>
            Returns a unique identifier for this <see cref="T:Bridge.Html5.Touch"/> object. A given touch point (say, by a finger) will have the same identifier for the duration of its movement around the surface. This lets you ensure that you're tracking the same touch all the time.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Touch.ScreenX">
            <summary>
            Returns the X coordinate of the touch point relative to the left edge of the screen.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Touch.ScreenY">
            <summary>
            Returns the Y coordinate of the touch point relative to the top edge of the screen.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Touch.ClientX">
            <summary>
            Returns the X coordinate of the touch point relative to the left edge of the browser viewport, not including any scroll offset.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Touch.ClientY">
            <summary>
            Returns the Y coordinate of the touch point relative to the top edge of the browser viewport, not including any scroll offset.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Touch.PageX">
            <summary>
            Returns the X coordinate of the touch point relative to the left edge of the document. Unlike clientX, this value includes the horizontal scroll offset, if any.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Touch.PageY">
            <summary>
            Returns the Y coordinate of the touch point relative to the top of the document. Unlike clientY, this value includes the vertical scroll offset, if any.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Touch.Target">
            <summary>
            Returns the <see cref="T:Bridge.Html5.HTMLElement"/> on which the touch point started when it was first placed on the surface, even if the touch point has since moved outside the interactive area of that element or even been removed from the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Touch.RadiusX">
            <summary>
            Returns the X radius of the ellipse that most closely circumscribes the area of contact with the screen. The value is in pixels of the same scale as screenX.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Touch.RadiusY">
            <summary>
            Returns the Y radius of the ellipse that most closely circumscribes the area of contact with the screen. The value is in pixels of the same scale as screenY.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Touch.RotationAngle">
            <summary>
            Returns the angle (in degrees) that the ellipse described by radiusX and radiusY must be rotated, clockwise, to most accurately cover the area of contact between the user and the surface.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Touch.Force">
            <summary>
            Returns the amount of pressure being applied to the surface by the user, as a float between 0.0 (no pressure) and 1.0 (maximum pressure).
            </summary>
        </member>
        <member name="F:Bridge.Html5.TouchList.Length">
            <summary>
            The number of <see cref="T:Bridge.Html5.Touch"/> objects in the TouchList.
            </summary>
        </member>
        <member name="P:Bridge.Html5.TouchList.Item(System.Int32)">
            <summary>
            Returns the <see cref="T:Bridge.Html5.Touch"/> object at the specified index in the list.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.TouchList.GetEnumerator">
            <summary>
            Returns enumerator of <see cref="T:Bridge.Html5.Touch"/> objects in the TouchList
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.LocaleOptions">
            <summary>
            A representaion of the options used in https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleDateString
            </summary>
        </member>
        <member name="F:Bridge.Html5.LocaleOptions.LocaleMatcher">
            <summary>
            The locale matching algorithm to use. Possible values are "lookup" and "best fit"; the default is "best fit". For information about this option, see the Intl page.
            </summary>
        </member>
        <member name="F:Bridge.Html5.LocaleOptions.Usage">
            <summary>
            Whether the comparison is for sorting or for searching for matching strings. Possible values are "sort" and "search"; the default is "sort".
            </summary>
        </member>
        <member name="F:Bridge.Html5.LocaleOptions.Sensitivity">
            <summary>
            Which differences in the strings should lead to non-zero result values.
            </summary>
        </member>
        <member name="F:Bridge.Html5.LocaleOptions.IgnorePunctuation">
            <summary>
            Whether punctuation should be ignored. Possible values are true and false; the default is false.
            </summary>
        </member>
        <member name="F:Bridge.Html5.LocaleOptions.Numeric">
            <summary>
            Whether numeric collation should be used, such that "1" &lt; "2" &lt; "10". Possible values are true and false; the default is false. This option can be set through an options property or through a Unicode extension key; if both are provided, the options property takes precedence. Implementations are not required to support this property.
            </summary>
        </member>
        <member name="F:Bridge.Html5.LocaleOptions.CaseFirst">
            <summary>
            Whether upper case or lower case should sort first. Possible values are "upper", "lower", or "false" (use the locale's default); the default is "false". This option can be set through an options property or through a Unicode extension key; if both are provided, the options property takes precedence. Implementations are not required to support this property.
            </summary>
        </member>
        <member name="T:Bridge.Html5.CaseFirst">
            <summary>
            Whether upper case or lower case should sort first. Possible values are "upper", "lower", or "false" (use the locale's default); the default is "false". This option can be set through an options property or through a Unicode extension key; if both are provided, the options property takes precedence. Implementations are not required to support this property.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Sensitivity">
            <summary>
            Which differences in the strings should lead to non-zero result values.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Sensitivity.Base">
            <summary>
            Only strings that differ in base letters compare as unequal. Examples: a ≠ b, a = á, a = A.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Sensitivity.Accent">
            <summary>
            Only strings that differ in base letters or accents and other diacritic marks compare as unequal. Examples: a ≠ b, a ≠ á, a = A.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Sensitivity.Case">
            <summary>
            Only strings that differ in base letters or case compare as unequal. Examples: a ≠ b, a = á, a ≠ A.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Sensitivity.Variant">
            <summary>
            Strings that differ in base letters, accents and other diacritic marks, or case compare as unequal. Other differences may also be taken into consideration. Examples: a ≠ b, a ≠ á, a ≠ A.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Usage">
            <summary>
            Whether the comparison is for sorting or for searching for matching strings. Possible values are "sort" and "search"; the default is "sort".
            </summary>
        </member>
        <member name="T:Bridge.Html5.LocaleMatcher">
            <summary>
            The locale matching algorithm to use. Possible values are "lookup" and "best fit"; the default is "best fit". For information about this option, see the Intl page.
            </summary>
        </member>
        <member name="F:Bridge.Html5.LocaleMatcher.Lookup">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.LocaleMatcher.BestFit">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.MutationRecord">
            <summary>
            see <a href="https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord">MDN</a>
            </summary>
        </member>
        <member name="T:Bridge.Html5.MutationObserverInit">
            <summary>
            see <a href="https://developer.mozilla.org/en/docs/Web/API/MutationObserver#MutationObserverInit">MDN</a>
            </summary>
        </member>
        <member name="T:Bridge.Html5.MutationObserver">
            <summary>
            Provides developers a way to react to changes in a DOM. It is designed as a replacement for Mutation Events defined in the DOM3 Events specification.
            see <a href="https://developer.mozilla.org/en/docs/Web/API/MutationObserver">MDN</a>
            </summary>
        </member>
        <member name="M:Bridge.Html5.MutationObserver.#ctor(System.Action{Bridge.Html5.MutationRecord[],Bridge.Html5.MutationObserver})">
            <summary>
            Constructor for instantiating new DOM mutation observers.
            </summary>
            <param name="callback">The function which will be called on each DOM mutation. The observer will call this function with two arguments. The first is an array of objects, each of type MutationRecord. The second is this MutationObserver instance.</param>
        </member>
        <member name="M:Bridge.Html5.MutationObserver.Observe(Bridge.Html5.Node,Bridge.Html5.MutationObserverInit)">
            <summary>
            Registers the MutationObserver instance to receive notifications of DOM mutations on the specified node.
            </summary>
            <param name="target">The Node on which to observe DOM mutations.</param>
            <param name="options">A MutationObserverInit object, specifies which DOM mutations should be reported.</param>
        </member>
        <member name="M:Bridge.Html5.MutationObserver.Disconnect">
            <summary>
            Stops the MutationObserver instance from receiving notifications of DOM mutations. Until the observe() method is used again, observer's callback will not be invoked.
            </summary>
        </member>
        <member name="M:Bridge.Html5.MutationObserver.TakeRecords">
            <summary>
            Empties the MutationObserver instance's record queue and returns what was in there.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.StringPrototype">
            <summary>
            String global object extension methods for the ECMA String prototype object.
            </summary>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Match(System.String,Bridge.Html5.RegExp)">
            <summary>
            The match() method retrieves the matches when matching a string against a regular expression.
            </summary>
            <param name="str">A string instance</param>
            <param name="regex">A regular expression object. If a non-Regex object obj is passed, it is implicitly converted to a Regex by using new Regex(obj).</param>
            <returns>An Array containing the entire match result and any parentheses-captured matched results, or null if there were no matches.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Match(System.String,System.String)">
            <summary>
            The match() method retrieves the matches when matching a string against a regular expression.
            </summary>
            <param name="str">A string instance</param>
            <param name="regex">A regular expression object. If a non-Regex object obj is passed, it is implicitly converted to a Regex by using new Regex(obj).</param>
            <returns>An Array containing the entire match result and any parentheses-captured matched results, or null if there were no matches.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Search(System.String,Bridge.Html5.RegExp)">
            <summary>
            The search() method executes a search for a match between a regular expression and this String object.
            </summary>
            <param name="str">A string instance</param>
            <param name="regex">A regular expression object. If a non-Regex object obj is passed, it is implicitly converted to a Regex by using new Regex(obj).</param>
            <returns>If successful, returns the index of the first match of the regular expression inside the string. Otherwise, it returns -1.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Search(System.String,System.String)">
            <summary>
            The search() method executes a search for a match between a regular expression and this String object.
            </summary>
            <param name="str">A string instance</param>
            <param name="regex">A regular expression object. If a non-Regex object obj is passed, it is implicitly converted to a Regex by using new Regex(obj).</param>
            <returns>If successful, returns the index of the first match of the regular expression inside the string. Otherwise, it returns -1.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.ToLowerCase(System.String)">
            <summary>
            The toLowerCase() method returns the calling string value converted to lowercase.
            </summary>
            <param name="str">A string instance</param>
            <returns>A new string representing the calling string converted to lower case.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.ToLocaleLowerCase(System.String)">
            <summary>
            The toLocaleLowerCase() method returns the calling string value converted to lower case, according to any locale-specific case mappings.
            </summary>
            <param name="str">A string instance</param>
            <returns>A new string representing the calling string converted to lower case, according to any locale-specific case mappings.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.ToUpperCase(System.String)">
            <summary>
            The toUpperCase() method returns the calling string value converted to uppercase.
            </summary>
            <param name="str">A string instance</param>
            <returns>A new string representing the calling string converted to upper case.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.ToLocaleUpperCase(System.String)">
            <summary>
            The toLocaleUpperCase() method returns the calling string value converted to upper case, according to any locale-specific case mappings.
            </summary>
            <param name="str">A string instance</param>
            <returns>A new string representing the calling string converted to upper case, according to any locale-specific case mappings.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.LocaleCompare(System.String,System.String)">
            <summary>
            The localeCompare() method returns a number indicating whether a reference string comes before or after or is the same as the given string in sort order.
            </summary>
            <param name="str">A string instance</param>
            <param name="compareString">The string against which the referring string is compared</param>
            <returns>A negative number if the reference string occurs before the compare string; positive if the reference string occurs after the compare string; 0 if they are equivalent.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.LocaleCompare(System.String,System.String,System.String)">
            <summary>
            The localeCompare() method returns a number indicating whether a reference string comes before or after or is the same as the given string in sort order.
            </summary>
            <param name="str">A string instance</param>
            <param name="compareString">The string against which the referring string is compared</param>
            <param name="locales">A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the locales argument, see the Intl page.</param>
            <returns>A negative number if the reference string occurs before the compare string; positive if the reference string occurs after the compare string; 0 if they are equivalent.</returns>
            <returns>A negative number if the reference string occurs before the compare string; positive if the reference string occurs after the compare string; 0 if they are equivalent.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.LocaleCompare(System.String,System.String,System.String,Bridge.Html5.LocaleOptions)">
            <summary>
            The localeCompare() method returns a number indicating whether a reference string comes before or after or is the same as the given string in sort order.
            </summary>
            <param name="str">A string instance</param>
            <param name="compareString">The string against which the referring string is compared</param>
            <param name="locales">A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the locales argument, see the Intl page.</param>
            <param name="options">An object with some or all of the following properties:</param>
            <returns>A negative number if the reference string occurs before the compare string; positive if the reference string occurs after the compare string; 0 if they are equivalent.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Replace(System.String,System.String,System.String)">
            <summary>
            The replace() method returns a new string with some or all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match.
            </summary>
            <param name="str">A string instance</param>
            <param name="substr">A String that is to be replaced by newSubStr. It is treated as a verbatim string and is not interpreted as a regular expression. Only the first occurrence will be replaced.</param>
            <param name="newSubStr">The String that replaces the substring specified by the specified regexp or substr parameter. A number of special replacement patterns are supported; see the "Specifying a string as a parameter" section below.</param>
            <returns>A new string with some or all matches of a pattern replaced by a replacement.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Replace(System.String,System.String,System.Delegate)">
            <summary>
            The replace() method returns a new string with some or all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match.
            </summary>
            <param name="str">A string instance</param>
            <param name="substr">A String that is to be replaced by newSubStr. It is treated as a verbatim string and is not interpreted as a regular expression. Only the first occurrence will be replaced.</param>
            <param name="function">A function to be invoked to create the new substring to be used to replace the matches to the given regexp or substr. </param>
            <returns>A new string with some or all matches of a pattern replaced by a replacement.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Replace(System.String,System.String,System.Func{System.String,System.String})">
            <summary>
            The replace() method returns a new string with some or all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match.
            </summary>
            <param name="str">A string instance</param>
            <param name="substr">A String that is to be replaced by newSubStr. It is treated as a verbatim string and is not interpreted as a regular expression. Only the first occurrence will be replaced.</param>
            <param name="function">A function to be invoked to create the new substring to be used to replace the matches to the given regexp or substr. </param>
            <returns>A new string with some or all matches of a pattern replaced by a replacement.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Replace(System.String,System.String,System.Func{System.String,System.Int32,System.String})">
            <summary>
            The replace() method returns a new string with some or all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match.
            </summary>
            <param name="str">A string instance</param>
            <param name="substr">A String that is to be replaced by newSubStr. It is treated as a verbatim string and is not interpreted as a regular expression. Only the first occurrence will be replaced.</param>
            <param name="function">A function to be invoked to create the new substring to be used to replace the matches to the given regexp or substr. </param>
            <returns>A new string with some or all matches of a pattern replaced by a replacement.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Replace(System.String,System.String,System.Func{System.String,System.Int32,System.String,System.String})">
            <summary>
            The replace() method returns a new string with some or all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match.
            </summary>
            <param name="str">A string instance</param>
            <param name="substr">A String that is to be replaced by newSubStr. It is treated as a verbatim string and is not interpreted as a regular expression. Only the first occurrence will be replaced.</param>
            <param name="function">A function to be invoked to create the new substring to be used to replace the matches to the given regexp or substr. </param>
            <returns>A new string with some or all matches of a pattern replaced by a replacement.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Replace(System.String,Bridge.Html5.RegExp,System.String)">
            <summary>
            The replace() method returns a new string with some or all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match.
            </summary>
            <param name="str">A string instance</param>
            <param name="regexp">A RegExp object or literal. The match or matches are replaced with newSubStr or the value returned by the specified function.</param>
            <param name="newSubStr">The String that replaces the substring specified by the specified regexp or substr parameter. A number of special replacement patterns are supported; see the "Specifying a string as a parameter" section below.</param>
            <returns>A new string with some or all matches of a pattern replaced by a replacement.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Replace(System.String,Bridge.Html5.RegExp,System.Delegate)">
            <summary>
            The replace() method returns a new string with some or all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match.
            </summary>
            <param name="str">A string instance</param>
            <param name="regexp">A RegExp object or literal. The match or matches are replaced with newSubStr or the value returned by the specified function.</param>
            <param name="function">A function to be invoked to create the new substring to be used to replace the matches to the given regexp or substr. </param>
            <returns>A new string with some or all matches of a pattern replaced by a replacement.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Replace(System.String,Bridge.Html5.RegExp,System.Func{System.String,System.String})">
            <summary>
            The replace() method returns a new string with some or all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match.
            </summary>
            <param name="str">A string instance</param>
            <param name="regexp">A RegExp object or literal. The match or matches are replaced with newSubStr or the value returned by the specified function.</param>
            <param name="function">A function to be invoked to create the new substring to be used to replace the matches to the given regexp or substr. </param>
            <returns>A new string with some or all matches of a pattern replaced by a replacement.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Replace(System.String,Bridge.Html5.RegExp,System.Func{System.String,System.Int32,System.String})">
            <summary>
            The replace() method returns a new string with some or all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match.
            </summary>
            <param name="str">A string instance</param>
            <param name="regexp">A RegExp object or literal. The match or matches are replaced with newSubStr or the value returned by the specified function.</param>
            <param name="function">A function to be invoked to create the new substring to be used to replace the matches to the given regexp or substr. </param>
            <returns>A new string with some or all matches of a pattern replaced by a replacement.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Replace(System.String,Bridge.Html5.RegExp,System.Func{System.String,System.Int32,System.String,System.String})">
            <summary>
            The replace() method returns a new string with some or all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match.
            </summary>
            <param name="str">A string instance</param>
            <param name="regexp">A RegExp object or literal. The match or matches are replaced with newSubStr or the value returned by the specified function.</param>
            <param name="function">A function to be invoked to create the new substring to be used to replace the matches to the given regexp or substr. </param>
            <returns>A new string with some or all matches of a pattern replaced by a replacement.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Slice(System.String,System.Int32)">
            <summary>
            The slice() method extracts a section of a string and returns a new string.
            </summary>
            <param name="str">A string instance</param>
            <param name="beginIndex">The zero-based index at which to begin extraction. If negative, it is treated as strLength + beginIndex where strLength is the length of the string (for example, if beginIndex is -3 it is treated as strLength - 3). If beginIndex is greater than or equal to the length of the string, slice() returns an empty string.</param>
            <returns>A new string containing the extracted section of the string.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Slice(System.String,System.Int32,System.Int32)">
            <summary>
            The slice() method extracts a section of a string and returns a new string.
            </summary>
            <param name="str">A string instance</param>
            <param name="beginIndex">The zero-based index at which to begin extraction. If negative, it is treated as strLength + beginIndex where strLength is the length of the string (for example, if beginIndex is -3 it is treated as strLength - 3). If beginIndex is greater than or equal to the length of the string, slice() returns an empty string.</param>
            <param name="endIndex">The zero-based index before which to end extraction. The character at this index will not be included. If endIndex is omitted, slice() extracts to the end of the string. If negative, it is treated as strLength + endIndex where strLength is the length of the string (for example, if endIndex is -3 it is treated as strLength - 3).</param>
            <returns>A new string containing the extracted section of the string.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Split(System.String,System.Char)">
            <summary>
            Splits a String object into an array of strings by separating the string into substrings.
            </summary>
            <param name="str">A string instance</param>
            <param name="separator">Specifies the character to use for separating the string. The separator is treated as a string or a regular expression. If separator is omitted or does not occur in str, the array returned contains one element consisting of the entire string. If separator is an empty string, str is converted to an array of characters.</param>
            <returns>An array of strings split at each point where the separator occurs in the given string.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Split(System.String,System.Int32)">
            <summary>
            Splits a String object into an array of strings by separating the string into substrings.
            </summary>
            <param name="str">A string instance</param>
            <param name="limit">Integer specifying a limit on the number of splits to be found. The split() method still splits on every match of separator, until the number of split items match the limit or the string falls short of separator.</param>
            <returns>An array of strings split at each point where the separator occurs in the given string.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Split(System.String,System.Char,System.Int32)">
            <summary>
            Splits a String object into an array of strings by separating the string into substrings.
            </summary>
            <param name="str">A string instance</param>
            <param name="separator">Specifies the character to use for separating the string. The separator is treated as a string or a regular expression. If separator is omitted or does not occur in str, the array returned contains one element consisting of the entire string. If separator is an empty string, str is converted to an array of characters.</param>
            <param name="limit">Integer specifying a limit on the number of splits to be found. The split() method still splits on every match of separator, until the number of split items match the limit or the string falls short of separator.</param>
            <returns>An array of strings split at each point where the separator occurs in the given string.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Split(System.String)">
            <summary>
            The split() method splits a String object into an array of strings by separating the string into substrings.
            </summary>
            <param name="str">A string instance</param>
            <returns>An array of strings split at each point where the separator occurs in the given string.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Split(System.String,System.String)">
            <summary>
            The split() method splits a String object into an array of strings by separating the string into substrings.
            </summary>
            <param name="str">A string instance</param>
            <param name="separator">Specifies the character(s) to use for separating the string. The separator is treated as a string or a regular expression. If separator is omitted or does not occur in str, the array returned contains one element consisting of the entire string. If separator is an empty string, str is converted to an array of characters.</param>
            <returns>An array of strings split at each point where the separator occurs in the given string.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Split(System.String,System.String,System.Int32)">
            <summary>
            The split() method splits a String object into an array of strings by separating the string into substrings.
            </summary>
            <param name="str">A string instance</param>
            <param name="separator">Specifies the character(s) to use for separating the string. The separator is treated as a string or a regular expression. If separator is omitted or does not occur in str, the array returned contains one element consisting of the entire string. If separator is an empty string, str is converted to an array of characters.</param>
            <param name="limit">Integer specifying a limit on the number of splits to be found. The split() method still splits on every match of separator, until the number of split items match the limit or the string falls short of separator.</param>
            <returns>An array of strings split at each point where the separator occurs in the given string.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Split(System.String,Bridge.Html5.RegExp)">
            <summary>
            The split() method splits a String object into an array of strings by separating the string into substrings.
            </summary>
            <param name="str">A string instance</param>
            <param name="separator">Specifies the character(s) to use for separating the string. The separator is treated as a string or a regular expression. If separator is omitted or does not occur in str, the array returned contains one element consisting of the entire string. If separator is an empty string, str is converted to an array of characters.</param>
            <returns>An array of strings split at each point where the separator occurs in the given string.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Split(System.String,Bridge.Html5.RegExp,System.Int32)">
            <summary>
            The split() method splits a String object into an array of strings by separating the string into substrings.
            </summary>
            <param name="str">A string instance</param>
            <param name="separator">Specifies the character(s) to use for separating the string. The separator is treated as a string or a regular expression. If separator is omitted or does not occur in str, the array returned contains one element consisting of the entire string. If separator is an empty string, str is converted to an array of characters.</param>
            <param name="limit">Integer specifying a limit on the number of splits to be found. The split() method still splits on every match of separator, until the number of split items match the limit or the string falls short of separator.</param>
            <returns>An array of strings split at each point where the separator occurs in the given string.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Substr(System.String,System.Int32)">
            <summary>
            The substr() method returns the characters in a string beginning at the specified location through the specified number of characters.
            </summary>
            <param name="str">A string instance</param>
            <param name="start">Location at which to begin extracting characters. If a negative number is given, it is treated as strLength + start where strLength is the length of the string (for example, if start is -3 it is treated as strLength - 3.)</param>
            <returns>A new string containing the extracted section of the given string. If length is 0 or a negative number, an empty string is returned.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Substr(System.String,System.Int32,System.Int32)">
            <summary>
            The substr() method returns the characters in a string beginning at the specified location through the specified number of characters.
            </summary>
            <param name="str">A string instance</param>
            <param name="start">Location at which to begin extracting characters. If a negative number is given, it is treated as strLength + start where strLength is the length of the string (for example, if start is -3 it is treated as strLength - 3.)</param>
            <param name="length">The number of characters to extract.</param>
            <returns>A new string containing the extracted section of the given string. If length is 0 or a negative number, an empty string is returned.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Substring(System.String,System.Int32)">
            <summary>
            The substring() method returns a subset of a string between one index and another, or through the end of the string.
            </summary>
            <param name="str">A string instance</param>
            <param name="indexStart">An integer between 0 and the length of the string, specifying the offset into the string of the first character to include in the returned substring.</param>
            <returns>A new string containing the extracted section of the given string.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.Substring(System.String,System.Int32,System.Int32)">
            <summary>
            The substring() method returns a subset of a string between one index and another, or through the end of the string.
            </summary>
            <param name="str">A string instance</param>
            <param name="indexStart">An integer between 0 and the length of the string, specifying the offset into the string of the first character to include in the returned substring.</param>
            <param name="indexEnd">An integer between 0 and the length of the string, which specifies the offset into the string of the first character not to include in the returned substring.</param>
            <returns>A new string containing the extracted section of the given string.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.CharAt(System.String,System.Int32)">
            <summary>
            The charAt() method returns the specified character from a string.
            </summary>
            <param name="str">A string instance</param>
            <param name="index">An integer between 0 and 1-less-than the length of the string. If no index is provided, charAt() will use 0.</param>
            <returns>A string representing the character at the specified index; empty string if index is out of range.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.CharCodeAt(System.String,System.Int32)">
            <summary>
            The charCodeAt() method returns an integer between 0 and 65535 representing the UTF-16 code unit at the given index (the UTF-16 code unit matches the Unicode code point for code points representable in a single UTF-16 code unit, but might also be the first code unit of a surrogate pair for code points not representable in a single UTF-16 code unit, e.g. Unicode code points > 0x10000). If you want the entire code point value, use codePointAt().
            </summary>
            <param name="str">A string instance</param>
            <param name="index">An integer greater than or equal to 0 and less than the length of the string; if it is not a number, it defaults to 0.</param>
            <returns>A number representing the UTF-16 code unit value of the character at the given index; NaN if index is out of range.</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.FromCharCode">
            <summary>
            The static String.fromCharCode() method returns a string created by using the specified sequence of Unicode values.
            </summary>
            <returns>String.Empty</returns>
        </member>
        <member name="M:Bridge.Html5.StringPrototype.FromCharCode(System.Int32[])">
            <summary>
            The static String.fromCharCode() method returns a string created by using the specified sequence of Unicode values.
            </summary>
            <param name="numbers">A sequence of numbers that are Unicode values.</param>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.Float32Array">
            <summary>
            Represents an array of 32-bit floating point numbers (corresponding to the C 'float' data type)
            in the platform byte order. If control over byte order is needed, use DataView instead.
            The contents are initialized to 0. Once established, you can reference elements in the array
            using the object's methods, or using standard array index syntax (that is, using bracket
            notation).
            </summary>
        </member>
        <member name="M:Bridge.Html5.Float32Array.#ctor(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Creates a new Float32Array of the specified length.
            </summary>
            <param name="length">Length of array to create</param>
        </member>
        <member name="M:Bridge.Html5.Float32Array.#ctor(Bridge.Html5.Float32Array)">
            <summary>
            Creates a new Float32Array out of the specified Float32Array.
            </summary>
            <param name="typedArray">Float32Array to use as initial contents to the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Float32Array.#ctor(System.Object)">
            <summary>
            Creates a new Float32Array out of the specified object.
            </summary>
            <param name="objectInstance">Object to be converted into the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Float32Array.#ctor(Bridge.Html5.ArrayBuffer,System.UInt32,System.UInt32)">
            <summary>
            Creates a new Float32Array out of the specified buffer and byteOffset with the specified length.
            </summary>
            <param name="buffer">Arraybuffer to use as base for contents.</param>
            <param name="byteOffset">Optional. Position in the buffer to start reading data from.</param>
            <param name="length">Optional. Number of elements to consider while creating the array.</param>
        </member>
        <member name="P:Bridge.Html5.Float32Array.Item(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Allows index operations on the array.
            </summary>
            <param name="i">Index position in the array.</param>
            <returns>The element in the specified position.</returns>
        </member>
        <member name="F:Bridge.Html5.Float32Array.BYTES_PER_ELEMENT">
            <summary>
            Returns a number value of the element size. 1 in the case of an Float32Array.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Float32Array.length">
            <summary>
            Length property whose value is 3.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Float32Array.name">
            <summary>
            Returns the string value of the constructor name. In the case of the Float32Array type: "Float32Array".
            </summary>
        </member>
        <member name="T:Bridge.Html5.Float64Array">
            <summary>
            Represents an array of 64-bit floating point numbers (corresponding to the C 'double' data type)
            in the platform byte order. If control over byte order is needed, use DataView instead.
            The contents are initialized to 0. Once established, you can reference elements in the array
            using the object's methods, or using standard array index syntax (that is, using bracket
            notation).
            </summary>
        </member>
        <member name="M:Bridge.Html5.Float64Array.#ctor(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Creates a new Float64Array of the specified length.
            </summary>
            <param name="length">Length of array to create</param>
        </member>
        <member name="M:Bridge.Html5.Float64Array.#ctor(Bridge.Html5.Float64Array)">
            <summary>
            Creates a new Float64Array out of the specified Float64Array.
            </summary>
            <param name="typedArray">Float64Array to use as initial contents to the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Float64Array.#ctor(System.Object)">
            <summary>
            Creates a new Float64Array out of the specified object.
            </summary>
            <param name="objectInstance">Object to be converted into the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Float64Array.#ctor(Bridge.Html5.ArrayBuffer,System.UInt32,System.UInt32)">
            <summary>
            Creates a new Float64Array out of the specified buffer and byteOffset with the specified length.
            </summary>
            <param name="buffer">Arraybuffer to use as base for contents.</param>
            <param name="byteOffset">Optional. Position in the buffer to start reading data from.</param>
            <param name="length">Optional. Number of elements to consider while creating the array.</param>
        </member>
        <member name="P:Bridge.Html5.Float64Array.Item(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Allows index operations on the array.
            </summary>
            <param name="i">Index position in the array.</param>
            <returns>The element in the specified position.</returns>
        </member>
        <member name="F:Bridge.Html5.Float64Array.BYTES_PER_ELEMENT">
            <summary>
            Returns a number value of the element size. 1 in the case of an Float64Array.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Float64Array.length">
            <summary>
            Length property whose value is 3.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Float64Array.name">
            <summary>
            Returns the string value of the constructor name. In the case of the Float64Array type: "Float64Array".
            </summary>
        </member>
        <member name="T:Bridge.Html5.Int16Array">
            <summary>
            Represents an array of twos-complement 16-bit signed integers in the platform byte order.
            If control over byte order is needed, use DataView instead. The contents are initialized to 0.
            Once established, you can reference elements in the array using the object's methods, or using
            standard array index syntax (that is, using bracket notation).
            </summary>
        </member>
        <member name="M:Bridge.Html5.Int16Array.#ctor(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Creates a new Int16Array of the specified length.
            </summary>
            <param name="length">Length of array to create</param>
        </member>
        <member name="M:Bridge.Html5.Int16Array.#ctor(Bridge.Html5.Int16Array)">
            <summary>
            Creates a new Int16Array out of the specified Int16Array.
            </summary>
            <param name="typedArray">Int16Array to use as initial contents to the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Int16Array.#ctor(System.Object)">
            <summary>
            Creates a new Int16Array out of the specified object.
            </summary>
            <param name="objectInstance">Object to be converted into the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Int16Array.#ctor(Bridge.Html5.ArrayBuffer,System.UInt32,System.UInt32)">
            <summary>
            Creates a new Int16Array out of the specified buffer and byteOffset with the specified length.
            </summary>
            <param name="buffer">Arraybuffer to use as base for contents.</param>
            <param name="byteOffset">Optional. Position in the buffer to start reading data from.</param>
            <param name="length">Optional. Number of elements to consider while creating the array.</param>
        </member>
        <member name="P:Bridge.Html5.Int16Array.Item(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Allows index operations on the array.
            </summary>
            <param name="i">Index position in the array.</param>
            <returns>The element in the specified position.</returns>
        </member>
        <member name="F:Bridge.Html5.Int16Array.BYTES_PER_ELEMENT">
            <summary>
            Returns a number value of the element size. 1 in the case of an Int16Array.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Int16Array.length">
            <summary>
            Length property whose value is 3.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Int16Array.name">
            <summary>
            Returns the string value of the constructor name. In the case of the Int16Array type: "Int16Array".
            </summary>
        </member>
        <member name="T:Bridge.Html5.Int32Array">
            <summary>
            Represents an array of twos-complement 32-bit signed integers in the platform byte order.
            If control over byte order is needed, use DataView instead. The contents are initialized to 0.
            Once established, you can reference elements in the array using the object's methods, or using
            standard array index syntax (that is, using bracket notation).
            </summary>
        </member>
        <member name="M:Bridge.Html5.Int32Array.#ctor(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Creates a new Int32Array of the specified length.
            </summary>
            <param name="length">Length of array to create</param>
        </member>
        <member name="M:Bridge.Html5.Int32Array.#ctor(Bridge.Html5.Int32Array)">
            <summary>
            Creates a new Int32Array out of the specified Int32Array.
            </summary>
            <param name="typedArray">Int32Array to use as initial contents to the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Int32Array.#ctor(System.Object)">
            <summary>
            Creates a new Int32Array out of the specified object.
            </summary>
            <param name="objectInstance">Object to be converted into the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Int32Array.#ctor(Bridge.Html5.ArrayBuffer,System.UInt32,System.UInt32)">
            <summary>
            Creates a new Int32Array out of the specified buffer and byteOffset with the specified length.
            </summary>
            <param name="buffer">Arraybuffer to use as base for contents.</param>
            <param name="byteOffset">Optional. Position in the buffer to start reading data from.</param>
            <param name="length">Optional. Number of elements to consider while creating the array.</param>
        </member>
        <member name="P:Bridge.Html5.Int32Array.Item(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Allows index operations on the array.
            </summary>
            <param name="i">Index position in the array.</param>
            <returns>The element in the specified position.</returns>
        </member>
        <member name="F:Bridge.Html5.Int32Array.BYTES_PER_ELEMENT">
            <summary>
            Returns a number value of the element size. 1 in the case of an Int32Array.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Int32Array.length">
            <summary>
            Length property whose value is 3.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Int32Array.name">
            <summary>
            Returns the string value of the constructor name. In the case of the Int32Array type: "Int32Array".
            </summary>
        </member>
        <member name="T:Bridge.Html5.Int8Array">
            <summary>
            Represents an array of twos-complement 8-bit signed integers. The contents are initialized to 0.
            Once established, you can reference elements in the array using the object's methods, or using standard
            array index syntax (that is, using bracket notation).
            </summary>
        </member>
        <member name="M:Bridge.Html5.Int8Array.#ctor(System.Int32)">
            <summary>
            Creates a new Int8Array of the specified length.
            </summary>
            <param name="length">Length of array to create</param>
        </member>
        <member name="M:Bridge.Html5.Int8Array.#ctor(Bridge.Html5.Int8Array)">
            <summary>
            Creates a new Int8Array out of the specified Int8Array.
            </summary>
            <param name="typedArray">Int8Array to use as initial contents to the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Int8Array.#ctor(System.Object)">
            <summary>
            Creates a new Int8Array out of the specified object.
            </summary>
            <param name="objectInstance">Object to be converted into the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Int8Array.#ctor(Bridge.Html5.ArrayBuffer,System.UInt32,System.UInt32)">
            <summary>
            Creates a new Int8Array out of the specified buffer and byteOffset with the specified length.
            </summary>
            <param name="buffer">Arraybuffer to use as base for contents.</param>
            <param name="byteOffset">Optional. Position in the buffer to start reading data from.</param>
            <param name="length">Optional. Number of elements to consider while creating the array.</param>
        </member>
        <member name="P:Bridge.Html5.Int8Array.Item(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Allows index operations on the array.
            </summary>
            <param name="i">Index position in the array.</param>
            <returns>The element in the specified position.</returns>
        </member>
        <member name="F:Bridge.Html5.Int8Array.BYTES_PER_ELEMENT">
            <summary>
            Returns a number value of the element size. 1 in the case of an Int8Array.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Int8Array.length">
            <summary>
            Length property whose value is 3.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Int8Array.name">
            <summary>
            Returns the string value of the constructor name. In the case of the Int8Array type: "Int8Array".
            </summary>
        </member>
        <member name="T:Bridge.Html5.CanvasGradient">
            <summary>
            The CanvasGradient interface represents an opaque object describing a gradient.
            It is returned by the methods CanvasRenderingContext2D.createLinearGradient() or
            CanvasRenderingContext2D.createRadialGradient().
            </summary>
        </member>
        <member name="M:Bridge.Html5.CanvasGradient.AddColorStop(System.Double,System.String)">
            <summary>
            Adds a new stop, defined by an offset and a color, to the gradient.
            If the offset is not between 0 and 1 an INDEX_SIZE_ERR is raised, if the color can't be parsed
            as a CSS &lt;color>, a SYNTAX_ERR is raised.
            </summary>
        </member>
        <member name="T:Bridge.Html5.CanvasPattern">
            <summary>
            The CanvasPattern interface represents an opaque object describing a pattern, based on a image,
            a canvas or a video, created by the CanvasRenderingContext2D.createPattern() method.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CanvasPattern.SetTransform(Bridge.Html5.SVGMatrix)">
            <summary>
            This method uses an SVGMatrix object as the pattern's transformation matrix and invokes
            it on the pattern.
            </summary>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="T:Bridge.Html5.ImageData">
            <summary>
            The ImageData interface represents the underlying pixel data of an area of a &lt;canvas> element.
            It is created using the ImageData() constructor or creator methods on the CanvasRenderingContext2D
            object associated with a canvas: createImageData() and getImageData(). It can also be used to set
            a part of the canvas by using putImageData().
            </summary>
        </member>
        <member name="M:Bridge.Html5.ImageData.#ctor">
            <summary>
            Creates an ImageData object.
            </summary>
        </member>
        <member name="M:Bridge.Html5.ImageData.#ctor(Bridge.Html5.Uint8ClampedArray,System.UInt32,System.Nullable{System.UInt32})">
            <summary>
            Creates an ImageData object from a given Uint8ClampedArray and the size of the image it contains.
            Note that this is the most common way to create such an object in workers as createImageData()
            is not available there.
            </summary>
            <param name="array">A Uint8ClampedArray containing the underlying pixel representation of theimage.</param>
            <param name="width">An unsigned number representing the width of the represented image.</param>
            <param name="height">
            An unsigned number representing the height of the represented image. This value is optional
            if an array is given: it will be inferred from its size and the given width.
            </param>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="M:Bridge.Html5.ImageData.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Creates an ImageData object from the size of the image. Without specifying the array, an image of
            a black rectangle is created. Note that this is the most common way to create such an object in
            workers as createImageData() is not available there.
            </summary>
            <param name="width">An unsigned number representing the width of the represented image.</param>
            <param name="height">An unsigned number representing the height of the represented image.</param>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="F:Bridge.Html5.ImageData.Data">
            <summary>
            A Uint8ClampedArray representing a one-dimensional array containing the data in the RGBA order,
            with integer values between 0 and 255 (included).
            </summary>
        </member>
        <member name="F:Bridge.Html5.ImageData.Height">
            <summary>
            An unsigned number representing the actual height, in pixels, of the ImageData.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ImageData.Width">
            <summary>
            An unsigned number representing the actual width, in pixels, of the ImageData.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Path2D">
            <summary>
            The Path2D interface of the Canvas 2D API is used to declare paths that are then later used on
            CanvasRenderingContext2D objects. The path methods of the CanvasRenderingContext2D interface
            are present on this interface as well and are allowing you to create paths that you can retain
            and replay as required on a canvas.
            </summary>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="M:Bridge.Html5.Path2D.#ctor">
            <summary>
            Creates a new Path2D object.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Path2D.#ctor(Bridge.Html5.Path2D)">
            <summary>
            Creates a new Path2D object from an specified Path2D object.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Path2D.#ctor(System.String)">
            <summary>
            Creates a new Path2D object from an specified string consisting of SVG path data.
            </summary>
            <param name="d"></param>
        </member>
        <member name="M:Bridge.Html5.Path2D.AddPath(Bridge.Html5.Path2D,Bridge.Html5.SVGMatrix)">
            <summary>
            Adds a path to the current path.
            </summary>
            <param name="path"></param>
            <param name="transform"></param>
        </member>
        <member name="T:Bridge.Html5.SVGMatrix">
            <summary>
            Many of SVG's graphics operations utilize 2x3 matrices which can be expanded into a 3x3 matrix
            for the purposes of matrix arithmetic.
            An SVGMatrix object can be designated as read only, which means that attempts to modify the
            object will result in an exception being thrown.
            </summary>
        </member>
        <member name="F:Bridge.Html5.SVGMatrix.a">
            <summary>
            SVGMatrix component.
            </summary>
        </member>
        <member name="F:Bridge.Html5.SVGMatrix.b">
            <summary>
            SVGMatrix component.
            </summary>
        </member>
        <member name="F:Bridge.Html5.SVGMatrix.c">
            <summary>
            SVGMatrix component.
            </summary>
        </member>
        <member name="F:Bridge.Html5.SVGMatrix.d">
            <summary>
            SVGMatrix component.
            </summary>
        </member>
        <member name="F:Bridge.Html5.SVGMatrix.e">
            <summary>
            SVGMatrix component.
            </summary>
        </member>
        <member name="F:Bridge.Html5.SVGMatrix.f">
            <summary>
            SVGMatrix component.
            </summary>
        </member>
        <member name="M:Bridge.Html5.SVGMatrix.Multiply(Bridge.Html5.SVGMatrix)">
            <summary>
            Performs matrix multiplication. This matrix is post-multiplied by another matrix, returning
            the resulting new matrix.
            </summary>
        </member>
        <member name="M:Bridge.Html5.SVGMatrix.Inverse">
            <summary>
            Return the inverse matrix
            A DOMException with code SVG_MATRIX_NOT_INVERTABLE is raised if the matrix is not invertable.
            </summary>
            <returns></returns>
            //
        </member>
        <member name="M:Bridge.Html5.SVGMatrix.Translate(System.Single,System.Single)">
            <summary>
            Post-multiplies a translation transformation on the current matrix and returns the resulting matrix.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.SVGMatrix.Scale(System.Single)">
            <summary>
            Post-multiplies a uniform scale transformation on the current matrix and returns the resulting matrix.
            </summary>
            <param name="scaleFactor"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.SVGMatrix.ScaleNonUniform(System.Single,System.Single)">
            <summary>
            Post-multiplies a non-uniform scale transformation on the current matrix and returns the resulting matrix.
            </summary>
            <param name="scaleFactorX"></param>
            <param name="scaleFactorY"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.SVGMatrix.Rotate(System.Single)">
            <summary>
            Post-multiplies a rotation transformation on the current matrix and returns the resulting matrix.
            (angle is measures in degrees.)
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.SVGMatrix.RotateFromVector(System.Single,System.Single)">
            <summary>
            Post-multiplies a rotation transformation on the current matrix and returns the resulting matrix.
            The rotation angle is determined by taking (+/-) atan(y/x). The direction of the vector (x, y)
            determines whether the positive or negative angle value is used.
            A DOMException with code SVG_INVALID_VALUE_ERR is raised if one of the parameters has an invalid value.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.SVGMatrix.FlipX">
            <summary>
            Post-multiplies the transformation [-1 0 0 1 0 0] and returns the resulting matrix.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.SVGMatrix.FlipY">
            <summary>
            Post-multiplies the transformation [1 0 0 -1 0 0] and returns the resulting matrix.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.SVGMatrix.SkewX(System.Single)">
            <summary>
            Post-multiplies a skewX transformation on the current matrix and returns the resulting matrix.
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.SVGMatrix.SkewY(System.Single)">
            <summary>
            Post-multiplies a skewY transformation on the current matrix and returns the resulting matrix.
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.SVGOperations">
            <summary>
            This interface was written so that both Path2D and CanvasRenderingContext2D could inherit their
            methods (which are the exact same).
            </summary>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.ClosePath">
            <summary>
            Causes the point of the pen to move back to the start of the current sub-path. It tries
            to draw a straight line from the current point to the start. If the shape has already been
            closed or has only one point, this function does nothing.
            </summary>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.MoveTo(System.UInt32,System.UInt32)">
            <summary>
            Moves the starting point of a new sub-path to the (x, y) coordinates.
            </summary>
            <param name="x">The x axis of the point</param>
            <param name="y">The y axis of the point</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.MoveTo(System.Int32,System.Int32)">
            <summary>
            Moves the starting point of a new sub-path to the (x, y) coordinates.
            </summary>
            <param name="x">The x axis of the point</param>
            <param name="y">The y axis of the point</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.MoveTo(System.Double,System.Double)">
            <summary>
            Moves the starting point of a new sub-path to the (x, y) coordinates.
            </summary>
            <param name="x">The x axis of the point</param>
            <param name="y">The y axis of the point</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.LineTo(System.UInt32,System.UInt32)">
            <summary>
            Connects the last point in the subpath to the x, y coordinates with a straight line.
            </summary>
            <param name="x">The x axis of the coordinate for the end of the line.</param>
            <param name="y">The y axis of the coordinate for the end of the line.</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.LineTo(System.Int32,System.Int32)">
            <summary>
            Connects the last point in the subpath to the x, y coordinates with a straight line.
            </summary>
            <param name="x">The x axis of the coordinate for the end of the line.</param>
            <param name="y">The y axis of the coordinate for the end of the line.</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.LineTo(System.Double,System.Double)">
            <summary>
            Connects the last point in the subpath to the x, y coordinates with a straight line.
            </summary>
            <param name="x">The x axis of the coordinate for the end of the line.</param>
            <param name="y">The y axis of the coordinate for the end of the line.</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.BezierCurveTo(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Adds a cubic Bézier curve to the path. It requires three points. The first two points are control points and the third one is the end point. The starting point is the last point in the current path, which can be changed using moveTo() before creating the Bézier curve.
            </summary>
            <param name="cp1x">The x axis of the coordinate for the first control point.</param>
            <param name="cp1y">The y axis of the coordinate for first control point.</param>
            <param name="cp2x">The x axis of the coordinate for the second control point.</param>
            <param name="cp2y">The y axis of the coordinate for the second control point.</param>
            <param name="x">The x axis of the coordinate for the end point.</param>
            <param name="y">The y axis of the coordinate for the end point.</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.BezierCurveTo(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a cubic Bézier curve to the path. It requires three points. The first two points are control points and the third one is the end point. The starting point is the last point in the current path, which can be changed using moveTo() before creating the Bézier curve.
            </summary>
            <param name="cp1x">The x axis of the coordinate for the first control point.</param>
            <param name="cp1y">The y axis of the coordinate for first control point.</param>
            <param name="cp2x">The x axis of the coordinate for the second control point.</param>
            <param name="cp2y">The y axis of the coordinate for the second control point.</param>
            <param name="x">The x axis of the coordinate for the end point.</param>
            <param name="y">The y axis of the coordinate for the end point.</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.BezierCurveTo(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a cubic Bézier curve to the path. It requires three points. The first two points are control points and the third one is the end point. The starting point is the last point in the current path, which can be changed using moveTo() before creating the Bézier curve.
            </summary>
            <param name="cp1x">The x axis of the coordinate for the first control point.</param>
            <param name="cp1y">The y axis of the coordinate for first control point.</param>
            <param name="cp2x">The x axis of the coordinate for the second control point.</param>
            <param name="cp2y">The y axis of the coordinate for the second control point.</param>
            <param name="x">The x axis of the coordinate for the end point.</param>
            <param name="y">The y axis of the coordinate for the end point.</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.QuadraticCurveTo(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Adds a quadratic Bézier curve to the current path.
            </summary>
            <param name="cpx">The x axis of the coordinate for the control point.</param>
            <param name="cpy">The y axis of the coordinate for the control point.</param>
            <param name="x">The x axis of the coordinate for the end point.</param>
            <param name="y">The y axis of the coordinate for the end point.</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.QuadraticCurveTo(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a quadratic Bézier curve to the current path.
            </summary>
            <param name="cpx">The x axis of the coordinate for the control point.</param>
            <param name="cpy">The y axis of the coordinate for the control point.</param>
            <param name="x">The x axis of the coordinate for the end point.</param>
            <param name="y">The y axis of the coordinate for the end point.</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.QuadraticCurveTo(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a quadratic Bézier curve to the current path.
            </summary>
            <param name="cpx">The x axis of the coordinate for the control point.</param>
            <param name="cpy">The y axis of the coordinate for the control point.</param>
            <param name="x">The x axis of the coordinate for the end point.</param>
            <param name="y">The y axis of the coordinate for the end point.</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.Arc(System.UInt32,System.UInt32,System.UInt32,System.Double,System.Double,System.Boolean)">
            <summary>
            Adds an arc to the path which is centered at (x, y) position with radius r starting at
            startAngle and ending at endAngle going in the given direction by anticlockwise
            (defaulting to clockwise).
            </summary>
            <param name="x">The x axis of the coordinate for the arc's center.</param>
            <param name="y">The y axis of the coordinate for the arc's center.</param>
            <param name="radius">The arc's radius.</param>
            <param name="startAngle">
            The starting point, measured from the x axis, from which it will be drawn, expressed in radians.
            </param>
            <param name="endAngle">The end arc's angle to which it will be drawn, expressed in radians.</param>
            <param name="anticlockwise">
            An optional Boolean which, if true, draws the arc anticlockwise (counter-clockwise), otherwise
            in a clockwise direction.
            </param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.Arc(System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Boolean)">
            <summary>
            Adds an arc to the path which is centered at (x, y) position with radius r starting at
            startAngle and ending at endAngle going in the given direction by anticlockwise
            (defaulting to clockwise).
            </summary>
            <param name="x">The x axis of the coordinate for the arc's center.</param>
            <param name="y">The y axis of the coordinate for the arc's center.</param>
            <param name="radius">The arc's radius.</param>
            <param name="startAngle">
            The starting point, measured from the x axis, from which it will be drawn, expressed in radians.
            </param>
            <param name="endAngle">The end arc's angle to which it will be drawn, expressed in radians.</param>
            <param name="anticlockwise">
            An optional Boolean which, if true, draws the arc anticlockwise (counter-clockwise), otherwise
            in a clockwise direction.
            </param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.Arc(System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Adds an arc to the path which is centered at (x, y) position with radius r starting at
            startAngle and ending at endAngle going in the given direction by anticlockwise
            (defaulting to clockwise).
            </summary>
            <param name="x">The x axis of the coordinate for the arc's center.</param>
            <param name="y">The y axis of the coordinate for the arc's center.</param>
            <param name="radius">The arc's radius.</param>
            <param name="startAngle">
            The starting point, measured from the x axis, from which it will be drawn, expressed in radians.
            </param>
            <param name="endAngle">The end arc's angle to which it will be drawn, expressed in radians.</param>
            <param name="anticlockwise">
            An optional Boolean which, if true, draws the arc anticlockwise (counter-clockwise), otherwise
            in a clockwise direction.
            </param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.ArcTo(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Double)">
            <summary>
            Adds an arc to the path with the given control points and radius, connected to the previous point
            by a straight line.
            </summary>
            <param name="x1">The x axis of the coordinate for the first control point.</param>
            <param name="y1">The y axis of the coordinate for the first control point.</param>
            <param name="x2">The x axis of the coordinate for the second control point.</param>
            <param name="y2">The y axis of the coordinate for the second control point.</param>
            <param name="radius">The arc's radius.</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.ArcTo(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Adds an arc to the path with the given control points and radius, connected to the previous point
            by a straight line.
            </summary>
            <param name="x1">The x axis of the coordinate for the first control point.</param>
            <param name="y1">The y axis of the coordinate for the first control point.</param>
            <param name="x2">The x axis of the coordinate for the second control point.</param>
            <param name="y2">The y axis of the coordinate for the second control point.</param>
            <param name="radius">The arc's radius.</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.ArcTo(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds an arc to the path with the given control points and radius, connected to the previous point
            by a straight line.
            </summary>
            <param name="x1">The x axis of the coordinate for the first control point.</param>
            <param name="y1">The y axis of the coordinate for the first control point.</param>
            <param name="x2">The x axis of the coordinate for the second control point.</param>
            <param name="y2">The y axis of the coordinate for the second control point.</param>
            <param name="radius">The arc's radius.</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.Ellipse(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Adds an ellipse to the path which is centered at (x, y) position with the radii radiusX and
            radiusY starting at startAngle and ending at endAngle going in the given direction by
            anticlockwise (defaulting to clockwise).
            </summary>
            <param name="x">The x axis of the coordinate for the ellipse's center.</param>
            <param name="y">The y axis of the coordinate for the ellipse's center.</param>
            <param name="radiusX">The ellipse's major-axis radius.</param>
            <param name="radiusY">The ellipse's minor-axis radius.</param>
            <param name="rotation">The rotation for this ellipse, expressed in degrees.</param>
            <param name="startAngle">
            The starting point, measured from the x axis, from which it will be drawn, expressed in radians.
            </param>
            <param name="endAngle">The end ellipse's angle to which it will be drawn, expressed in radians.</param>
            <param name="anticlockwise">
            An optional Boolean which, if true, draws the ellipse anticlockwise (counter-clockwise),
            otherwise in a clockwise direction.
            </param>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.Ellipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Adds an ellipse to the path which is centered at (x, y) position with the radii radiusX and
            radiusY starting at startAngle and ending at endAngle going in the given direction by
            anticlockwise (defaulting to clockwise).
            </summary>
            <param name="x">The x axis of the coordinate for the ellipse's center.</param>
            <param name="y">The y axis of the coordinate for the ellipse's center.</param>
            <param name="radiusX">The ellipse's major-axis radius.</param>
            <param name="radiusY">The ellipse's minor-axis radius.</param>
            <param name="rotation">The rotation for this ellipse, expressed in degrees.</param>
            <param name="startAngle">
            The starting point, measured from the x axis, from which it will be drawn, expressed in radians.
            </param>
            <param name="endAngle">The end ellipse's angle to which it will be drawn, expressed in radians.</param>
            <param name="anticlockwise">
            An optional Boolean which, if true, draws the ellipse anticlockwise (counter-clockwise),
            otherwise in a clockwise direction.
            </param>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.Ellipse(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Adds an ellipse to the path which is centered at (x, y) position with the radii radiusX and
            radiusY starting at startAngle and ending at endAngle going in the given direction by
            anticlockwise (defaulting to clockwise).
            </summary>
            <param name="x">The x axis of the coordinate for the ellipse's center.</param>
            <param name="y">The y axis of the coordinate for the ellipse's center.</param>
            <param name="radiusX">The ellipse's major-axis radius.</param>
            <param name="radiusY">The ellipse's minor-axis radius.</param>
            <param name="rotation">The rotation for this ellipse, expressed in degrees.</param>
            <param name="startAngle">
            The starting point, measured from the x axis, from which it will be drawn, expressed in radians.
            </param>
            <param name="endAngle">The end ellipse's angle to which it will be drawn, expressed in radians.</param>
            <param name="anticlockwise">
            An optional Boolean which, if true, draws the ellipse anticlockwise (counter-clockwise),
            otherwise in a clockwise direction.
            </param>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.Rect(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates a path for a rectangle at position (x, y) with a size that is determined by width and height.
            </summary>
            <param name="x">The x axis of the coordinate for the rectangle starting point.</param>
            <param name="y">The y axis of the coordinate for the rectangle starting point.</param>
            <param name="width">The rectangle's width.</param>
            <param name="height">The rectangle's height.</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.Rect(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a path for a rectangle at position (x, y) with a size that is determined by width and height.
            </summary>
            <param name="x">The x axis of the coordinate for the rectangle starting point.</param>
            <param name="y">The y axis of the coordinate for the rectangle starting point.</param>
            <param name="width">The rectangle's width.</param>
            <param name="height">The rectangle's height.</param>
        </member>
        <member name="M:Bridge.Html5.SVGOperations.Rect(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a path for a rectangle at position (x, y) with a size that is determined by width and height.
            </summary>
            <param name="x">The x axis of the coordinate for the rectangle starting point.</param>
            <param name="y">The y axis of the coordinate for the rectangle starting point.</param>
            <param name="width">The rectangle's width.</param>
            <param name="height">The rectangle's height.</param>
        </member>
        <member name="T:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType">
            <summary>
            Indicates the desired type of compositing operation among the existing ones.
            See example effects in https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.SourceOver">
            <summary>
            Default. Draws new shapes on top of the existing canvas content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.SourceIn">
            <summary>
            The new shape is drawn only where both the new shape and the destination canvas overlap. Everything else is made transparent.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.SourceOut">
            <summary>
            The new shape is drawn where it doesn't overlap the existing canvas content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.SourceAtop">
            <summary>
            The new shape is only drawn where it overlaps the existing canvas content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.DestinationOver">
            <summary>
            New shapes are drawn behind the existing canvas content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.DestinationIn">
            <summary>
            The existing canvas content is kept where both the new shape and existing canvas content overlap. Everything else is made transparent.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.DestinationOut">
            <summary>
            The existing content is kept where it doesn't overlap the new shape.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.DestinationAtop">
            <summary>
            The existing canvas is only kept where it overlaps the new shape. The new shape is drawn behind the canvas content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.Lighter">
            <summary>
            Where both shapes overlap the color is determined by adding color values.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.Copy">
            <summary>
            Only the existing canvas is present.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.XOr">
            <summary>
            Shapes are made transparent where both overlap and drawn normal everywhere else.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.Multiply">
            <summary>
            The pixels are of the top layer are multiplied with the corresponding pixel of the bottom layer. A darker picture is the result.
            </summary>
            <remarks>Does not work on all browsers</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.Screen">
            <summary>
            The pixels are inverted, multiplied, and inverted again. A lighter picture is the result (opposite of multiply)
            </summary>
            <remarks>Does not work on all browsers</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.Overlay">
            <summary>
            A combination of multiply and screen. Dark parts on the base layer become darker, and light parts become lighter.
            </summary>
            <remarks>Does not work on all browsers</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.Darken">
            <summary>
            Retains the darkest pixels of both layers.
            </summary>
            <remarks>Does not work on all browsers</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.Lighten">
            <summary>
            Retains the lightest pixels of both layers.
            </summary>
            <remarks>Does not work on all browsers</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.ColorDodge">
            <summary>
            Divides the bottom layer by the inverted top layer.
            </summary>
            <remarks>Does not work on all browsers</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.ColorBurn">
            <summary>
            Divides the inverted bottom layer by the top layer, and then inverts the result.
            </summary>
            <remarks>Does not work on all browsers</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.HardLight">
            <summary>
            A combination of multiply and screen like overlay, but with top and bottom layer swapped.
            </summary>
            <remarks>Does not work on all browsers</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.SoftLight">
            <summary>
            A softer version of hard-light. Pure black or white does not result in pure black or white.
            </summary>
            <remarks>Does not work on all browsers</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.Difference">
            <summary>
            Subtracts the bottom layer from the top layer or the other way round to always get a positive value.
            </summary>
            <remarks>Does not work on all browsers</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.Exclusion">
            <summary>
            Like difference, but with lower contrast.
            </summary>
            <remarks>Does not work on all browsers</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.Hue">
            <summary>
            Preserves the luma and chroma of the bottom layer, while adopting the hue of the top layer.
            </summary>
            <remarks>Does not work on all browsers</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.Saturation">
            <summary>
            Preserves the luma and hue of the bottom layer, while adopting the chroma of the top layer.
            </summary>
            <remarks>Does not work on all browsers</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.Color">
            <summary>
            Preserves the luma of the bottom layer, while adopting the hue and chroma of the top layer.
            </summary>
            <remarks>Does not work on all browsers</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.Luminosity">
            <summary>
            Preserves the hue and chroma of the bottom layer, while adopting the luma of the top layer.
            </summary>
            <remarks>Does not work on all browsers</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasCompositeOperationType.Null">
            <summary>
            Clear the value, to revert back to browser's default.
            </summary>
        </member>
        <member name="T:Bridge.Html5.CanvasTypes.CanvasContext2DType">
            <summary>
            Indicates the 2D context on CanvaslElement.GetContext().
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasContext2DType.CanvasRenderingContext2D">
            <summary>
            2d: Two-dimensional rendering context: CanvasRenderingContext2D
            </summary>
        </member>
        <member name="T:Bridge.Html5.CanvasTypes.CanvasContextWebGLType">
            <summary>
            Indicates the WebGL (OpenGL ES 2.0) context on CanvaslElement.GetContext().
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasContextWebGLType.WebGL">
            <summary>
            WebGL -- available only on browsers that implement WebGL version 1 (OpenGL ES 2.0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasContextWebGLType.Experimental_WebGL">
            <summary>
            Experimental WebGL -- available only on browsers that implement WebGL version 1 (OpenGL ES 2.0)
            </summary>
        </member>
        <member name="T:Bridge.Html5.CanvasTypes.CanvasLineCapType">
            <summary>
            There are three possible values for this property and those are: butt, round and square.
            By default this property is set to butt.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasLineCapType.Butt">
            <summary>
            Default. The ends of lines are squared off at the endpoints.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasLineCapType.Round">
            <summary>
            The ends of lines are rounded.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasLineCapType.Square">
            <summary>
            The ends of lines are squared off by adding a box with an equal width and half the height
            of the line's thickness.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasLineCapType.Null">
            <summary>
            Clear the value, to revert back to browser's default.
            </summary>
        </member>
        <member name="T:Bridge.Html5.CanvasTypes.CanvasLineJoinType">
            <summary>
            There are three possible values for this property: round, bevel and miter.
            By default this property is set to miter.
            Note that the lineJoin setting has no effect if the two connected segments have the same direction,
            because no joining area will be added in this case.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasLineJoinType.Round">
            <summary>
            Rounds off the corners of a shape by filling an additional sector of disc centered at the
            common endpoint of connected segments.
            The radius for these rounded corners is equal to the line width.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasLineJoinType.Bevel">
            <summary>
            Fills an additional triangular area between the common endpoint of connected segments,
            and the separate outside rectangular corners of each segment.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasLineJoinType.Miter">
            <summary>
            Default. Connected segments are joined by extending their outside edges to connect at a single point,
            with the effect of filling an additional lozenge-shaped area.
            This setting is effected by the miterLimit property.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasLineJoinType.Null">
            <summary>
            Clear the value, to revert back to browser's default.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextAlign.Left">
            <summary>
            The text is left-aligned.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextAlign.Right">
            <summary>
            The text is right-aligned.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextAlign.Center">
            <summary>
            The text is centered.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextAlign.Start">
            <summary>
            Default. The text is aligned at the normal start of the line (left-aligned for left-to-right locales,
            right-aligned for right-to-left locales).
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextAlign.End">
            <summary>
            The text is aligned at the normal end of the line (right-aligned for left-to-right locales,
            left-aligned for right-to-left locales).
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextAlign.Null">
            <summary>
            Clear the value, to revert back to browser's default.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextBaselineAlign.Top">
            <summary>
            The text baseline is the top of the em square.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextBaselineAlign.Hanging">
            <summary>
            The text baseline is the hanging baseline.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextBaselineAlign.Middle">
            <summary>
            The text baseline is the middle of the em square.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextBaselineAlign.Alphabetic">
            <summary>
            Default. The text baseline is the normal alphabetic baseline.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextBaselineAlign.Ideographic">
            <summary>
            The text baseline is the ideographic baseline; this is the bottom of the body of the characters,
            if the main body of characters protrudes beneath the alphabetic baseline.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextBaselineAlign.Bottom">
            <summary>
            The text baseline is the bottom of the bounding box. This differs from the ideographic baseline
            in that the ideographic baseline doesn't consider descenders.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextBaselineAlign.Null">
            <summary>
            Clear the value, to revert back to browser's default.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextDirection.LtR">
            <summary>
            The text direction is left-to-right.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextDirection.RtL">
            <summary>
            The text direction is right-to-left.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextDirection.Inherit">
            <summary>
            Default. The text direction is inherited from the &lt;canvas> element or the Document as appropriate.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasTextDirection.Null">
            <summary>
            Clear the value, to revert back to browser's default.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasRepetitionTypes.Repeat">
            <summary>
            Default. Repeat in both directions.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasRepetitionTypes.RepeatX">
            <summary>
            Repeat in horizontal direction only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasRepetitionTypes.Inherit">
            <summary>
            Repeat in vertical direction only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasRepetitionTypes.NoRepeat">
            <summary>
            Do not repeat neither horizontally nor vertically.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasRepetitionTypes.Null">
            <summary>
            Clear the value, to revert back to browser's default.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasFillRule.NonZero">
            <summary>
            Default. The non-zero winding rule.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasTypes.CanvasFillRule.EvenOdd">
            <summary>
            The even-odd winding rule.
            </summary>
        </member>
        <member name="T:Bridge.Html5.CanvasRenderingContext2D">
            <summary>
            The CanvasRenderingContext2D interface provides the 2D rendering context for the drawing surface of a
            &lt;canvas> element.
            To get an object of this interface, call getContext() on a &lt;canvas>, supplying
            "CanvasContext2DType.CanvasRenderingContext2D" as the argument.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.ClearRect(Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32})">
            <summary>
            Sets all pixels in the rectangle defined by starting point (x, y) and size (width, height)
            to transparent black, erasing any previously drawn content.
            </summary>
            <param name="x">The x axis of the coordinate for the rectangle starting point.</param>
            <param name="y">The y axis of the coordinate for the rectangle starting point.</param>
            <param name="width">The rectangle's width.</param>
            <param name="height">The rectangle's height.</param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.FillRect(Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32})">
            <summary>
            Draws a filled rectangle at (x, y) position whose size is determined by width and height.
            </summary>
            <param name="x">The x axis of the coordinate for the rectangle starting point.</param>
            <param name="y">The y axis of the coordinate for the rectangle starting point.</param>
            <param name="width">The rectangle's width.</param>
            <param name="height">The rectangle's height.</param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.StrokeRect(Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32})">
            <summary>
            Paints a rectangle which has a starting point at (x, y) and has a w width and an h height
            onto the canvas, using the current stroke style.
            </summary>
            <param name="x">The x axis of the coordinate for the rectangle starting point.</param>
            <param name="y">The y axis of the coordinate for the rectangle starting point.</param>
            <param name="width">The rectangle's width.</param>
            <param name="height">The rectangle's height.</param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.FillText(System.String,Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32})">
            <summary>
            Draws (fills) a given text at the given (x,y) position.
            </summary>
            <param name="text">
            The text to render using the current font, textAlign, textBaseline, and direction values.
            </param>
            <param name="x">The x axis of the coordinate for the text starting point.</param>
            <param name="y">The y axis of the coordinate for the text starting point.</param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.FillText(System.String,Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.Nullable{System.UInt32},System.Nullable{System.Int32}})">
            <summary>
            Draws (fills) a given text at the given (x,y) position.
            </summary>
            <param name="text">
            The text to render using the current font, textAlign, textBaseline, and direction values.
            </param>
            <param name="x">The x axis of the coordinate for the text starting point.</param>
            <param name="y">The y axis of the coordinate for the text starting point.</param>
            <param name="maxWidth">
            The maximum width to draw. If specified, and the string is computed to be wider than
            this width, the font is adjusted to use a more horizontally condensed font (if one is
            available or if a reasonably readable one can be synthesized by scaling the current
            font horizontally) or a smaller font.
            </param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.StrokeText(System.String,Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32})">
            <summary>
            Draws (strokes) a given text at the given (x, y) position.
            </summary>
            <param name="text">
            The text to render using the current font, textAlign, textBaseline, and direction values.
            </param>
            <param name="x">The x axis of the coordinate for the text starting point.</param>
            <param name="y">The y axis of the coordinate for the text starting point.</param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.StrokeText(System.String,Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.Nullable{System.UInt32},System.Nullable{System.Int32}})">
            <summary>
            Draws (strokes) a given text at the given (x, y) position.
            </summary>
            <param name="text">
            The text to render using the current font, textAlign, textBaseline, and direction values.
            </param>
            <param name="x">The x axis of the coordinate for the text starting point.</param>
            <param name="y">The y axis of the coordinate for the text starting point.</param>
            <param name="maxWidth">
            The maximum width to draw. If specified, and the string is computed to be wider than
            this width, the font is adjusted to use a more horizontally condensed font (if one is
            available or if a reasonably readable one can be synthesized by scaling the current
            font horizontally) or a smaller font.
            </param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.MeasureText(System.String)">
            <summary>
            Returns a TextMetrics object.
            </summary>
            <param name="text">The text to measure.</param>
            <returns>A TextMetrics object.</returns>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.LineWidth">
            <summary>
            Width of lines. Default 1.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.LineCap">
            <summary>
            Type of endings on the end of lines. Possible values: butt (default), round, square.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.LineJoin">
            <summary>
            Defines the type of corners where two lines meet. Possible values: round, bevel, miter (default).
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.MiterLimit">
            <summary>
            Miter limit ratio. Default 10.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.GetLineDash">
            <summary>
            Gets the current line dash pattern.
            </summary>
            <returns>
            An Array. A list of numbers that specifies distances to alternately draw a line and a gap
            (in coordinate space units). If the number, when setting the elements, was odd, the elements
            of the array get copied and concatenated.
            For example, setting the line dash to [5, 15, 25] will result in getting back
            [5, 15, 25, 5, 15, 25].
            </returns>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.SetLineDash(Bridge.Union{System.Double[],System.UInt32[],System.Int32[],System.Collections.Generic.IEnumerable{Bridge.Union{System.Double,System.UInt32,System.Int32}}})">
            <summary>
            Sets the current line dash pattern.
            </summary>
            <param name="segments">
            An Array. A list of numbers that specifies distances to alternately draw a line and a gap
            (in coordinate space units). If the number of elements in the array is odd, the elements
            of the array get copied and concatenated.
            For example, [5, 15, 25] will become [5, 15, 25, 5, 15, 25].
            </param>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.LineDashOffset">
            <summary>
            Specifies where to start a dash array on a line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.Font">
            <summary>
            Font setting. Default value 10px sans-serif.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.TextAlign">
            <summary>
            Text alignment setting. Possible values: start (default), end, left, right or center.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.TextBaseline">
            <summary>
            Baseline alignment setting. Possible values: top, hanging, middle, alphabetic (default),
            ideographic, bottom.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.Direction">
            <summary>
            Directionality. Possible values: ltr, rtl, inherit (default).
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.FillStyle">
            <summary>
            Color or style to use inside shapes. Default #000 (black).
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.StrokeStyle">
            <summary>
            Color or style to use for the lines around shapes. Default #000 (black).
            </summary>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.CreateLinearGradient(Bridge.Union{System.UInt32,System.Int32,System.Double},Bridge.Union{System.UInt32,System.Int32,System.Double},Bridge.Union{System.UInt32,System.Int32,System.Double},Bridge.Union{System.UInt32,System.Int32,System.Double})">
            <summary>
            Creates a linear gradient along the line given by the coordinates represented by the parameters.
            </summary>
            <param name="x0">The x axis of the coordinate of the start point.</param>
            <param name="y0">The y axis of the coordinate of the start point.</param>
            <param name="x1">The x axis of the coordinate of the end point.</param>
            <param name="y1">The y axis of the coordinate of the end point.</param>
            <returns>A linear CanvasGradient initialized with the specified line.</returns>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.CreateRadialGradient(Bridge.Union{System.UInt32,System.Int32,System.Double},Bridge.Union{System.UInt32,System.Int32,System.Double},Bridge.Union{System.UInt32,System.Int32,System.Double},Bridge.Union{System.UInt32,System.Int32,System.Double},Bridge.Union{System.UInt32,System.Int32,System.Double},Bridge.Union{System.UInt32,System.Int32,System.Double})">
            <summary>
            Creates a radial gradient along the line given by the coordinates represented by the parameters.
            </summary>
            <param name="x0">The x axis of the coordinate of the start circle.</param>
            <param name="y0">The y axis of the coordinate of the start circle.</param>
            <param name="r0">The radius of the start circle.</param>
            <param name="x1">The x axis of the coordinate of the end circle.</param>
            <param name="y1">The y axis of the coordinate of the end circle.</param>
            <param name="r1">The radius of the end circle.</param>
            <returns>A radial CanvasGradient initialized with the two specified circles.</returns>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.CreatePattern(Bridge.Union{Bridge.Html5.HTMLImageElement,Bridge.Html5.HTMLVideoElement,Bridge.Html5.HTMLCanvasElement,Bridge.Html5.CanvasRenderingContext2D,System.Object,Bridge.Html5.ImageData,Bridge.Html5.Blob},Bridge.Html5.CanvasTypes.CanvasRepetitionTypes)">
            <summary>
            Creates a pattern using the specified image (a CanvasImageSource). It repeats the source in the
            directions specified by the repetition argument. This method returns a CanvasPattern.
            </summary>
            <param name="image">
            A CanvasImageSource to be used as image to repeat. It can either be a:
            • HTMLImageElement (&lt;img>),
            • HTMLVideoElement (&lt;video>),
            • HTMLCanvasElement (&lt;canvas>),
            • CanvasRenderingContext2D,
            • ImageBitmap (c# object for now),
            • ImageData, or a
            • Blob.
            </param>
            <param name="repetition"></param>
            <returns>An opaque CanvasPattern object describing a pattern.</returns>
            <remarks>
            At the time of implementation, ImageBitmap had no documentation and Bridge.NET did not have
            it defined inside.
            </remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.ShadowBlur">
            <summary>
            Specifies the blurring effect. Default 0
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.ShadowColor">
            <summary>
            Color of the shadow. Default fully-transparent black.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.ShadowOffsetX">
            <summary>
            Horizontal distance the shadow will be offset. Default 0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.ShadowOffsetY">
            <summary>
            Vertical distance the shadow will be offset. Default 0.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.BeginPath">
            <summary>
            Starts a new path by emptying the list of sub-paths. Call this method when you want
            to create a new path.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.Fill">
            <summary>
            Fills the subpaths with the current fill style.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.Fill(Bridge.Html5.CanvasTypes.CanvasFillRule)">
            <summary>
            Fills the subpaths with the specified fill rule.
            </summary>
            <param name="fillRule">
            The algorithm by which to determine if a point is inside a path or outside a path.
            </param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.Fill(Bridge.Html5.Path2D,Bridge.Html5.CanvasTypes.CanvasFillRule)">
            <summary>
            Fills the specified path with the specified fill rule.
            </summary>
            <param name="path">A Path2D path to fill.</param>
            <param name="fillRule">
            The algorithm by which to determine if a point is inside a path or outside a path.
            </param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.Stroke">
            <summary>
            Strokes the subpaths with the current stroke style.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.Stroke(Bridge.Html5.Path2D)">
            <summary>
            Strokes the subpaths with the current stroke style.
            </summary>
            <param name="path">A Path2D path to stroke.</param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.DrawFocusIfNeeded(Bridge.Html5.HTMLElement)">
            <summary>
            If a given element is focused, this method draws a focus ring around the current path.
            </summary>
            <param name="element">The element to check whether it is focused or not.</param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.DrawFocusIfNeeded(Bridge.Html5.Path2D,Bridge.Html5.HTMLElement)">
            <summary>
            If a given element is focused, this method draws a focus ring around the current path.
            </summary>
            <param name="path">A Path2D path to use.</param>
            <param name="element">The element to check whether it is focused or not.</param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.ScrollPathIntoView">
            <summary>
            Scrolls the current path or a given path into the view.
            </summary>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.ScrollPathIntoView(Bridge.Html5.Path2D)">
            <summary>
            Scrolls the current path or a given path into the view.
            </summary>
            <param name="path">A Path2D path to use.</param>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.Clip">
            <summary>
            Creates a clipping path from the current sub-paths. Everything drawn after clip() is
            called appears inside the clipping path only. For an example, see Clipping paths in
            the Canvas tutorial.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.Clip(Bridge.Html5.CanvasTypes.CanvasFillRule)">
            <summary>
            Creates a clipping path from the current sub-paths. Everything drawn after clip() is
            called appears inside the clipping path only. For an example, see Clipping paths in
            the Canvas tutorial.
            </summary>
            <param name="fillRule">
            The algorithm by which to determine if a point is inside a path or outside a path.
            </param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.Clip(Bridge.Html5.Path2D,Bridge.Html5.CanvasTypes.CanvasFillRule)">
            <summary>
            Creates a clipping path from the current sub-paths. Everything drawn after clip() is
            called appears inside the clipping path only. For an example, see Clipping paths in
            the Canvas tutorial.
            </summary>
            <param name="path">A Path2D path to clip.</param>
            <param name="fillRule">
            The algorithm by which to determine if a point is inside a path or outside a path.
            </param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.IsPointInPath(Bridge.Union{System.UInt32,System.Int32,System.Double},Bridge.Union{System.UInt32,System.Int32,System.Double})">
            <summary>
            Reports whether or not the specified point is contained in the current path.
            </summary>
            <param name="x">The X coordinate of the point to check.</param>
            <param name="y">The Y coordinate of the point to check.</param>
            <returns>
            A Boolean, which is true if the specified point is contained in the current or specfied path,
            otherwise false.
            </returns>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.IsPointInPath(Bridge.Union{System.UInt32,System.Int32,System.Double},Bridge.Union{System.UInt32,System.Int32,System.Double},System.Nullable{Bridge.Html5.CanvasTypes.CanvasFillRule})">
            <summary>
            Reports whether or not the specified point is contained in the current path.
            </summary>
            <param name="x">The X coordinate of the point to check.</param>
            <param name="y">The Y coordinate of the point to check.</param>
            <param name="fillRule">
            The algorithm by which to determine if a point is inside a path or outside a path.
            </param>
            <returns>
            A Boolean, which is true if the specified point is contained in the current or specfied path,
            otherwise false.
            </returns>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.IsPointInPath(Bridge.Html5.Path2D,Bridge.Union{System.UInt32,System.Int32,System.Double},Bridge.Union{System.UInt32,System.Int32,System.Double})">
            <summary>
            Reports whether or not the specified point is contained in the current path.
            </summary>
            <param name="path">A Path2D path to use.</param>
            <param name="x">The X coordinate of the point to check.</param>
            <param name="y">The Y coordinate of the point to check.</param>
            <returns>
            A Boolean, which is true if the specified point is contained in the current or specfied path,
            otherwise false.
            </returns>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.IsPointInPath(Bridge.Html5.Path2D,Bridge.Union{System.UInt32,System.Int32,System.Double},Bridge.Union{System.UInt32,System.Int32,System.Double},System.Nullable{Bridge.Html5.CanvasTypes.CanvasFillRule})">
            <summary>
            Reports whether or not the specified point is contained in the current path.
            </summary>
            <param name="path">A Path2D path to use.</param>
            <param name="x">The X coordinate of the point to check.</param>
            <param name="y">The Y coordinate of the point to check.</param>
            <param name="fillRule">
            The algorithm by which to determine if a point is inside a path or outside a path.
            </param>
            <returns>
            A Boolean, which is true if the specified point is contained in the current or specfied path,
            otherwise false.
            </returns>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.IsPointInStroke(Bridge.Union{System.UInt32,System.Int32,System.Double},Bridge.Union{System.UInt32,System.Int32,System.Double})">
            <summary>
            Reports whether or not the specified point is inside the area contained by the stroking of a path.
            </summary>
            <param name="x">The X coordinate of the point to check.</param>
            <param name="y">The Y coordinate of the point to check.</param>
            <returns>
            A Boolean, which is true if the point is inside the area contained by the stroking of a path,
            otherwise false.
            </returns>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.IsPointInStroke(Bridge.Html5.Path2D,Bridge.Union{System.UInt32,System.Int32,System.Double},Bridge.Union{System.UInt32,System.Int32,System.Double})">
            <summary>
            Reports whether or not the specified point is inside the area contained by the stroking of a path.
            </summary>
            <param name="path">A Path2D path to use.</param>
            <param name="x">The X coordinate of the point to check.</param>
            <param name="y">The Y coordinate of the point to check.</param>
            <returns>
            A Boolean, which is true if the point is inside the area contained by the stroking of a path,
            otherwise false.
            </returns>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.CurrentTransform">
            <summary>
            Current transformation matrix (SVGMatrix object).
            </summary>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.Rotate(System.Double)">
            <summary>
            Adds a rotation to the transformation matrix. The angle argument represents a clockwise rotation
            angle and is expressed in radians.
            </summary>
            <param name="angle">
            The angle to rotate clockwise in radians. You can use degree * Math.PI / 180 if you want to
            calculate from a degree value.
            </param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.Scale(Bridge.Union{System.Int32,System.Double},Bridge.Union{System.Int32,System.Double})">
            <summary>
            Adds a scaling transformation to the canvas units by x horizontally and by y vertically.
            </summary>
            <param name="x">Scaling factor in the horizontal direction.</param>
            <param name="y">Scaling factor in the vertical direction.</param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.Translate(Bridge.Union{System.Int32,System.Double},Bridge.Union{System.Int32,System.Double})">
            <summary>
            Adds a translation transformation by moving the canvas and its origin x horizontally and
            y vertically on the grid.
            </summary>
            <param name="x">Distance to move in the horizontal direction.</param>
            <param name="y">Distance to move in the vertical direction.</param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.Transform(Bridge.Union{System.Int32,System.Double},Bridge.Union{System.Int32,System.Double},Bridge.Union{System.Int32,System.Double},Bridge.Union{System.Int32,System.Double},Bridge.Union{System.Int32,System.Double},Bridge.Union{System.Int32,System.Double})">
            <summary>
            Multiplies the current transformation matrix with the matrix described by its arguments.
            Matrix is described by a 3x3 [ a c e // b d f // 0 0 1 ] (// means a matrix line break).
            </summary>
            <param name="a">m11: Horizontal scaling.</param>
            <param name="b">m12: Horizontal skewing.</param>
            <param name="c">m21: Vertical skewing.</param>
            <param name="d">m22: Vertical scaling.</param>
            <param name="e">dx: Horizontal moving.</param>
            <param name="f">dy: Vertical moving.</param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.SetTransform(Bridge.Union{System.Int32,System.Double},Bridge.Union{System.Int32,System.Double},Bridge.Union{System.Int32,System.Double},Bridge.Union{System.Int32,System.Double},Bridge.Union{System.Int32,System.Double},Bridge.Union{System.Int32,System.Double})">
            <summary>
            Resets the current transform to the identity matrix, and then invokes the transform()
            method with the same arguments.
            Matrix is described by a 3x3 [ a c e // b d f // 0 0 1 ] (// means a matrix line break).
            </summary>
            <param name="a">m11: Horizontal scaling.</param>
            <param name="b">m12: Horizontal skewing.</param>
            <param name="c">m21: Vertical skewing.</param>
            <param name="d">m22: Vertical scaling.</param>
            <param name="e">dx: Horizontal moving.</param>
            <param name="f">dy: Vertical moving.</param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.ResetTransform">
            <summary>
            Resets the current transform by the identity matrix.
            </summary>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.GlobalAlpha">
            <summary>
            Alpha value that is applied to shapes and images before they are composited onto the canvas.
            Default 1.0 (opaque).
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.GlobalCompositeOperation">
            <summary>
            With globalAlpha applied this sets how shapes and images are drawn onto the existing bitmap.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.DrawImage(Bridge.Union{Bridge.Html5.HTMLImageElement,Bridge.Html5.HTMLVideoElement,Bridge.Html5.HTMLCanvasElement,Bridge.Html5.CanvasRenderingContext2D},Bridge.Union{System.Int32,System.UInt32,System.Single,System.Double},Bridge.Union{System.Int32,System.UInt32,System.Single,System.Double})">
            <summary>
            Draws the specified image. This method is available in multiple formats, providing a great
            deal of flexibility in its use.
            </summary>
            <param name="image">
            An element to draw into the context. The specification permits any canvas image source.
            </param>
            <param name="dx">
            The X coordinate in the destination canvas at which to place the top-left corner of the source image.
            </param>
            <param name="dy">
            The Y coordinate in the destination canvas at which to place the top-left corner of the source image.
            </param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.DrawImage(Bridge.Union{Bridge.Html5.HTMLImageElement,Bridge.Html5.HTMLVideoElement,Bridge.Html5.HTMLCanvasElement,Bridge.Html5.CanvasRenderingContext2D},Bridge.Union{System.Int32,System.UInt32,System.Single,System.Double},Bridge.Union{System.Int32,System.UInt32,System.Single,System.Double},Bridge.Union{System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.Single},System.Nullable{System.Double}},Bridge.Union{System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.Single},System.Nullable{System.Double}})">
            <summary>
            Draws the specified image. This method is available in multiple formats, providing a great
            deal of flexibility in its use.
            </summary>
            <param name="image">
            An element to draw into the context. The specification permits any canvas image source.
            </param>
            <param name="dx">
            The X coordinate in the destination canvas at which to place the top-left corner of the source image.
            </param>
            <param name="dy">
            The Y coordinate in the destination canvas at which to place the top-left corner of the source image.
            </param>
            <param name="dWidth">
            The width to draw the image in the destination canvas. This allows scaling of the drawn image.
            If null, the image is not scaled in height when drawn.
            </param>
            <param name="dHeight">
            The height to draw the image in the destination canvas. This allows scaling of the drawn image.
            If null, the image is not scaled in height when drawn.
            </param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.DrawImage(Bridge.Union{Bridge.Html5.HTMLImageElement,Bridge.Html5.HTMLVideoElement,Bridge.Html5.HTMLCanvasElement,Bridge.Html5.CanvasRenderingContext2D},Bridge.Union{System.Int32,System.UInt32,System.Single,System.Double},Bridge.Union{System.Int32,System.UInt32,System.Single,System.Double},Bridge.Union{System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.Single},System.Nullable{System.Double}},Bridge.Union{System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.Single},System.Nullable{System.Double}},Bridge.Union{System.Int32,System.UInt32,System.Single,System.Double},Bridge.Union{System.Int32,System.UInt32,System.Single,System.Double},Bridge.Union{System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.Single},System.Nullable{System.Double}},Bridge.Union{System.Nullable{System.Int32},System.Nullable{System.UInt32},System.Nullable{System.Single},System.Nullable{System.Double}})">
            <summary>
            Draws the specified image. This method is available in multiple formats, providing a great
            deal of flexibility in its use.
            </summary>
            <param name="image">
            An element to draw into the context. The specification permits any canvas image source.
            </param>
            <param name="sx">
            The X coordinate of the top left corner of the sub-rectangle of the source image to draw into
            the destination context.
            </param>
            <param name="sy">
            The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into
            the destination context.
            </param>
            <param name="sWidth">
            The width of the sub-rectangle of the source image to draw into the destination context.
            </param>
            <param name="sHeight">
            The height of the sub-rectangle of the source image to draw into the destination context.
            </param>
            <param name="dx">
            The X coordinate in the destination canvas at which to place the top-left corner of the source image.
            </param>
            <param name="dy">
            The Y coordinate in the destination canvas at which to place the top-left corner of the source image.
            </param>
            <param name="dWidth">
            The width to draw the image in the destination canvas. This allows scaling of the drawn image.
            If not specified or null, the image is not scaled in height when drawn.
            </param>
            <param name="dHeight">
            The height to draw the image in the destination canvas. This allows scaling of the drawn image.
            If not specified or null, the image is not scaled in height when drawn.
            </param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.CreateImageData(Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32})">
            <summary>
            Creates a new, blank ImageData object with the specified dimensions. All of the pixels in the
            new object are transparent black.
            </summary>
            <param name="width">The width to give the new ImageData object.</param>
            <param name="height">The height to give the new ImageData object.</param>
            <returns>
            A new ImageData object with the specified width and height. The new object is filled with
            transparent black pixels.
            </returns>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.CreateImageData(Bridge.Html5.ImageData)">
            <summary>
            Creates a new, blank ImageData object with the specified dimensions. All of the pixels in the
            new object are transparent black.
            </summary>
            <param name="imagedata">
            An existing ImageData object from which to copy the width and height. The image itself is not copied.
            </param>
            <returns>
            A new ImageData object with the specified width and height. The new object is filled with
            transparent black pixels.
            </returns>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.GetImageData(Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32},Bridge.Union{System.UInt32,System.Int32})">
            <summary>
            Returns an ImageData object representing the underlying pixel data for the area of the canvas
            denoted by the rectangle which starts at (sx, sy) and has an sw width and sh height.
            </summary>
            <param name="sx">
            The x axis of the coordinate for the rectangle startpoint from which the ImageData will be extracted.
            </param>
            <param name="sy">
            The y axis of the coordinate for the rectangle endpoint from which the ImageData will be extracted.
            </param>
            <param name="sw">
            The width of the rectangle from which the ImageData will be extracted.
            </param>
            <param name="sh">
            The height of the rectangle from which the ImageData will be extracted.
            </param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.PutImageData(Bridge.Html5.ImageData,System.Int32,System.Int32)">
            <summary>
            Paints data from the given ImageData object onto the bitmap. If a dirty rectangle is provided,
            only the pixels from that rectangle are painted.
            </summary>
            <param name="imagedata">An imageData object containing the array of pixel values.</param>
            <param name="dx">
            Position offset in the target canvas context of the rectangle to be painted, relative to the
            rectangle in the origin image data.
            </param>
            <param name="dy">
            Position offset in the target canvas context of the rectangle to be painted, relative to the
            rectangle in the origin image data.
            </param>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.PutImageData(Bridge.Html5.ImageData,System.Int32,System.Int32,Bridge.Union{System.Nullable{System.UInt32},System.Nullable{System.Int32}},Bridge.Union{System.Nullable{System.UInt32},System.Nullable{System.Int32}},Bridge.Union{System.Nullable{System.UInt32},System.Nullable{System.Int32}},Bridge.Union{System.Nullable{System.UInt32},System.Nullable{System.Int32}})">
            <summary>
            Paints data from the given ImageData object onto the bitmap. If a dirty rectangle is provided,
            only the pixels from that rectangle are painted.
            </summary>
            <param name="imagedata">An imageData object containing the array of pixel values.</param>
            <param name="dx">
            Position offset in the target canvas context of the rectangle to be painted, relative to the
            rectangle in the origin image data.
            </param>
            <param name="dy">
            Position offset in the target canvas context of the rectangle to be painted, relative to the
            rectangle in the origin image data.
            </param>
            <param name="dirtyX">
            Position of the top left point of the rectangle to be painted, in the origin image data.
            Defaults to the top left of the whole image data.
            </param>
            <param name="dirtyY">
            Position of the top left point of the rectangle to be painted, in the origin image data.
            Defaults to the top left of the whole image data.
            </param>
            <param name="dirtyWidth">
            Width of the rectangle to be painted, in the origin image data. Defaults to the width of the image data.
            </param>
            <param name="dirtyHeight">
            Height of the rectangle to be painted, in the origin image data. Defaults to the height of the image data.
            </param>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.ImageSmoothingEnabled">
            <summary>
            Image smoothing mode; if disabled, images will not be smoothed if scaled.
            </summary>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.Save">
            <summary>
            Saves the current drawing style state using a stack so you can revert any change you make to it
            using Restore().
            </summary>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.Restore">
            <summary>
            Restores the drawing style state to the last element on the 'state stack' saved by save().
            </summary>
        </member>
        <member name="F:Bridge.Html5.CanvasRenderingContext2D.Canvas">
            <summary>
            A read-only back-reference to the HTMLCanvasElement.
            Might be null if it is not associated with a &lt;canvas> element.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.AddHitRegion">
            <summary>
            Adds a hit region to the canvas.
            </summary>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.AddHitRegion(Bridge.Html5.CanvasRenderingContext2D.CanvasHitRegionOptions)">
            <summary>
            Adds a hit region to the canvas.
            </summary>
            <param name="options">
            The options argument is optional. When provided, it is an CanvasHitRegionOptions
            object with one or more of its properties set.
            </param>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.RemoveHitRegion(System.String)">
            <summary>
            Removes the hit region with the specified id from the canvas.
            </summary>
            <param name="id">A DOMString representing the id of the region that is to be removed.</param>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="M:Bridge.Html5.CanvasRenderingContext2D.ClearHitRegions">
            <summary>
            Removes all hit regions from the canvas.
            </summary>
            <remarks>This is experimental API that should not be used in production code.</remarks>
        </member>
        <member name="T:Bridge.Html5.CanvasRenderingContext2D.CanvasHitRegionOptions">
            <summary>
            Most of these APIs are deprecated and will be removed in the future.
            </summary>
        </member>
        <member name="P:Bridge.Html5.CanvasRenderingContext2D.CanvasHitRegionOptions.Path">
            <summary>
            A Path2D object describing the area of the hit region. If not provided, the current path is used.
            </summary>
        </member>
        <member name="P:Bridge.Html5.CanvasRenderingContext2D.CanvasHitRegionOptions.fillRule">
            <summary>
            The fill rule to use (defaults to "nonzero").
            </summary>
        </member>
        <member name="P:Bridge.Html5.CanvasRenderingContext2D.CanvasHitRegionOptions.Id">
            <summary>
            The ID for this hit region to reference it for later use in events, for example.
            </summary>
        </member>
        <member name="P:Bridge.Html5.CanvasRenderingContext2D.CanvasHitRegionOptions.ParentID">
            <summary>
            The ID of the parent region for cursor fallback and navigation by accessibility tools.
            </summary>
        </member>
        <member name="P:Bridge.Html5.CanvasRenderingContext2D.CanvasHitRegionOptions.Cursor">
            <summary>
            The cursor to use when the mouse is over this region (defaults to "inherit").
            Inherits the cursor of the parent hit region, if any, or the canvas element's cursor.
            </summary>
        </member>
        <member name="P:Bridge.Html5.CanvasRenderingContext2D.CanvasHitRegionOptions.Control">
            <summary>
            An element (descendant of the canvas) to which events are to be routed. Defaults to null.
            </summary>
        </member>
        <member name="P:Bridge.Html5.CanvasRenderingContext2D.CanvasHitRegionOptions.Label">
            <summary>
            A text label for accessibility tools to use as a description of the region,
            if there is no control. Defaults to null.
            </summary>
        </member>
        <member name="P:Bridge.Html5.CanvasRenderingContext2D.CanvasHitRegionOptions.role">
            <summary>
            An ARIA role for accessibility tools to determine how to represent this region,
            if there is no control. Defaults to null.
            </summary>
        </member>
        <member name="T:Bridge.Html5.ReadyAttribute">
            <summary>
            Makes the method to be called once the page is loaded. If using jQuery2, triggers jQuery's event,
            otherwise, uses DOMContentReady event from HTML5.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TextMetrics">
            <summary>
            The TextMetrics interface represents the dimension of a text in the canvas, as created by the
            CanvasRenderingContext2D.measureText() method.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextMetrics.Width">
            <summary>
            A double giving the calculated width of a segment of inline text in CSS pixels.
            It takes into account the current font of the context.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextMetrics.ActualBoundingBoxLeft">
            <summary>
            A double giving the distance parallel to the baseline from the alignment point given by the
            CanvasRenderingContext2D.textAlign property to the left side of the bounding rectangle of the
            given text, in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextMetrics.ActualBoundingBoxRight">
            <summary>
            A double giving the distance parallel to the baseline from the alignment point given by the
            CanvasRenderingContext2D.textAlign property to the right side of the bounding rectangle of the
            given text, in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextMetrics.FontBoundingBoxAscent">
            <summary>
            A double giving the distance from the horizontal line indicated by the
            CanvasRenderingContext2D.textBaseline attribute to the top of the highest bounding rectangle
            of all the fonts used to render the text, in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextMetrics.FontBoundingBoxDescent">
            <summary>
            A double giving the distance from the horizontal line indicated by the
            CanvasRenderingContext2D.textBaseline attribute to the top of the bounding rectangle of all the
            fonts used to render the text, in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextMetrics.ActualBoundingBoxAscent">
            <summary>
            A double giving the distance from the horizontal line indicated by the
            CanvasRenderingContext2D.textBaseline attribute to the top of the bounding rectangle used to
            render the text, in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextMetrics.ActualBoundingBoxDescent">
            <summary>
            A double giving the distance from the horizontal line indicated by the
            CanvasRenderingContext2D.textBaseline attribute to the bottom of the bounding rectangle used
            to render the text, in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextMetrics.EmHeightAscent">
            <summary>
            A double giving the distance from the horizontal line indicated by the
            CanvasRenderingContext2D.textBaseline property to the top of the em square in the line box,
            in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextMetrics.EmHeightDescent">
            <summary>
            A double giving the distance from the horizontal line indicated by the
            CanvasRenderingContext2D.textBaseline property to the bottom of the em square in the line box,
            in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextMetrics.HangingBaseLine">
            <summary>
            A double giving the distance from the horizontal line indicated by the
            CanvasRenderingContext2D.textBaseline property to the hanging baseline of the line box,
            in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextMetrics.AlphabeticBaseline">
            <summary>
            A double giving the distance from the horizontal line indicated by the
            CanvasRenderingContext2D.textBaseline property to the alphabetic baseline of the line box,
            in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextMetrics.IdeographicBaseline">
            <summary>
            A double giving the distance from the horizontal line indicated by the
            CanvasRenderingContext2D.textBaseline property to the ideographic baseline of the line box,
            in CSS pixels.
            </summary>
        </member>
        <member name="T:Bridge.Html5.JSON">
            <summary>
            The JSON object contains methods for parsing JavaScript Object Notation (JSON) and converting values to JSON. It can't be called or constructed, and aside from its two method properties it has no interesting functionality of its own.
            </summary>
        </member>
        <member name="M:Bridge.Html5.JSON.Parse``1(System.String)">
            <summary>
            The JSON.parse() method parses a string as JSON, optionally transforming the value produced by parsing.
            Not compatible with collections of nonprimitives - for that case use <see cref="M:Bridge.Html5.JSON.ParseAsArray``1(System.String)"/>
            </summary>
            <param name="text">The string to parse as JSON. See the JSON object for a description of JSON syntax.</param>
            <returns>The Object corresponding to the given JSON text.</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.ParseAsArray``1(System.String)">
            <summary>
            Arrays of custom classes compatible version of <see cref="M:Bridge.Html5.JSON.Parse``1(System.String)"/>
            </summary>
            <param name="text">The string to parse as JSON. See the JSON object for a description of JSON syntax.</param>
            <returns>The Object corresponding to the given JSON text.</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.Parse``1(System.String,System.Delegate)">
            <summary>
            The JSON.parse() method parses a string as JSON, optionally transforming the value produced by parsing.
            </summary>
            <param name="text">The string to parse as JSON. See the JSON object for a description of JSON syntax.</param>
            <param name="reviver">If a function, prescribes how the value originally produced by parsing is transformed, before being returned.</param>
            <returns>The Object corresponding to the given JSON text.</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.Parse``1(System.String,System.Func{System.String,System.Object,System.Object})">
            <summary>
            The JSON.parse() method parses a string as JSON, optionally transforming the value produced by parsing.
            </summary>
            <param name="text">The string to parse as JSON. See the JSON object for a description of JSON syntax.</param>
            <param name="reviver">If a function, prescribes how the value originally produced by parsing is transformed, before being returned.</param>
            <returns>The Object corresponding to the given JSON text.</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.Parse(System.String)">
            <summary>
            The JSON.parse() method parses a string as JSON, optionally transforming the value produced by parsing.
            </summary>
            <param name="text">The string to parse as JSON. See the JSON object for a description of JSON syntax.</param>
            <returns>The Object corresponding to the given JSON text.</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.Parse(System.String,System.Delegate)">
            <summary>
            The JSON.parse() method parses a string as JSON, optionally transforming the value produced by parsing.
            </summary>
            <param name="text">The string to parse as JSON. See the JSON object for a description of JSON syntax.</param>
            <param name="reviver">If a function, prescribes how the value originally produced by parsing is transformed, before being returned.</param>
            <returns>The Object corresponding to the given JSON text.</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.Parse(System.String,System.Func{System.String,System.Object,System.Object})">
            <summary>
            The JSON.parse() method parses a string as JSON, optionally transforming the value produced by parsing.
            </summary>
            <param name="text">The string to parse as JSON. See the JSON object for a description of JSON syntax.</param>
            <param name="reviver">If a function, prescribes how the value originally produced by parsing is transformed, before being returned.</param>
            <returns>The Object corresponding to the given JSON text.</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.Stringify(System.Object)">
            <summary>
            The JSON.stringify() method converts a value to JSON, optionally replacing values if a replacer function is specified, or optionally including only the specified properties if a replacer array is specified.
            </summary>
            <param name="value">The value to convert to a JSON string.</param>
            <returns>The resulting JSON string</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.Stringify(System.Object,System.Delegate)">
            <summary>
            The JSON.stringify() method converts a value to JSON, optionally replacing values if a replacer function is specified, or optionally including only the specified properties if a replacer array is specified.
            </summary>
            <param name="value">The value to convert to a JSON string.</param>
            <param name="replacer">If a function, transforms values and properties encountered while stringifying; if an array, specifies the set of properties included in objects in the final string.</param>
            <returns>The resulting JSON string</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.Stringify(System.Object,System.Func{System.String,System.Object,System.Object})">
            <summary>
            The JSON.stringify() method converts a value to JSON, optionally replacing values if a replacer function is specified, or optionally including only the specified properties if a replacer array is specified.
            </summary>
            <param name="value">The value to convert to a JSON string.</param>
            <param name="replacer">If a function, transforms values and properties encountered while stringifying; if an array, specifies the set of properties included in objects in the final string.</param>
            <returns>The resulting JSON string</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.Stringify(System.Object,System.Delegate,System.Int32)">
            <summary>
            The JSON.stringify() method converts a value to JSON, optionally replacing values if a replacer function is specified, or optionally including only the specified properties if a replacer array is specified.
            </summary>
            <param name="value">The value to convert to a JSON string.</param>
            <param name="replacer">If a function, transforms values and properties encountered while stringifying; if an array, specifies the set of properties included in objects in the final string.</param>
            <param name="space">Causes the resulting string to be pretty-printed. If it is a number, successive levels in the stringification will each be indented by this many space characters (up to 10). If it is a string, successive levels will indented by this string (or the first ten characters of it).</param>
            <returns>The resulting JSON string</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.Stringify(System.Object,System.Func{System.String,System.Object,System.Object},System.Int32)">
            <summary>
            The JSON.stringify() method converts a value to JSON, optionally replacing values if a replacer function is specified, or optionally including only the specified properties if a replacer array is specified.
            </summary>
            <param name="value">The value to convert to a JSON string.</param>
            <param name="replacer">If a function, transforms values and properties encountered while stringifying; if an array, specifies the set of properties included in objects in the final string.</param>
            <param name="space">Causes the resulting string to be pretty-printed. If it is a number, successive levels in the stringification will each be indented by this many space characters (up to 10). If it is a string, successive levels will indented by this string (or the first ten characters of it).</param>
            <returns>The resulting JSON string</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.Stringify(System.Object,System.Delegate,System.String)">
            <summary>
            The JSON.stringify() method converts a value to JSON, optionally replacing values if a replacer function is specified, or optionally including only the specified properties if a replacer array is specified.
            </summary>
            <param name="value">The value to convert to a JSON string.</param>
            <param name="replacer">If a function, transforms values and properties encountered while stringifying; if an array, specifies the set of properties included in objects in the final string.</param>
            <param name="space">Causes the resulting string to be pretty-printed. If it is a number, successive levels in the stringification will each be indented by this many space characters (up to 10). If it is a string, successive levels will indented by this string (or the first ten characters of it).</param>
            <returns>The resulting JSON string</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.Stringify(System.Object,System.Func{System.String,System.Object,System.Object},System.String)">
            <summary>
            The JSON.stringify() method converts a value to JSON, optionally replacing values if a replacer function is specified, or optionally including only the specified properties if a replacer array is specified.
            </summary>
            <param name="value">The value to convert to a JSON string.</param>
            <param name="replacer">If a function, transforms values and properties encountered while stringifying; if an array, specifies the set of properties included in objects in the final string.</param>
            <param name="space">Causes the resulting string to be pretty-printed. If it is a number, successive levels in the stringification will each be indented by this many space characters (up to 10). If it is a string, successive levels will indented by this string (or the first ten characters of it).</param>
            <returns>The resulting JSON string</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.Stringify(System.Object,System.String[])">
            <summary>
            The JSON.stringify() method converts a value to JSON, optionally replacing values if a replacer function is specified, or optionally including only the specified properties if a replacer array is specified.
            </summary>
            <param name="value">The value to convert to a JSON string.</param>
            <param name="replacer">If a function, transforms values and properties encountered while stringifying; if an array, specifies the set of properties included in objects in the final string.</param>
            <returns>The resulting JSON string</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.Stringify(System.Object,System.String[],System.String)">
            <summary>
            The JSON.stringify() method converts a value to JSON, optionally replacing values if a replacer function is specified, or optionally including only the specified properties if a replacer array is specified.
            </summary>
            <param name="value">The value to convert to a JSON string.</param>
            <param name="replacer">If a function, transforms values and properties encountered while stringifying; if an array, specifies the set of properties included in objects in the final string.</param>
            <param name="space">Causes the resulting string to be pretty-printed. If it is a number, successive levels in the stringification will each be indented by this many space characters (up to 10). If it is a string, successive levels will indented by this string (or the first ten characters of it).</param>
            <returns>The resulting JSON string</returns>
        </member>
        <member name="M:Bridge.Html5.JSON.Stringify(System.Object,System.String[],System.Int32)">
            <summary>
            The JSON.stringify() method converts a value to JSON, optionally replacing values if a replacer function is specified, or optionally including only the specified properties if a replacer array is specified.
            </summary>
            <param name="value">The value to convert to a JSON string.</param>
            <param name="replacer">If a function, transforms values and properties encountered while stringifying; if an array, specifies the set of properties included in objects in the final string.</param>
            <param name="space">Causes the resulting string to be pretty-printed. If it is a number, successive levels in the stringification will each be indented by this many space characters (up to 10). If it is a string, successive levels will indented by this string (or the first ten characters of it).</param>
            <returns>The resulting JSON string</returns>
        </member>
        <member name="T:Bridge.Html5.AlignContent">
            <summary>
            The CSS align-content property aligns a flex container's lines within the flex container when there is extra space on the cross-axis. This property has no effect on single line flexible boxes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AlignContent.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.AlignContent.FlexStart">
            <summary>
            Lines are packed starting from the cross-start. Cross-start edge of the first line and cross-start edge of the flex container are flushed together. Each following line is flush with the preceding.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AlignContent.FlexEnd">
            <summary>
            Lines are packed starting from the cross-end. Cross-end of the last line and cross-end of the flex container are flushed together. Each preceding line is flushed with the following line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AlignContent.Center">
            <summary>
            Lines are packed toward the center of the flex container. The lines are flushed with each other and aligned in the center of the flex container. Space between the cross-start edge of the flex container and first line and between cross-end of the flex container and the last line is the same.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AlignContent.SpaceBetween">
            <summary>
            Lines are evenly distributed in the flex container. The spacing is done such as the space between two adjacent items is the same. Cross-start edge and cross-end edge of the flex container are flushed with respectively first and last line edges.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AlignContent.SpaceAround">
            <summary>
            Lines are evenly distributed so that the space between two adjacent lines is the same. The empty space before the first and after the last lines equals half of the space between two adjacent lines.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AlignContent.Stretch">
            <summary>
            Lines stretch to use the remaining space. The free-space is split equally between all the lines.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AlignContent.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.AlignItems">
            <summary>
            The CSS align-items property aligns flex items of the current flex line the same way as justify-content but in the perpendicular direction.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AlignItems.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.AlignItems.FlexStart">
            <summary>
            The cross-start margin edge of the flex item is flushed with the cross-start edge of the line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AlignItems.FlexEnd">
            <summary>
            The cross-end margin edge of the flex item is flushed with the cross-end edge of the line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AlignItems.Center">
            <summary>
            The flex item's margin box is centered within the line on the cross-axis. If the cross-size of the item is larger than the flex container, it will overflow equally in both directions.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AlignItems.Baseline">
            <summary>
            All flex items are aligned such that their baselines align. The item with the largest distance between its cross-start margin edge and its baseline is flushed with the cross-start edge of the line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AlignItems.Stretch">
            <summary>
            Flex items are stretched such as the cross-size of the item's margin box is the same as the line while respecting width and height constraints.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AlignItems.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.All">
            <summary>
            The CSS all shorthand property resets all properties, but unicode-bidi and direction to their initial or inherited value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.All.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.All.Initial">
            <summary>
            This keyword indicates to change all the properties applying to the element or the element to their initial value. unicode-bidi and direction values are not affected.
            </summary>
        </member>
        <member name="F:Bridge.Html5.All.Unset">
            <summary>
            This keyword indicates to change all the properties applying to the element or the element to their parent value if they are inheritable or to their initail value if not. unicode-bidi and direction values are not affected.
            </summary>
        </member>
        <member name="F:Bridge.Html5.All.Inherit">
            <summary>
            This keyword indicates to change all the properties applying to the element or the element to their parent value. unicode-bidi and direction values are not affected.
            </summary>
        </member>
        <member name="T:Bridge.Html5.AnimationDirection">
            <summary>
            The animation-direction CSS property indicates whether the animation should play in reverse on alternate cycles.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationDirection.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationDirection.Normal">
            <summary>
            The animation should play forward each cycle. In other words, each time the animation cycles, the animation will reset to the beginning state and start over again. This is the default animation direction setting.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationDirection.Reverse">
            <summary>
            The animation should reverse direction each cycle. When playing in reverse, the animation steps are performed backward. In addition, timing functions are also reversed; for example, an ease-in animation is replaced with an ease-out animation when played in reverse. The count to determine if it is an even or an odd iteration starts at one.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationDirection.Alternate">
            <summary>
            The animation plays backward each cycle. Each time the animation cycles, the animation resets to the end state and start over again.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationDirection.AlternateReverse">
            <summary>
            The animation plays backward on the first play-through, then forward on the next, then continues to alternate. The count to determinate if it is an even or an odd iteration starts at one.
            </summary>
        </member>
        <member name="T:Bridge.Html5.AnimationFillMode">
            <summary>
            The animation-fill-mode CSS property specifies how a CSS animation should apply styles to its target before and after it is executing.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationFillMode.None">
            <summary>
            The animation will not apply any styles to the target before or after it is executing.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationFillMode.Forwards">
            <summary>
            The target will retain the computed values set by the last keyframe encountered during execution. The last keyframe encountered depends on the value of animation-direction and animation-iteration-count
            </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationFillMode.Backwards">
            <summary>
            The animation will apply the values defined in the first relevant keyframe as soon as it is applied to the target, and retain this during the animation-delay period. The first relevant keyframe depends of the value of animation-direction
            </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationFillMode.Both">
            <summary>
            The animation will follow the rules for both forwards and backwards, thus extending the animation properties in both directions.
            </summary>
        </member>
        <member name="T:Bridge.Html5.AnimationPlayState">
            <summary>
            The animation-play-state CSS property determines whether an animation is running or paused. You can query this property's value to determine whether or not the animation is currently running; in addition, you can set its value to pause and resume playback of an animation.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationPlayState.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationPlayState.Running">
            <summary>
            The animation is currently playing.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationPlayState.Paused">
            <summary>
            The animation is currently paused.
            </summary>
        </member>
        <member name="T:Bridge.Html5.BackfaceVisibility">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.BackfaceVisibility.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.BackfaceVisibility.Visible">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.BackfaceVisibility.Hidden">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.BackgroundAttachment">
            <summary>
            If a background-image is specified, the background-attachment CSS property determines whether that image's position is fixed within the viewport, or scrolls along with its containing block.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundAttachment.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundAttachment.Scroll">
            <summary>
            This keyword means that the background is fixed with regard to the element itself and does not scroll with its contents. (It is effectively attached to the element's border.)
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundAttachment.Fixed">
            <summary>
            This keyword means that the background is fixed with regard to the viewport. Even if an element has a scrolling mechanism, a ‘fixed’ background doesn't move with the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundAttachment.Local">
            <summary>
            This keyword means that the background is fixed with regard to the element's contents: if the element has a scrolling mechanism, the background scrolls with the element's contents, and the background painting area and background positioning area are relative to the scrollable area of the element rather than to the border framing them.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundAttachment.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.BackgroundBlendMode">
            <summary>
            The background-blend-mode CSS property describes how a background should blend with the element's background that is below it and the element's background color. Background elements should be blended while content appearance should be kept unchanged.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundBlendMode.Screen">
            <summary>
            Multiplies the complements of the backdrop and source color values, then complements the result.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundBlendMode.Overlay">
            <summary>
            Multiplies or screens the colors, depending on the backdrop color value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundBlendMode.Darken">
            <summary>
            Selects the darker of the backdrop and source colors.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundBlendMode.Lighten">
            <summary>
            Selects the lighter of the backdrop and source colors.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundBlendMode.ColorDodge">
            <summary>
            Brightens the backdrop color to reflect the source color
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundBlendMode.ColorBurn">
            <summary>
            Darkens the backdrop color to reflect the source color.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundBlendMode.HardLight">
            <summary>
            Multiplies or screens the colors, depending on the source color value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundBlendMode.SoftLight">
            <summary>
            Darkens or lightens the colors, depending on the source color value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundBlendMode.Difference">
            <summary>
            Subtracts the darker of the two constituent colors from the lighter color.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundBlendMode.Exclusion">
            <summary>
            Produces an effect similar to that of the Difference mode but lower in contrast.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundBlendMode.Hue">
            <summary>
            Creates a color with the hue of the source color and the saturation and luminosity of the backdrop color.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundBlendMode.Saturation">
            <summary>
            Creates a color with the saturation of the source color and the hue and luminosity of the backdrop color.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundBlendMode.Color">
            <summary>
            Creates a color with the hue and saturation of the source color and the luminosity of the backdrop color.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundBlendMode.Luminosity">
            <summary>
            Creates a color with the luminosity of the source color and the hue and saturation of the backdrop color.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundBlendMode.Normal">
            <summary>
            This is the default attribute which specifies no blending.
            </summary>
        </member>
        <member name="T:Bridge.Html5.BackgroundClip">
            <summary>
            The background-clip CSS property specifies whether an element's background, either the color or image, extends underneath its border.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundClip.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundClip.BorderBox">
            <summary>
            The background extends to the outside edge of the border (but underneath the border in z-ordering).
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundClip.PaddingBox">
            <summary>
            No background is drawn below the border (background extends to the outside edge of the padding).
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundClip.ContentBox">
            <summary>
            The background is painted within (clipped to) the content box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundClip.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.BackgroundRepeat">
            <summary>
            The background-repeat CSS property defines how background images are repeated.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundRepeat.RepeatX">
            <summary>
            the equivalent of repeat no-repeat
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundRepeat.RepeatY">
            <summary>
            the equivalent of no-repeat repeat
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundRepeat.Repeat">
            <summary>
            The image is repeated in the given direction as much as needed to cover the whole background image painting area. The last image may be clipped if the whole thing won't fit in the remaining area.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundRepeat.Space">
            <summary>
            The image is repeated in the given direction as much as needed to cover most of the background image painting area, without clipping an image. The remaining non-covered space is spaced out evenly between the images. The first and last images touches the edge of the element. The value of the background-position CSS property is ignored for the concerned direction, except if one single image is greater than the background image painting area, which is the only case where an image can be clipped when the space value is used.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundRepeat.round">
            <summary>
            The image is repeated in the given direction as much as needed to cover most of the background image painting area, without clipping an image. If it doesn't cover exactly the area, the tiles are resized in that direction in order to match it.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BackgroundRepeat.NoRepeat">
            <summary>
            The image is not repeated (and hence the background image painting area will not necessarily been entirely covered). The position of the non-repeated background image is defined by the background-position CSS property.
            </summary>
        </member>
        <member name="T:Bridge.Html5.BorderCollapse">
            <summary>
            The border-collapse CSS property selects a table's border model. This has a big influence on the look and style of the table cells.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderCollapse.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.BorderCollapse.Separate">
            <summary>
            Is a keyword requesting the use of the separated-border table rendering model. It is the default value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderCollapse.Collapse">
            <summary>
            Is a keyword requesting the use of the collapsed-border table rendering model.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderCollapse.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.BorderImageRepeat">
            <summary>
            The border-image-repeat CSS property defines how the middle part of a border image is handled so that it can match the size of the border. It has a one-value syntax which describes the behavior of all the sides, and a two-value syntax that sets a different value for the horizontal and vertical behavior.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderImageRepeat.Stretch">
            <summary>
            Keyword indicating that the image must be stretched to fill the gap between the two borders.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderImageRepeat.Repeat">
            <summary>
            Keyword indicating that the image must be repeated until it fills the gap between the two borders.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderImageRepeat.Round">
            <summary>
            Keyword indicating that the image must be repeated until it fills the gap between the two borders. If the image doesn't fit after being repeated an integral number of times, the image is rescaled to fit.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderImageRepeat.Inherit">
            <summary>
            Keyword indicating that all four values are inherited from their parents' calculated element value.
            </summary>
        </member>
        <member name="T:Bridge.Html5.BorderStyle">
            <summary>
            The border style CSS property sets the line style of the border of a box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderStyle.None">
            <summary>
            Like for the hidden keyword, displays no border. In that case, except if a background image is set, the calculated values of border-bottom-width will be 0, even if specified otherwise through the property. In case of table cell and border collapsing, the none value has the lowest priority: it means that if any other conflicting border is set, it will be displayed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderStyle.Hidden">
            <summary>
            Like for the none keyword, displays no border. In that case, except if a background image is set, the calculated values of border-bottom-width will be 0, even if specified otherwise through the property. In case of table cell and border collapsing, the hidden value has the highest priority: it means that if any other conflicting border is set, it won't be displayed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderStyle.Dotted">
            <summary>
            Displays a series of rounded dots. The spacing of the dots are not defined by the specification and are implementation-specific. The radius of the dots is half the calculated border-bottom-width.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderStyle.Dashed">
            <summary>
            Displays a series of short square-ended dashes or line segments. The exact size and length of the segments are not defined by the specification and are implementation-specific.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderStyle.Solid">
            <summary>
            Displays a single, straight, solid line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderStyle.Double">
            <summary>
            Displays two straight lines that add up to the pixel amount defined as border-width or border-bottom-width.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderStyle.Groove">
            <summary>
            Displays a border leading to a carved effect. It is the opposite of ridge.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderStyle.Ridge">
            <summary>
            Displays a border with a 3D effect, like if it is coming out of the page. It is the opposite of groove.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderStyle.Inset">
            <summary>
            Displays a border that makes the box appear embedded. It is the opposite of outset. When applied to a table cell with border-collapse set to collapsed, this value behaves like groove.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderStyle.Outset">
            <summary>
            Displays a border that makes the box appear in 3D, embossed. It is the opposite of inset. When applied to a table cell with border-collapse set to collapsed, this value behaves like ridge.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderStyle.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.BorderWidth">
            <summary>
            The border style CSS property sets the width of the border of a box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderWidth.Thin">
            <summary>
            A thin border
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderWidth.Medium">
            <summary>
            A medium border
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderWidth.Thick">
            <summary>
            A thick border
            </summary>
        </member>
        <member name="F:Bridge.Html5.BorderWidth.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.BoxDecorationBreak">
            <summary>
            Allows to specify what happens to an element when it is broken due to a page break or column break, or for inline elements, a line break.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BoxDecorationBreak.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.BoxDecorationBreak.Slice">
            <summary>
            This keyword specifies that the box will be "sliced" across it's many fragments (if any). In other words, the box fragments won't maintain the padding, border, box-shadow, border-radius, and border-image properties across each fragment. Also, any background or background-image is drawn once and each fragment shows a small piece of the background.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BoxDecorationBreak.Clone">
            <summary>
            The box-decoration-break (with a value of clone) allows you to maintain the padding, border, box-shadow, border-radius, and border-image properties within each fragment. It also allows any background to be drawn independently in each fragment of the element. A no-repeat background-image will be rendered once in each fragment of the element.
            </summary>
        </member>
        <member name="T:Bridge.Html5.BoxSizing">
            <summary>
            The box-sizing CSS property is used to alter the default CSS box model used to calculate widths and heights of elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BoxSizing.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.BoxSizing.BorderBox">
            <summary>
            The width and height properties include the padding and border, but not the margin. This is the box model used by Internet Explorer when the document is in Quirks mode.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BoxSizing.PaddingBox">
            <summary>
            The width and height properties include the padding size, and do not include the border or margin.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BoxSizing.ContentBox">
            <summary>
            This is the default style as specified by the CSS standard. The width and height properties are measured including only the content, but not the border, margin, or padding.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BoxSizing.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.CaptionSide">
            <summary>
            The caption-side CSS property positions the content of a table's &lt;caption&gt; on the specified side.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CaptionSide.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.CaptionSide.Top">
            <summary>
            The caption box will be above the table.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CaptionSide.Bottom">
            <summary>
            The caption box will be below the table.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CaptionSide.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.Clear">
            <summary>
            The caption-side CSS property positions the content of a table's &lt;caption&gt; on the specified side.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Clear.None">
            <summary>
            The element is not moved down to clear past floating elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Clear.Left">
            <summary>
            The element is moved down to clear past left floats.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Clear.Right">
            <summary>
            The element is moved down to clear past right floats.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Clear.Both">
            <summary>
            The element is moved down to clear past both left and right floats.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Clear.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.ColumnFill">
            <summary>
            The column-fill CSS property controls how contents are partitioned into columns. Contents are either balanced, which means that contents in all columns will have the same height or, when using auto, just take up the room the content needs.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ColumnFill.Auto">
            <summary>
            Is a keyword indicating that columns are filled sequentially.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ColumnFill.Balance">
            <summary>
            Is a keyword indicating that content is equally divided between columns.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ColumnFill.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.ColumnSpan">
            <summary>
            The column-span CSS property makes it possible for an element to span across all columns when its value is set to all. An element that spans more than one column is called a spanning element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ColumnSpan.None">
            <summary>
            The element does not span multiple columns.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ColumnSpan.All">
            <summary>
            The element spans across all columns. Content in the normal flow that appears before the element is automatically balanced across all columns before the element appears. The element establishes a new block formatting context.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ColumnSpan.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.CSSRule">
            <summary>
            An object implementing the CSSRule DOM interface represents a single CSS at-rule. References to a CSSRule-implementing object may be obtained by looking at a CSS style sheet's cssRules list.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSRule.CssText">
            <summary>
            Represents the textual representation of the rule, e.g. "h1,h2 { font-size: 16pt }"
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSRule.ParentRule">
            <summary>
            Returns the containing rule, otherwise null. E.g. if this rule is a style rule inside an @media block, the parent rule would be that CSSMediaRule.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSRule.ParentStyleSheet">
            <summary>
            Returns the CSSStyleSheet object for the style sheet that contains this rule
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSRule.Type">
            <summary>
            One of the Type constants indicating the type of CSS rule.
            </summary>
        </member>
        <member name="T:Bridge.Html5.CSSRuleType">
            <summary>
            CSS rule types
            </summary>
        </member>
        <member name="T:Bridge.Html5.CSSStyleDeclaration">
            <summary>
            A CSSStyleDeclaration is an interface to the declaration block returned by the style property of a cssRule in a stylesheet, when the rule is a CSSStyleRule.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.AlignContent">
            <summary>
            The CSS align-content property aligns a flex container's lines within the flex container when there is extra space on the cross-axis. This property has no effect on single line flexible boxes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.AlignItems">
            <summary>
            The CSS align-items property aligns flex items of the current flex line the same way as justify-content but in the perpendicular direction.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.AlignSelf">
            <summary>
            The align-self CSS property aligns flex items of the current flex line overriding the align-items value. If any of the flex item's cross-axis margin is set to auto, then align-self is ignored.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.All">
            <summary>
            The CSS all shorthand property resets all properties, but unicode-bidi and direction to their initial or inherited value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Animation">
            <summary>
            The animation CSS property is a shorthand property for animation-name, animation-duration, animation-timing-function, animation-delay, animation-iteration-count, animation-direction and animation-fill-mode.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.AnimationDelay">
            <summary>
            The animation-delay CSS property specifies when the animation should start. This lets the animation sequence begin some time after it's applied to an element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.AnimationDirection">
            <summary>
            The animation-direction CSS property indicates whether the animation should play in reverse on alternate cycles.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.AnimationDuration">
            <summary>
            The animation-duration CSS property specifies the length of time that an animation should take to complete one cycle.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.AnimationFillMode">
            <summary>
            The animation-fill-mode CSS property specifies how a CSS animation should apply styles to its target before and after it is executing.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.AnimationIterationCount">
            <summary>
            The animation-iteration-count CSS property defines the number of times an animation cycle should be played before stopping.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.AnimationName">
            <summary>
            The animation-name CSS property specifies a list of animations that should be applied to the selected element. Each name indicates a @keyframes at-rule that defines the property values for the animation sequence.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.AnimationPlayState">
            <summary>
            The animation-play-state CSS property determines whether an animation is running or paused. You can query this property's value to determine whether or not the animation is currently running; in addition, you can set its value to pause and resume playback of an animation.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.AnimationTimingFunction">
            <summary>
            The CSS animation-timing-function property specifies how a CSS animation should progress over the duration of each cycle.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BackfaceVisibility">
            <summary>
            The CSS backface-visibility property determines whether or not the back face of the element is visible when facing the user. The back face of an element always is a transparent background, letting, when visible, a mirror image of the front face be displayed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Background">
            <summary>
            The background CSS property is a shorthand for setting the individual background values in a single place in the style sheet. background can be used to set the values for one or more of: background-clip, background-color, background-image, background-origin, background-position, background-repeat, background-size, and background-attachment.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BackgroundAttachment">
            <summary>
            If a background-image is specified, the background-attachment CSS property determines whether that image's position is fixed within the viewport, or scrolls along with its containing block.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BackgroundBlendMode">
            <summary>
            The background-blend-mode CSS property describes how a background should blend with the element's background that is below it and the element's background color. Background elements should be blended while content appearance should be kept unchanged.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BackgroundClip">
            <summary>
            The background-clip CSS property specifies whether an element's background, either the color or image, extends underneath its border.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BackgroundColor">
            <summary>
            The background-color CSS property sets the background color of an element, either through a color value or the keyword transparent.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BackgroundImage">
            <summary>
            The CSS background-image property sets one or several background images for an element. The images are drawn on successive stacking context layers, with the first specified being drawn as if it is the closest to the user. The borders of the element are then drawn on top of them, and the background-color is drawn beneath them.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BackgroundOrigin">
            <summary>
            The background-origin CSS property determines the background positioning area, that is the position of the origin of an image specified using the background-image CSS property.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BackgroundPosition">
            <summary>
            The background-position CSS property sets the initial position, relative to the background position layer defined by background-origin for each defined background image.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BackgroundRepeat">
            <summary>
            The background-repeat CSS property defines how background images are repeated. A background image can be repeated along the horizontal axis, the vertical axis, both, or not repeated at all. When the repetition of the image tiles doesn't let them exactly cover the background, the way adjustments are done can be controlled by the author: by default, the last image is clipped, but the different tiles can instead be re-sized, or space can be inserted between the tiles.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BackgroundSize">
            <summary>
            The background-size CSS property specifies the size of the background images. The size of the image can be fully constrained or only partially in order to preserve its intrinsic ratio.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Border">
            <summary>
            The border CSS property is a shorthand property for setting the individual border property values in a single place in the style sheet. border can be used to set the values for one or more of: border-width, border-style, border-color.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderBottom">
            <summary>
            The border-bottom CSS property is a shorthand that sets the values of border-bottom-color, border-bottom-style, and border-bottom-width. These properties describe the bottom border of elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderBottomColor">
            <summary>
            The border-bottom-color CSS property sets the color of the bottom border of an element. Note that in many cases the shorthand CSS properties border-color or border-bottom are more convenient and preferable.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderBottomLeftRadius">
            <summary>
            The border-bottom-left-radius CSS property sets the rounding of the bottom-left corner of the element. The rounding can be a circle or an ellipse, or if one of the value is 0 no rounding is done and the corner is square.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderBottomRightRadius">
            <summary>
            The border-bottom-right-radius CSS property sets the rounding of the bottom-right corner of the element. The rounding can be a circle or an ellipse, or if one of the value is 0 no rounding is done and the corner is square.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderBottomStyle">
            <summary>
            The border-bottom-style CSS property sets the line style of the bottom border of a box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderBottomWidth">
            <summary>
            The border-bottom-width CSS property sets the width of the bottom border of a box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderCollapse">
            <summary>
            The border-collapse CSS property selects a table's border model. This has a big influence on the look and style of the table cells.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderColor">
            <summary>
            The border-color CSS property is a shorthand for setting the color of the four sides of an element's border: border-top-color, border-right-color, border-bottom-color, border-left-color
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderImage">
            <summary>
            The border-image CSS property allows drawing an image on the borders of elements. This makes drawing complex looking widgets much simpler than it has been and removes the need for nine boxes in some cases.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderImageOutset">
            <summary>
            The border-image-outset property describes, by which amount the border image area extends beyond the border box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderImageRepeat">
            <summary>
            The border-image-repeat CSS property defines how the middle part of a border image is handled so that it can match the size of the border. It has a one-value syntax which describes the behavior of all the sides, and a two-value syntax that sets a different value for the horizontal and vertical behavior.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderImageSlice">
            <summary>
            The border-image-slice CSS property divides the image specified by border-image-source in nine regions: the four corners, the four edges and the middle. It does this by specifying 4 inwards offsets.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderImageSource">
            <summary>
            The border-image-source CSS property defines the &lt;image&gt; to use instead of the style of the border. If this property is set to none, the style defined by border-style is used instead.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderImageWidth">
            <summary>
            The border-image-width CSS property defines the offset to use for dividing the border image in nine parts, the top-left corner, central top edge, top-right-corner, central right edge, bottom-right corner, central bottom edge, bottom-left corner, and central right edge. They represent inward distance from the top, right, bottom, and left edges.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderLeft">
            <summary>
            The border-left CSS property is a shorthand that sets the values of border-left-color, border-left-style, and border-left-width. These properties describe the left border of elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderLeftColor">
            <summary>
            The border-left-color CSS property sets the color of the bottom border of an element. Note that in many cases the shorthand CSS properties border-color or border-left are more convenient and preferable.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderLeftStyle">
            <summary>
            The border-left-style CSS property sets the line style of the left border of a box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderLeftWidth">
            <summary>
            The border-left-width CSS property sets the width of the left border of a box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderRadius">
            <summary>
            The border-radius CSS property allows Web authors to define how rounded border corners are. The curve of each corner is defined using one or two radii, defining its shape: circle or ellipse.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderRight">
            <summary>
            The border-right CSS property is a shorthand that sets the values of border-right-color, border-right-style, and border-right-width. These properties describe the right border of elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderRightColor">
            <summary>
            The border-right-color CSS property sets the color of the right border of an element. Note that in many cases the shorthand CSS properties  border-color or border-right are more convenient and preferable.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderRightStyle">
            <summary>
            The border-right-style CSS property sets the line style of the right border of a box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderRightWidth">
            <summary>
            The border-right-width CSS property sets the width of the right border of a box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderSpacing">
            <summary>
            The border-spacing CSS property specifies the distance between the borders of adjacent cells (only for the separated borders model). This is equivalent to the cellspacing attribute in presentational HTML, but an optional second value can be used to set different horizontal and vertical spacing.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderStyle">
            <summary>
            The border-style CSS property is a shorthand property for setting the line style for all four sides of the elements border.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderTop">
            <summary>
            The border-top CSS property is a shorthand that sets the values of border-top-color, border-top-style, and border-top-width. These properties describe the top border of elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderTopColor">
            <summary>
            The border-top-color CSS property sets the color of the top border of an element. Note that in many cases the shorthand CSS properties border-color or border-top are more convenient and preferable.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderTopLeftRadius">
            <summary>
            The border-top-left-radius CSS property sets the rounding of the top-left corner of the element. The rounding can be a circle or an ellipse, or if one of the value is 0 no rounding is done and the corner is square.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderTopRightRadius">
            <summary>
            The border-top-right-radius CSS property sets the rounding of the top-right corner of the element. The rounding can be a circle or an ellipse, or if one of the value is 0 no rounding is done and the corner is square.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderTopStyle">
            <summary>
            The border-top-style CSS property sets the line style of the top border of a box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderTopWidth">
            <summary>
            The border-top-width CSS property sets the width of the top border of a box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BorderWidth">
            <summary>
            The border-width CSS property sets the width of the border of a box. Using the shorthand property border is often more convenient.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Bottom">
            <summary>
            The bottom CSS property participates in specifying the position of positioned elements.
            For absolutely positioned elements, that is those with position: absolute or position: fixed, it specifies the distance between the bottom margin edge of the element and the bottom edge of its containing block.
            For relatively positioned elements, that is those with position: relative, it specifies the distance the element is moved above its normal position.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BoxDecorationBreak">
            <summary>
            Allows to specify what happens to an element when it is broken due to a page break or column break, or for inline elements, a line break.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BoxShadow">
            <summary>
            The box-shadow CSS property describes one or more shadow effects as a comma-separated list. It allows casting a drop shadow from the frame of almost any element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.BoxSizing">
            <summary>
            The box-sizing CSS property is used to alter the default CSS box model used to calculate widths and heights of elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.CaptionSide">
            <summary>
            The caption-side CSS property positions the content of a table's &lt;caption&gt; on the specified side.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Clear">
            <summary>
            The clear CSS property specifies whether an element can be next to floating elements that precede it or must be moved down (cleared) below them.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Clip">
            <summary>
            The clip CSS property defines what portion of an element is visible. The clip property applies only to elements with position:absolute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ClipPath">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Color">
            <summary>
            The CSS color property sets the foreground color of an element's text content, and its decorations. It doesn't affect any other characteristic of the element; it should really be called text-color and would have been named so, save for historical reasons and its appearance in CSS Level 1.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Columns">
            <summary>
            The columns CSS property is a shorthand property allowing to set both the column-width and the column-count properties at the same time.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ColumnCount">
            <summary>
            The column-count CSS property describes the number of columns of the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ColumnFill">
            <summary>
            The column-fill CSS property controls how contents are partitioned into columns. Contents are either balanced, which means that contents in all columns will have the same height or, when using auto, just take up the room the content needs.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ColumnGap">
            <summary>
            The column-gap CSS property sets the size of the gap between columns for elements which are specified to display as a multi-column element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ColumnRule">
            <summary>
            In multi-column layouts, the column-rule CSS property specifies a straight line, or "rule", to be drawn between each column. It is a convenient shorthand to avoid setting each of the individual column-rule-* properties separately : column-rule-width, column-rule-style and column-rule-color.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ColumnRuleColor">
            <summary>
            The column-rule-color CSS property lets you set the color of the rule drawn between columns in multi-column layouts.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ColumnRuleStyle">
            <summary>
            The column-rule-style CSS property lets you set the style of the rule drawn between columns in multi-column layouts.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ColumnRuleWidth">
            <summary>
            The column-rule-width CSS property lets you set the width of the rule drawn between columns in multi-column layouts.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ColumnSpan">
            <summary>
            The column-span CSS property makes it possible for an element to span across all columns when its value is set to all. An element that spans more than one column is called a spanning element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ColumnWidth">
            <summary>
            The column-width CSS property suggests an optimal column width. This is not a absolute value but a mere hint. Browser will adjust the width of the column around that suggested value, allowing to achieve scalable designs that fit different screen size. Especially in presence of the column-count CSS property which has precedence, to set an exact column width, all length values must be specified. In horizontal text these are width, column-width, column-gap, and column-rule-width.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Content">
            <summary>
            The content CSS property is used with the ::before and ::after pseudo-elements to generate content in an element. Objects inserted using the content property are anonymous replaced elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.CounterIncrement">
            <summary>
            The counter-increment CSS property is used to increase the value of CSS Counters by a given value. The counter's value can be reset using the counter-reset CSS property.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.CounterReset">
            <summary>
            The counter-reset CSS property is used to reset CSS Counters to a given value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.CssFloat">
            <summary>
            The float CSS property specifies that an element should be taken from the normal flow and placed along the left or right side of its container, where text and inline elements will wrap around it. A floating element is one where the computed value of float is not none.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.CssText">
            <summary>
            The cssText property sets or returns the contents of a style declaration as a string.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Cursor">
            <summary>
            The cursor CSS property specifies the mouse cursor displayed when the mouse pointer is over an element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Direction">
            <summary>
            Set the direction CSS property to match the direction of the text: rtl for Hebrew or Arabic text and ltr for other scripts. This is typically done as part of the document (e.g., using the dir attribute in HTML) rather than through direct use of CSS.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Display">
            <summary>
            The display CSS property specifies the type of rendering box used for an element. In HTML, default display property values are taken from behaviors described in the HTML specifications or from the browser/user default stylesheet. The default value in XML is inline.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.DominantBaseline">
            <summary>
            The dominant-baseline property is used to determine or re-determine a scaled-baseline-table.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.EmptyCells">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Fill">
            <summary>
            Sets or retrieves a value that indicates the color to paint the interior of the given graphical element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FillOpacity">
            <summary>
            Sets or retrieves a value that specifies the opacity of the painting operation that is used to paint the interior of the current object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FillRule">
            <summary>
            Sets or retrieves a value that indicates the algorithm that is to be used to determine what parts of the canvas are included inside the shape.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Filter">
            <summary>
            The CSS filter property provides for effects like blurring or color shifting on an element’s rendering before the element is displayed. Filters are commonly used to adjust the rendering of an image, a background, or a border.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Flex">
            <summary>
            The flex CSS property is a shorthand property specifying the ability of a flex item to alter its dimensions to fill available space. Flex items can be stretched to use available space proportional to their flex grow factor or their flex shrink factor to prevent overflow.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FlexBasis">
            <summary>
            The CSS flex-basis property specifies the flex basis which is the initial main size of a flex item.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FlexDirection">
            <summary>
            The CSS flex-direction property specifies how flex items are placed in t
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FlexFlow">
            <summary>
            The CSS flex-flow property is a shorthand property for flex-direction and flex-wrap individual properties.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FlexGrow">
            <summary>
            The CSS flex-grow property specifies the flex grow factor of a flex item.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FlexShrink">
            <summary>
            The CSS flex-shrink property specifies the flex shrink factor of a flex item.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FlexWrap">
            <summary>
            The CSS flex-wrap property specifies whether the children are forced into a single line or if the items can be flowed on multiple lines.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FloodColor">
            <summary>
            The flood-color attribute indicates what color to use to flood the current filter primitive subregion defined through the &lt;feflood&gt; element. The keyword currentColor and ICC colors can be specified in the same manner as within a &lt;paint&gt; specification for the fill and stroke attributes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FloodOpacity">
            <summary>
            The flood-opacity attribute indicates the opacity value to use across the current filter primitive subregion defined through the &lt;feflood&gt; element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Font">
            <summary>
            The font CSS property is either a shorthand property for setting font-style, font-variant, font-weight, font-size, line-height and font-family, or a way to set the element's font to a system font, using specific keywords.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontFamily">
            <summary>
            The font-family CSS property allows for a prioritized list of font family names and/or generic family names to be specified for the selected element. Unlike most other CSS properties, values are separated by a comma to indicate that they are alternatives. The browser will select the first font on the list that is installed on the computer, or that can be downloaded using the information provided by a @font-face at-rule.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontFeatureSettings">
            <summary>
            The font-feature-settings CSS property allows control over advanced typographic features in OpenType fonts.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontKerning">
            <summary>
            The font-kerning property allows contextual adjustment of inter-glyph spacing, i.e. the spaces between the characters in text. This property controls <bold>metric kerning</bold> - that utilizes adjustment data contained in the font.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontLanguageOverride">
            <summary>
            The ‘font-language-override’ property allows authors to explicitly specify the language system of the font, overriding the language system implied by the content language.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontSize">
            <summary>
            The font-size CSS property specifies the size of the font – specifically the desired height of glyphs from the font. Setting the font size may, in turn, change the size of other items, since it is used to compute the value of em and ex length units.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontSizeAdjust">
            <summary>
            The font-size-adjust CSS property specifies that font size should be chosen based on the height of lowercase letters rather than the height of capital letters.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontStretch">
            <summary>
            The font-stretch CSS property selects a normal, condensed, or expanded face from a font.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontStyle">
            <summary>
            The font-style CSS property allows italic or oblique faces to be selected within a font-family.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontSynthesis">
            <summary>
            This value specifies whether the user agent is allowed to synthesize bold or oblique font faces when a font family lacks bold or italic faces.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontVariant">
            <summary>
            The font-variant CSS property selects a normal, or small-caps face from a font family. Setting font-variant is also possible by using the font shorthand.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontVariantAlternates">
            <summary>
            Fonts can provide alternate glyphs in addition to default glyph for a character. This property provides control over the selection of these alternate glyphs.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontVariantCaps">
            <summary>
            The font-variant-caps property allows the selection of alternate glyphs used for small or petite capitals or for titling. These glyphs are specifically designed to blend well with the surrounding normal glyphs, to maintain the weight and readability which suffers when text is simply resized to fit this purpose.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontVariantEastAsian">
            <summary>
            The font-variant-east-asian property allows control of glyph substitution and sizing in East Asian text.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontVariantLigatures">
            <summary>
            font-variant-ligatures is a CSS property to control ligatures in text.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontVariantNumeric">
            <summary>
            The font-variant-numeric property specifies control over numerical forms. Within normal paragraph text, proportional numbers are used while tabular numbers are used so that columns of numbers line up properly
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontVariantPosition">
            <summary>
            The font-variant-position property is used to enable typographic subscript and superscript glyphs. These are alternate glyphs designed within the same em-box as default glyphs and are intended to be laid out on the same baseline as the default glyphs, with no resizing or repositioning of the baseline. They are explicitly designed to match the surrounding text and to be more readable without affecting the line height.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.FontWeight">
            <summary>
            The font-weight CSS property specifies the weight or boldness of the font. However, some fonts are not available in all weights; some are available only on normal and bold.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Grid">
            <summary>
            The grid property in CSS is the foundation of Grid Layout.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.GridArea">
            <summary>
            Lays out one or more grid items bound by 4 grid lines. Shorthand for setting grid-column-start, grid-column-end, grid-row-start, and grid-row-end in a single declaration.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.GridAutoColumns">
            <summary>
            hanges default size of columns. Creates implicit grid tracks when a grid item is placed into a row or column that is not explicitly sized (by grid-template-rows or grid-template-columns). This property (with grid-auto-rows) specifies the default size of such implicitly-created tracks.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.GridAutoFlow">
            <summary>
            Automatically places grid elements into the grid layout if an explicit location is not designated. Designates the direction of the the flow and whether rows or columns must be added to accommodate the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.GridAutoPosition">
            <summary>
            Specifies the automatic default location if a grid container does not specify automatic-placement strategy via grid-auto-flow.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.GridAutoRows">
            <summary>
            Changes default size of grid rows. Creates implicit grid tracks when a grid item is placed into a row that is not explicitly sized (by grid-template-rows ) or when the auto-placement algorithm has generated additional rows. This property (with grid-auto-columns) specifies the size of such implicitly-created tracks.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.GridColumn">
            <summary>
            The grid-columns property specifies the width of each column in the grid.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.GridColumnStart">
            <summary>
            Determines a grid item's placement by specifying the starting grid lines of a grid item's grid area . A grid item's placement in a grid area consists of a grid position and a grid span.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.GridColumnEnd">
            <summary>
            Controls a grid item's placement in a grid area as well as grid position and a grid span. The grid-column-end property (with grid-row-start, grid-row-end, and grid-column-start) determines a grid item's placement by specifying the grid lines of a grid item's grid area.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.GridRow">
            <summary>
            Gets or sets a value that indicates which row an element within a Grid should appear in. Shorthand for setting grid-row-start and grid-row-end in a single declaration.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.GridRowStart">
            <summary>
            A grid item's placement in a grid area consists of a grid position and a grid span. The grid-row-start property (with grid-row-end, grid-column-start, and grid-column-end) determines a grid item's placement by specifying the grid lines of a grid item's grid area.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.GridRowEnd">
            <summary>
            Determines a grid item’s placement by specifying the block-end. A grid item's placement in a grid area consists of a grid position and a grid span. The grid-row-end property (with grid-row-start, grid-column-start, and grid-column-end) determines a grid item's placement by specifying the grid lines of a grid item's grid area.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.GridTemplate">
            <summary>
            Shorthand for setting grid-template-columns, grid-template-rows, and grid-template-areas in a single declaration.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.GridTemplateAreas">
            <summary>
            Specifies named grid areas which are not associated with any particular grid item, but can be referenced from the grid-placement properties. The syntax of the grid-template-areas property also provides a visualization of the structure of the grid, making the overall layout of the grid container easier to understand.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.GridTemplateRows">
            <summary>
            Specifies (with grid-template-columns) the line names and track sizing functions of the grid. Each sizing function can be specified as a length, a percentage of the grid container’s size, a measurement of the contents occupying the column or row, or a fraction of the free space in the grid.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.GridTemplateColumns">
            <summary>
            Specifies (with grid-template-rows) the line names and track sizing functions of the grid. Each sizing function can be specified as a length, a percentage of the grid container’s size, a measurement of the contents occupying the column or row, or a fraction of the free space in the grid.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Height">
            <summary>
            The height CSS property specifies the height of the content area of an element. The content area is inside the padding, border, and margin of the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Hyphens">
            <summary>
            The hyphens CSS property tells the browser how to go about splitting words to improve the layout of text when line-wrapping.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Icon">
            <summary>
            The icon property provides the author the ability to style an element with an iconic equivalent.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ImageRendering">
            <summary>
            The image-rendering CSS property provides a hint to the user agent about how to handle its image rendering.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ImageResolution">
            <summary>
            The image-resolution property specifies the intrinsic resolution of all raster images used in or on the element. It affects both content images (e.g. replaced elements and generated content) and decorative images (such as 'background-image'). The intrinsic resolution of an image is used to determine the image's intrinsic dimensions.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ImageOrientation">
            <summary>
            The image-orientation CSS property describes how to correct the default orientation of an image.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ImeMode">
            <summary>
            The ime-mode CSS property controls the state of the input method editor for text fields.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.JustifyContent">
            <summary>
            The CSS justify-content property defines how a browser distributes available space between and around elements when aligning flex items in the main-axis of the current line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Left">
            <summary>
            The left CSS property specifies part of the position of positioned elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Length">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.LetterSpacing">
            <summary>
            The letter-spacing CSS property specifies spacing behavior between text characters.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.LightingColor">
            <summary>
            The ‘lighting-color’ property defines the color of the light source for filter primitives ‘feDiffuseLighting’ and ‘feSpecularLighting’.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.LineHeight">
            <summary>
            On block level elements, the line-height CSS property specifies the minimal height of line boxes within the element.
            On non-replaced inline elements, line-height specifies the height that is used in the calculation of the line box height.
            On replaced inline elements, like buttons or other input element, line-height has no effect.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ListStyle">
            <summary>
            The list-style CSS property is a shorthand property for setting list-style-type, list-style-image and list-style-position.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ListStyleImage">
            <summary>
            The list-style-image CSS property sets the image that will be used as the list item marker. It is often more convenient to use the shorthand list-style.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ListStylePosition">
            <summary>
            The list-style-position CSS property specifies the position of the marker box in the principal block box. It is often more convenient to use the shortcut list-style.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ListStyleType">
            <summary>
            The list-style-type CSS property specifies appearance of a list item element. As it is the only one who defaults to display:list-item, this is usually a &lt;li&lt; element, but can be any element with this display value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Margin">
            <summary>
            The margin CSS property sets the margin for all four sides. It is a shorthand to avoid setting each side separately with the other margin properties: margin-top, margin-right, margin-bottom and margin-left.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.MarginBottom">
            <summary>
            The margin-bottom CSS property of an element sets the margin space required on the bottom of an element. A negative value is also allowed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.MarginLeft">
            <summary>
            The margin-left CSS property of an element sets the margin space required on the left side of a box associated with an element. A negative value is also allowed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.MarginRight">
            <summary>
            The margin-right CSS property of an element sets the margin space required on the right side of an element. A negative value is also allowed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.MarginTop">
            <summary>
            The margin-top CSS property of an element sets the margin space required on the top of an element. A negative value is also allowed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Marks">
            <summary>
            The marks CSS property adds crop and/or cross marks to the presentation of the document. Crop marks indicate where the page should be cut. Cross marks are used to align sheets.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Mask">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.MaskType">
            <summary>
            The CSS mask-type properties defines if a SVG &lt;mask&gt; element is a luminance or an alpha mask.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.MaxHeight">
            <summary>
            The max-height CSS property is used to set the maximum height of a given element. It prevents the used value of the height property from becoming larger than the value specified for max-height.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.MaxWidth">
            <summary>
            The max-width CSS property is used to set the maximum width of a given element. It prevents the used value of the width property from becoming larger than the value specified for max-width.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.MinHeight">
            <summary>
            The min-height CSS property is used to set the minimum height of a given element. It prevents the used value of the height property from becoming smaller than the value specified for min-height.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.MinWidth">
            <summary>
            The min-width CSS property is used to set the minimum width of a given element. It prevents the used value of the width property from becoming smaller than the value specified for min-width.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.MixBlendMode">
            <summary>
            The mix-blend-mode CSS property describes how an element content should blend with the content of the element that is below it and the element's background.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.NavDown">
            <summary>
            The nav-down property specifies where to navigate when using the arrow-down navigation key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.NavIndex">
            <summary>
            The nav-index property specifies the sequential navigation order ("tabbing order") for an element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.NavLeft">
            <summary>
            The nav-left property specifies where to navigate when using the arrow-left navigation key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.NavRight">
            <summary>
            The nav-right property specifies where to navigate when using the arrow-right navigation key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.NavUp">
            <summary>
            The nav-up property specifies where to navigate when using the arrow-up navigation key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ObjectFit">
            <summary>
            The ‘object-fit’ property specifies how the contents of a replaced element should be fitted to the box established by its used height and width.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ObjectPosition">
            <summary>
            The ‘object-position’ property determines the alignment of the replaced element inside its box
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Opacity">
            <summary>
            The opacity CSS property specifies the transparency of an element, that is, the degree to which the background behind the element is overlaid.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Order">
            <summary>
            The CSS order property specifies the order used to lay out flex items in their flex container. Elements are laid out by ascending order of the order value. Elements with the same order value are laid out in the order they appear in the source code.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Orphans">
            <summary>
            The orphans CSS property refers to the minimum number of lines in a block container that must be left at the bottom of the page. This property is normally used to control how page breaks occur.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Outline">
            <summary>
            The CSS outline property is a shorthand property for setting one or more of the individual outline properties outline-style, outline-width and outline-color in a single rule. In most cases the use of this shortcut is preferable and more convenient.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.OutlineColor">
            <summary>
            The outline-color CSS property sets the color of the outline of an element. An outline is a line that is drawn around elements, outside the border edge, to make the element stand out.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.OutlineOffset">
            <summary>
            The outline-offset CSS property is used to set space between an outline and the edge or border of an element. An outline is a line that is drawn around elements, outside the border edge.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.OutlineStyle">
            <summary>
            The outline-style CSS property is used to set the style of the outline of an element. An outline is a line that is drawn around elements, outside the border edge, to make the element stand out.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.OutlineWidth">
            <summary>
            The outline-width CSS property is used to set the width of the outline of an element. An outline is a line that is drawn around elements, outside the border edge, to make the element stand out:
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Overflow">
            <summary>
            The overflow CSS property specifies whether to clip content, render scroll bars or display overflow content of a block-level element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.OverflowWrap">
            <summary>
            The word-wrap CSS property is used to specify whether or not the browser may break lines within words in order to prevent overflow (in other words, force wrapping) when an otherwise unbreakable string is too long to fit in its containing box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.OverflowX">
            <summary>
            The overflow-x CSS property specifies whether to clip content, render a scroll bar or display overflow content of a block-level element, when it overflows at the left and right edges.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.OverflowY">
            <summary>
            The overflow-y CSS property specifies whether to clip content, render a scroll bar, or display overflow content of a block-level element, when it overflows at the top and bottom edges.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.OverflowClipBox">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Padding">
            <summary>
            The padding CSS property sets the required padding space on all sides of an element. The padding area is the space between the content of the element and its border. Negative values are not allowed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.PaddingBottom">
            <summary>
            The padding-bottom CSS property of an element sets the height of the padding area at the bottom of an element. The padding area is the space between the content of the element and it's border. Contrary to margin-bottom values, negative values of padding-bottom are invalid.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.PaddingLeft">
            <summary>
            The padding-left CSS property of an element sets the padding space required on the left side of an element. The padding area is the space between the content of the element and it's border. A negative value is not allowed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.PaddingRight">
            <summary>
            The padding-right CSS property of an element sets the padding space required on the right side of an element. The padding area is the space between the content of the element and its border. Negative values are not allowed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.PaddingTop">
            <summary>
            The padding-top CSS property of an element sets the padding space required on the top of an element. The padding area is the space between the content of the element and its border. Contrary to margin-top values, negative values of padding-top are invalid.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.PageBreakAfter">
            <summary>
            The page-break-after CSS property adjusts page breaks after the current element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.PageBreakBefore">
            <summary>
            The page-break-before CSS property adjusts page breaks before the current element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.PageBreakInside">
            <summary>
            The page-break-inside CSS property adjusts page breaks inside the current element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Perspective">
            <summary>
            The perspective CSS property determines the distance between the z=0 plane and the user in order to give to the 3D-positioned element some perspective.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.PerspectiveOrigin">
            <summary>
            The perspective CSS property determines the distance between the z=0 plane and the user in order to give to the 3D-positioned element some perspective.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.PointerEvents">
            <summary>
            The CSS property pointer-events allows authors to control under what circumstances (if any) a particular graphic element can become the target of mouse events. When this property is unspecified, the same characteristics of the visiblePainted value apply to SVG content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Position">
            <summary>
            The position CSS property chooses alternative rules for positioning elements, designed to be useful for scripted animation effects.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Quotes">
            <summary>
            The quotes CSS property indicates how user agents should render quotation marks.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Resize">
            <summary>
            The resize CSS property lets you control the resizability of an element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Right">
            <summary>
            The right CSS property specifies part of the position of positioned elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TableLayout">
            <summary>
            The table-layout CSS property defines the algorithm to be used to layout the table cells, rows, and columns.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TabSize">
            <summary>
            The tab-size CSS property is used to customize the width of a tab (U+0009) character.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TextAlign">
            <summary>
            The text-align CSS property describes how inline content like text is aligned in its parent block element. text-align does not control the alignment of block elements itself, only their inline content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TextAlignLast">
            <summary>
            The text-align-last CSS property describes how the last line of a block or a line, right before a forced line break, is aligned.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TextCombineHorizontal">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TextDecoration">
            <summary>
            The text-decoration CSS property is used to set the text formatting to underline, overline, line-through or blink.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TextDecorationColor">
            <summary>
            The text-decoration-color CSS property sets the color used when drawing underlines, overlines, or strike-throughs specified by text-decoration-line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TextDecorationLine">
            <summary>
            The text-decoration-line CSS property sets what kind of line decorations are added to an element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TextDecorationStyle">
            <summary>
            The text-decoration-style CSS property defines the style of the lines specified by text-decoration-line. The style applies to all lines, there is no way to define different style for each of the line defined by text-decoration-line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TextIndent">
            <summary>
            The text-indent CSS property specifies how much horizontal space should be left before the beginning of the first line of the text content of an element. Horizontal spacing is with respect to the left (or right, for right-to-left layout) edge of the containing block element's box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TextOrientation">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TextOverflow">
            <summary>
            The text-overflow CSS property determines how overflowed content that is not displayed is signaled to the users. It can be clipped, or display an ellipsis ('…', U+2026 HORIZONTAL ELLIPSIS) or a Web author-defined string.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TextRendering">
            <summary>
            The text-rendering CSS property provides information to the rendering engine about what to optimize for when rendering text.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TextShadow">
            <summary>
            The text-shadow CSS property adds shadows to text. It accepts a comma-separated list of shadows to be applied to the text and text-decorations of the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TextTransform">
            <summary>
            The text-transform CSS property specifies how to capitalize an element's text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TextUnderlinePosition">
            <summary>
            The CSS text-underline-position property specifies the position of the underline which is set using the text-decoration property underline value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Top">
            <summary>
            The top CSS property specifies part of the position of positioned elements. It has no effect on non-positioned elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TouchAction">
            <summary>
            Determines whether touch input may trigger default behavior supplied by the user agent, such as panning or zooming.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Transform">
            <summary>
            The CSS transform property lets you modify the coordinate space of the CSS visual formatting model. Using it, elements can be translated, rotated, scaled, and skewed according to the values set.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TransformOrigin">
            <summary>
            The transform-origin CSS property lets you modify the origin for transformations of an element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TransformStyle">
            <summary>
            The transform-style CSS property determines if the children of the element are positioned in the 3D-space or are flattened in the plane of the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Transition">
            <summary>
            The CSS transition property is a shorthand property for transition-property, transition-duration, transition-timing-function, and transition-delay.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TransitionDelay">
            <summary>
            The transition-delay CSS property specifies the amount of time to wait between a change being requested to a property that is to be transitioned and the start of the transition effect.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TransitionDuration">
            <summary>
            The transition-duration CSS property specifies the number of seconds or milliseconds a transition animation should take to complete. By default, the value is 0s, meaning that no animation will occur.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TransitionProperty">
            <summary>
            The transition-property CSS property is used to specify the names of CSS properties to which a transition effect should be applied.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.TransitionTimingFunction">
            <summary>
            The CSS transition-timing-function property is used to describe how the intermediate values of the CSS properties being affected by a transition effect are calculated. This in essence lets you establish an acceleration curve, so that the speed of the transition can vary over its duration.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.UnicodeBidi">
            <summary>
            The unicode-bidi CSS property together with the direction property relates to the handling of bidirectional text in a document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.UnicodeRange">
            <summary>
            The unicode-range CSS descriptor sets the specific range of characters to be downloaded from a font defined by @font-face and made available for use on the current page.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.VerticalAlign">
            <summary>
            The vertical-align CSS property specifies the vertical alignment of an inline or table-cell box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Visibility">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.WhiteSpace">
            <summary>
            The white-space CSS property is used to to describe how whitespace inside the element is handled.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Widows">
            <summary>
            The widows CSS property defines how many minimum lines must be left on top of a new page, on a paged media.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.Width">
            <summary>
            The width CSS property specifies the width of the content area of an element. The content area is inside the padding, border, and margin of the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.WillChange">
            <summary>
            The will-change property provides a rendering hint to the user agent, stating what kinds of changes the author expects to perform on the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.WordBreak">
            <summary>
            The word-break CSS property is used to specify how (or if) to break lines within words.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.WordSpacing">
            <summary>
            The word-spacing CSS property specifies spacing behavior between tags and words.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.WordWrap">
            <summary>
            The word-wrap CSS property is used to specify whether or not the browser may break lines within words in order to prevent overflow (in other words, force wrapping) when an otherwise unbreakable string is too long to fit in its containing box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.WritingMode">
            <summary>
            CSS Writing Modes Level 3 defines CSS features to support various international script modes, such as left-to-right (e.g., Latin and Indic), right-to-left (e.g., Hebrew and Arabic), bidirectional (e.g., mixed Latin and Arabic) and vertical (e.g., Asian). This article is about the CSS writing-mode property.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleDeclaration.ZIndex">
            <summary>
            The z-index CSS property specifies the z-order of an element and its descendants. When elements overlap, z-order determines which one covers the other. An element with a larger z-index generally covers an element with a lower one.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CSSStyleDeclaration.GetPropertyPriority(System.String)">
            <summary>
            Returns the optional priority, "important". Example: priString= styleObj.getPropertyPriority('color')
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.CSSStyleDeclaration.GetPropertyValue(System.String)">
            <summary>
            Returns the property value. Example: valString= styleObj.getPropertyValue('color')
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.CSSStyleDeclaration.Item(System.Int32)">
            <summary>
            Returns a property name. Example: nameString= styleObj.item(0) Alternative: nameString= styleObj[0]
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Bridge.Html5.CSSStyleDeclaration.ParentRule">
             <summary>
            
             </summary>
        </member>
        <member name="M:Bridge.Html5.CSSStyleDeclaration.RemoveProperty(System.String)">
            <summary>
            Returns the value deleted. Example: valString= styleObj.removeProperty('color')
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.CSSStyleDeclaration.SetProperty(System.String,System.String)">
            <summary>
            No return. Example: styleObj.setProperty('color', 'red', 'important')
            </summary>
            <param name="property"></param>
            <param name="value"></param>
        </member>
        <member name="M:Bridge.Html5.CSSStyleDeclaration.SetProperty(System.String,System.String,System.String)">
            <summary>
            No return. Example: styleObj.setProperty('color', 'red', 'important')
            </summary>
            <param name="property"></param>
            <param name="value"></param>
            <param name="priority"></param>
        </member>
        <member name="T:Bridge.Html5.CSSStyleSheet">
            <summary>
            An object implementing the CSSStyleSheet interface represents a single CSS style sheet.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleSheet.CssRules">
            <summary>
            Returns a CSSRuleList of the CSS rules in the style sheet.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSStyleSheet.OwnerRule">
            <summary>
            If this style sheet is imported into the document using an @import rule, the ownerRule property will return that CSSImportRule, otherwise it returns null.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CSSStyleSheet.DeleteRule(System.Int32)">
            <summary>
            Deletes a rule from the style sheet.
            </summary>
            <param name="index"> is a number representing the position of the rule.</param>
        </member>
        <member name="M:Bridge.Html5.CSSStyleSheet.InsertRule(System.String,System.Int32)">
            <summary>
            Inserts a new style rule into the current style sheet.
            </summary>
            <param name="rule">is a DOMString containing the rule to be inserted (selector and declaration).</param>
            <param name="index">is a unsigned int representing the position to be inserted.</param>
            <returns>The index within the style sheet's rule collection of the newly inserted rule.</returns>
        </member>
        <member name="F:Bridge.Html5.CSSValue.CSS_CUSTOM">
            <summary>
            The value is a custom value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSValue.CSS_INHERIT">
            <summary>
            The value is inherited and the cssText contains "inherit".
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSValue.CSS_PRIMITIVE_VALUE">
            <summary>
            The value is a primitive value and an instance of the CSSPrimitiveValue interface can be obtained by using binding-specific casting methods on this instance of the CSSValue interface.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSValue.CSS_VALUE_LIST">
            <summary>
            The value is a CSSValue list and an instance of the CSSValueList interface can be obtained by using binding-specific casting methods on this instance of the CSSValue interface.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSValue.CssText">
            <summary>
            A string representation of the current value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CSSValue.CssValueType">
            <summary>
            A code defining the type
            </summary>
        </member>
        <member name="T:Bridge.Html5.Cursor">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.Auto">
            <summary>
            The browser determines the cursor to display based on the current context.
            E.g. equivalent to text when hovering text.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.Default">
            <summary>
            Default cursor, typically an arrow.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.None">
            <summary>
            No cursor is rendered.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.ContextMenu">
            <summary>
            A context menu is available under the cursor. Only IE 10 and up have implemented this on Windows
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.Help">
            <summary>
            Indicating help is available.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.Pointer">
            <summary>
            E.g. used when hovering over links, typically a hand.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.Progress">
            <summary>
            The program is busy in the background but the user can still interact with the interface (unlike for wait).
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.Wait">
            <summary>
            The program is busy (sometimes an hourglass or a watch).
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.Cell">
            <summary>
            Indicating that cells can be selected.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.CrossHair">
            <summary>
            Cross cursor, often used to indicate selection in a bitmap.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.Text">
            <summary>
            Indicating text can be selected, typically an I-beam.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.VerticalText">
            <summary>
            Indicating that vertical text can be selected, typically a sideways I-beam.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.Alias">
            <summary>
            Indicating an alias or shortcut is to be created.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.Copy">
            <summary>
            Indicating that something can be copied.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.Move">
            <summary>
            The hovered object may be moved.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.NoDrop">
            <summary>
            Cursor showing that a drop is not allowed at the current location.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.NotAllowed">
            <summary>
            Cursor showing that something cannot be done.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.AllScroll">
            <summary>
            Cursor showing that something can be scrolled in any direction (panned).
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.ColResize">
            <summary>
            The item/column can be resized horizontally. Often rendered as arrows pointing left and right with a vertical bar separating.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.RowResize">
            <summary>
            The item/row can be resized vertically. Often rendered as arrows pointing up and down with a horizontal bar separating them.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.NorthResize">
            <summary>
            Some edge is to be moved.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.EastResize">
            <summary>
            Some edge is to be moved.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.SouthResize">
            <summary>
            Some edge is to be moved.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.WestResize">
            <summary>
            Some edge is to be moved.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.NorthEastResize">
            <summary>
            Some edge is to be moved.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.NorthWestResize">
            <summary>
            Some edge is to be moved.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.SouthEastResize">
            <summary>
            Some edge is to be moved.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.SouthWestResize">
            <summary>
            Some edge is to be moved.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.EastWestResize">
            <summary>
            Indicates a bidirectional resize cursor.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.NorthSouthResize">
            <summary>
            Indicates a bidirectional resize cursor.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.NorthEastSouthWestResize">
            <summary>
            Indicates a bidirectional resize cursor.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.NorthWestSouthEastResize">
            <summary>
            Indicates a bidirectional resize cursor.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.ZoomIn">
            <summary>
            Indicates that something can be zoomed (magnified) in or out.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.ZoomOut">
            <summary>
            Indicates that something can be zoomed (magnified) in or out.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.Grab">
            <summary>
            Indicates that something can be grabbed (dragged to be moved).
            </summary>
        </member>
        <member name="F:Bridge.Html5.Cursor.Grabbing">
            <summary>
            Indicates that something can be grabbed (dragged to be moved).
            </summary>
        </member>
        <member name="T:Bridge.Html5.Direction">
            <summary>
            Set the direction CSS property to match the direction of the text: rtl for Hebrew or Arabic text and ltr for other scripts. This is typically done as part of the document (e.g., using the dir attribute in HTML) rather than through direct use of CSS.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Direction.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.Direction.Ltr">
            <summary>
            The initial value of direction (that is, if not otherwise specified). Text and other elements go from left to right.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Direction.Rtl">
            <summary>
            Text and other elements go from right to left
            </summary>
        </member>
        <member name="T:Bridge.Html5.Display">
            <summary>
            The display CSS property specifies the type of rendering box used for an element. In HTML, default display property values are taken from behaviors described in the HTML specifications or from the browser/user default stylesheet. The default value in XML is inline.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.None">
            <summary>
            Turns off the display of an element (it has no effect on layout); all descendant elements also have their display turned off. The document is rendered as though the element did not exist.
            To render an element box's dimensions, yet have its contents be invisible, see the visibility property.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.Inline">
            <summary>
            The element generates one or more inline element boxes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.Block">
            <summary>
            The element generates a block element box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.ListItem">
            <summary>
            The element generates a block box for the content and a separate list-item inline box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.InlineBlock">
            <summary>
            The element generates a block element box that will be flowed with surrounding content as if it were a single inline box (behaving much like a replaced element would)
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.InlineTable">
            <summary>
            The inline-table value does not have a direct mapping in HTML. It behaves like a &lt;table&gt; HTML element, but as an inline box, rather than a block-level box. Inside the table box is a block-level context.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.Table">
            <summary>
            Behaves like the &lt;table&gt; HTML element. It defines a block-level box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.TableCaption">
            <summary>
            Behaves like the &lt;caption&gt; HTML element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.TableCell">
            <summary>
            Behaves like the &lt;td&gt; HTML element
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.TableColumn">
            <summary>
            These elements behave like the corresponding &lt;col&gt; HTML elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.TableColumnGroup">
            <summary>
            These elements behave like the corresponding &lt;colgroup&gt; HTML elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.TableFooterGroup">
            <summary>
            These elements behave like the corresponding &lt;tfoot&gt; HTML elements
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.TableHeaderGroup">
            <summary>
            These elements behave like the corresponding &lt;thead&gt; HTML elements
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.TableRow">
            <summary>
            Behaves like the &lt;tr&gt; HTML element
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.TableRowGroup">
            <summary>
            These elements behave like the corresponding &lt;tbody&gt; HTML elements
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.Flex">
            <summary>
            The element behaves like a block element and lays out its content according to the flexbox model.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.InlineFlex">
            <summary>
            The element behaves like an inline element and lays out its content according to the flexbox model.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.Grid">
            <summary>
            The element behaves like a block element and lay out its content according to the grid model.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Display.InlineGrid">
            <summary>
            The element behaves like an inline element and lay out its content according to the grid model.
            </summary>
        </member>
        <member name="T:Bridge.Html5.DominantBaseline">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.DominantBaseline.Auto">
            <summary>
            If this property occurs on a block or inline-block element, then the user agent behavior depends on the value of the 'script' property. If the value of the script property is 'auto', the 'auto' value is equivalent to 'alphabetic' for horizontal 'writing-mode' values and 'central' for vertical 'writing-mode' values. If the value of the script property is other than 'auto', the 'auto' value is equivalent to 'use-script'
            </summary>
        </member>
        <member name="F:Bridge.Html5.DominantBaseline.UseScript">
            <summary>
            The dominant baseline-identifier is set using the computed value of the 'script' property. The 'writing-mode' value, whether horizontal or vertical is used to select the baseline-table that correspond to that baseline-identifier.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DominantBaseline.NoChange">
            <summary>
            The dominant baseline-identifier, the baseline-table and the baseline-table font-size remain the same as that of the parent.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DominantBaseline.ResetSize">
            <summary>
            The dominant baseline-identifier and the baseline table remain the same, but the baseline-table font-size is changed to the value of the 'font-size' property on this element. This re-scales the baseline table for the current 'font-size'.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DominantBaseline.Alphabetic">
            <summary>
            The dominant baseline-identifier is set to the 'alphabetic' baseline.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DominantBaseline.Hanging">
            <summary>
            The dominant baseline-identifier is set to the 'hanging' baseline.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DominantBaseline.Ideographic">
            <summary>
            The dominant baseline-identifier is set to the 'ideographic' baseline.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DominantBaseline.Mathematical">
            <summary>
            The dominant baseline-identifier is set to the 'mathematical' baseline.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DominantBaseline.Central">
            <summary>
            The dominant baseline-identifier is set to be 'central'. The derived baseline-table is constructed from the defined baselines in a baseline-table in the nominal font.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DominantBaseline.Middle">
            <summary>
            The dominant baseline-identifier is set to be 'middle'. The derived baseline-table is constructed from the defined baselines in a baseline-table in the nominal font.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DominantBaseline.TextAfterEdge">
            <summary>
            The dominant baseline-identifier is set to be 'text-after-edge'. The derived baseline-table is constructed from the defined baselines in a baseline-table in the nominal font.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DominantBaseline.TextBeforeEdge">
            <summary>
            The dominant baseline-identifier is set to be 'text-before-edge'. The derived baseline-table is constructed from the defined baselines in a baseline-table in the nominal font.
            </summary>
        </member>
        <member name="T:Bridge.Html5.EmptyCells">
            <summary>
            The empty-cells CSS property specifies how user agents should render borders and backgrounds around cells that have no visible content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EmptyCells.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.EmptyCells.Show">
            <summary>
            Is a keyword indicating that borders and backgrounds should be drawn like in a normal cells.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EmptyCells.Hide">
            <summary>
            Is a keyword indicating that no border or backgrounds should be drawn.
            </summary>
        </member>
        <member name="T:Bridge.Html5.FlexDirection">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.FlexDirection.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.FlexDirection.Row">
            <summary>
            The flex container's main-axis is defined to be the same as the text direction. The main-start and main-end points are the same as the content direction.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FlexDirection.RowReverse">
            <summary>
            Behaves the same as row but the main-start and main-end points are permuted.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FlexDirection.Column">
            <summary>
            The flex container's main-axis is the same as the block-axis. The main-start and main-end points are the same as the before and after points of the writing-mode.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FlexDirection.ColumnReverse">
            <summary>
            Behaves the same as column but the main-start and main-end are permuted.
            </summary>
        </member>
        <member name="T:Bridge.Html5.FlexWrap">
            <summary>
            The CSS flex-wrap property specifies whether the children are forced into a single line or if the items can be flowed on multiple lines.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FlexWrap.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.FlexWrap.NoWrap">
            <summary>
            The flex items are laid out in a single line which may cause the flex container to overflow. The cross-start is either equivalent to start or before depending flex-direction value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FlexWrap.Wrap">
            <summary>
            The flex items break into multiple lines. The cross-start is either equivalent to start or before depending flex-direction value and the cross-end is the opposite of the specified cross-start.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FlexWrap.WrapReverse">
            <summary>
            Behaves the same as wrap but cross-start and cross-end are permuted.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Float">
            <summary>
            The float CSS property specifies that an element should be taken from the normal flow and placed along the left or right side of its container, where text and inline elements will wrap around it. A floating element is one where the computed value of float is not none.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Float.None">
            <summary>
            Is a keyword indicating that the element must not float.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Float.Left">
            <summary>
            Is a keyword indicating that the element must float on the left side of its containing block.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Float.Right">
            <summary>
            Is a keyword indicating that the element must float on the right side of its containing block.
            </summary>
        </member>
        <member name="T:Bridge.Html5.FontKerning">
            <summary>
            The font-kerning property allows contextual adjustment of inter-glyph spacing, i.e. the spaces between the characters in text. This property controls <bold>metric kerning</bold> - that utilizes adjustment data contained in the font.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontKerning.None">
            <summary>
            Specifies kerning is not applied
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontKerning.Normal">
            <summary>
            Specifies kerning is applied. Fonts that do not include kerning data are unaffected by this setting.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontKerning.Auto">
            <summary>
            Used to specify kerning is at the discretion of the user agent.
            </summary>
        </member>
        <member name="T:Bridge.Html5.FontStretch">
            <summary>
            The font-stretch CSS property selects a normal, condensed, or expanded face from a font.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontStretch.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.FontStretch.Normal">
            <summary>
            Specifies a normal font face.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontStretch.SemiCondensed">
            <summary>
            Specifies a font face more condensed than normal, with ultra-condensed as the most condensed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontStretch.Condensed">
            <summary>
            Specifies a font face more condensed than normal, with ultra-condensed as the most condensed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontStretch.ExtraCondensed">
            <summary>
            Specifies a font face more condensed than normal, with ultra-condensed as the most condensed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontStretch.UltraCondensed">
            <summary>
            Specifies a font face more condensed than normal, with ultra-condensed as the most condensed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontStretch.SemiExpanded">
            <summary>
            Specifies a font face more expanded than normal, with ultra-expanded as the most expanded.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontStretch.Expanded">
            <summary>
            Specifies a font face more expanded than normal, with ultra-expanded as the most expanded.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontStretch.ExtraExpanded">
            <summary>
            Specifies a font face more expanded than normal, with ultra-expanded as the most expanded.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontStretch.UltraExpanded">
            <summary>
            Specifies a font face more expanded than normal, with ultra-expanded as the most expanded.
            </summary>
        </member>
        <member name="T:Bridge.Html5.FontStyle">
            <summary>
            The font-style CSS property allows italic or oblique faces to be selected within a font-family.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontStyle.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.FontStyle.Normal">
            <summary>
            Selects a font that is classified as normal within a font-family
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontStyle.Italic">
            <summary>
            Selects a font that is labeled italic, if that is not available, one labeled oblique
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontStyle.Oblique">
            <summary>
            Selects a font that is labeled oblique
            </summary>
        </member>
        <member name="T:Bridge.Html5.FontSynthesis">
            <summary>
            This value specifies whether the user agent is allowed to synthesize bold or oblique font faces when a font family lacks bold or italic faces.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontSynthesis.None">
            <summary>
            user agent is not allowed to synthesize bold or oblique font when not available.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontSynthesis.Weight">
            <summary>
            user agent is only allowed to synthesize bold font when not available but not oblique.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontSynthesis.Style">
            <summary>
            user agent is only allowed to synthesize oblique font when not available but not bold.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontSynthesis.WeightStyle">
            <summary>
            user agent is allowed to synthesize both bold and oblique.
            </summary>
        </member>
        <member name="T:Bridge.Html5.FontVariant">
            <summary>
            The font-variant CSS property selects a normal, or small-caps face from a font family. Setting font-variant is also possible by using the font shorthand.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariant.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariant.Normal">
            <summary>
            Specifies a normal font face.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariant.SmallCaps">
            <summary>
            Specifies a font that is labeled as a small-caps font. If a small-caps font is not available, Mozilla (Firefox) and other browsers will simulate a small-caps font, i.e. by taking a normal font and replacing the lowercase letters by scaled uppercase characters.
            </summary>
        </member>
        <member name="T:Bridge.Html5.FontVariantCaps">
            <summary>
            The font-variant-caps property allows the selection of alternate glyphs used for small or petite capitals or for titling. These glyphs are specifically designed to blend well with the surrounding normal glyphs, to maintain the weight and readability which suffers when text is simply resized to fit this purpose.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantCaps.Inherited">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantCaps.Normal">
            <summary>
            None of the features are enabled.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantCaps.SmallCaps">
            <summary>
            Enables display of small capitals (OpenType feature: smcp). Small-caps glyphs typically use the form of uppercase letters but are reduced to the size of lowercase letters.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantCaps.AllSmallCaps">
            <summary>
            Enables display of small capitals for both upper and lowercase letters (OpenType features: c2sc, smcp).
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantCaps.PetiteCaps">
            <summary>
            Enables display of petite capitals (OpenType feature: pcap).
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantCaps.AllPetiteCaps">
            <summary>
            Enables display of petite capitals for both upper and lowercase letters (OpenType features: c2pc, pcap).
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantCaps.Unicase">
            <summary>
            Enables display of mixture of small capitals for uppercase letters with normal lowercase letters (OpenType feature: unic).
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantCaps.TitlingCaps">
            <summary>
            Enables display of titling capitals (OpenType feature: titl). Uppercase letter glyphs are often designed for use with lowercase letters. When used in all uppercase titling sequences they can appear too strong.
            </summary>
        </member>
        <member name="T:Bridge.Html5.FontVariantLigatures">
            <summary>
             font-variant-ligatures is a CSS property to control ligatures in text.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantLigatures.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantLigatures.Normal">
            <summary>
            A value of ‘normal’ specifies that common default features are enabled, as described in detail in the next section. For OpenType fonts, common ligatures and contextual forms are on by default, discretionary and historical ligatures are not.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantLigatures.None">
            <summary>
            Specifies that all types of ligatures and contextual forms covered by this property are explicitly disabled. In situations where ligatures are not considered necessary, this may improve the speed of text rendering.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantLigatures.CommonLigatures">
            <summary>
            Enables display of common ligatures (OpenType features: liga, clig). For OpenType fonts, common ligatures are enabled by default.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantLigatures.NoCommonLigatures">
            <summary>
            Disables display of common ligatures (OpenType features: liga, clig).
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantLigatures.DiscretionaryLigatures">
            <summary>
            Enables display of discretionary ligatures (OpenType feature: dlig). Which ligatures are discretionary or optional is decided by the type designer, so authors will need to refer to the documentation of a given font to understand which ligatures are considered discretionary.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantLigatures.NoDiscretionaryLigatures">
            <summary>
            Disables display of discretionary ligatures (OpenType feature: dlig).
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantLigatures.HistoricalLigatures">
            <summary>
            Enables display of historical ligatures (OpenType feature: hlig).
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantLigatures.NoHistoricalLigatures">
            <summary>
            Disables display of historical ligatures (OpenType feature: hlig).
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantLigatures.Contextual">
            <summary>
            Enables display of contextual alternates (OpenType feature: calt). Although not strictly a ligature feature, like ligatures this feature is commonly used to harmonize the shapes of glyphs with the surrounding context. For OpenType fonts, this feature is on by default.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantLigatures.NoContextual">
            <summary>
            Disables display of contextual alternates (OpenType feature: calt).
            </summary>
        </member>
        <member name="T:Bridge.Html5.FontVariantPosition">
            <summary>
            The font-variant-position property is used to enable typographic subscript and superscript glyphs. These are alternate glyphs designed within the same em-box as default glyphs and are intended to be laid out on the same baseline as the default glyphs, with no resizing or repositioning of the baseline. They are explicitly designed to match the surrounding text and to be more readable without affecting the line height.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantPosition.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantPosition.Normal">
            <summary>
            None of the features are enabled.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantPosition.Sub">
            <summary>
            Enables display of subscript variants (OpenType feature: subs).
            </summary>
        </member>
        <member name="F:Bridge.Html5.FontVariantPosition.Super">
            <summary>
            Enables display of superscript variants (OpenType feature: sups).
            </summary>
        </member>
        <member name="T:Bridge.Html5.GridAutoFlow">
            <summary>
            Automatically places grid elements into the grid layout if an explicit location is not designated. Designates the direction of the the flow and whether rows or columns must be added to accommodate the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GridAutoFlow.None">
            <summary>
            Causes auto-placed grid items to be placed according to the grid-auto-position property, rather than using the auto-placement algorithm.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GridAutoFlow.Rows">
            <summary>
            Fills each row in turn, adding new rows as necessary.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GridAutoFlow.Columns">
            <summary>
            Fills each column in turn, adding new columns as necessary.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GridAutoFlow.Dense">
            <summary>
            Uses a "dense" packing algorithm approach to fill in holes in the grid as smaller items appear.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GridAutoFlow.Sparse">
            <summary>
            Permanently skips cells that are not filled with the current item. The default auto-pacement algorithm packing approach.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLColor">
            <summary>
            HTML Colors
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Black">
            <summary>
            rgb(  0,   0,   0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Silver">
            <summary>
            rgb(192, 192, 192)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Gray">
            <summary>
            rgb(128, 128, 128)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.White">
            <summary>
            rgb(255, 255, 255)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Maroon">
            <summary>
            rgb(128,   0,   0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Red">
            <summary>
            rgb(255,   0,   0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Purple">
            <summary>
            rgb(128,   0, 128)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.RebeccaPurple">
            <summary>
            rgb(102, 51, 153)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Fuchsia">
            <summary>
            rgb(255,   0, 255)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Green">
            <summary>
            rgb(  0, 128,   0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Lime">
            <summary>
            rgb(  0, 255,   0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Olive">
            <summary>
            rgb(128, 128,   0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Yellow">
            <summary>
            rgb(255, 255,   0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Navy">
            <summary>
            rgb(  0,   0, 128)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Blue">
            <summary>
            rgb(  0,   0, 255)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Teal">
            <summary>
            rgb(  0, 128, 128)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Aqua">
            <summary>
            rgb(  0, 255, 255)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Orange">
            <summary>
            rgb(255, 165,   0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.AliceBlue">
            <summary>
            rgb(240, 248, 255)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.AntiqueWhite">
            <summary>
            rgb(250, 235, 215)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Aquamarine">
            <summary>
            rgb(127, 255, 212)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Azure">
            <summary>
            rgb(240, 255, 255)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Beige">
            <summary>
            rgb(245, 245, 220)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Bisque">
            <summary>
            rgb(255, 228, 196)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.BlanchedAlmond">
            <summary>
            rgb(255, 235, 205)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.BlueViolet">
            <summary>
            rgb(138,  43, 226)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Brown">
            <summary>
            rgb(165,  42,  42)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.BurlyWood">
            <summary>
            rgb(222, 184, 135)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.CadetBlue">
            <summary>
            rgb( 95, 158, 160)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Chartreuse">
            <summary>
            rgb(127, 255,   0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Chocolate">
            <summary>
            rgb(210, 105,  30)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Coral">
            <summary>
            rgb(255, 127,  80)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.CornflowerBlue">
            <summary>
            rgb(100, 149, 237)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Cornsilk">
            <summary>
            rgb(255, 248, 220)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Crimson">
            <summary>
            rgb(220,  20,  60)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Cyan">
            <summary>
            rgb(0, 255, 255)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkBlue">
            <summary>
            rgb(  0,   0, 139)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkCyan">
            <summary>
            rgb(  0, 139, 139)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkGoldenRod">
            <summary>
            rgb(184, 134,  11)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkGray">
            <summary>
            rgb(169, 169, 169)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkGreen">
            <summary>
            rgb(  0, 100,   0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkGrey">
            <summary>
            rgb(169, 169, 169)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkKhaki">
            <summary>
            rgb(189, 183, 107)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkMagenta">
            <summary>
            rgb(139,   0, 139)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkOliveGreen">
            <summary>
            rgb( 85, 107,  47)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkOrange">
            <summary>
            rgb(255, 140,   0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkOrchid">
            <summary>
            rgb(153,  50, 204)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkRed">
            <summary>
            rgb(139,   0,   0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkSalmon">
            <summary>
            rgb(233, 150, 122)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkSeaGreen">
            <summary>
            rgb(143, 188, 143)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkSlateBlue">
            <summary>
            rgb( 72,  61, 139)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkSlateGray">
            <summary>
            rgb( 47,  79,  79)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkSlateGrey">
            <summary>
            rgb( 47,  79,  79)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkTurquoise">
            <summary>
            rgb(  0, 206, 209)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DarkViolet">
            <summary>
            rgb(148,   0, 211)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DeepPink">
            <summary>
            rgb(255,  20, 147)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DeepSkyBlue">
            <summary>
            rgb(  0, 191, 255)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DimGray">
            <summary>
            rgb(105, 105, 105)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DimGrey">
            <summary>
            rgb(105, 105, 105)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.DodgerBlue">
            <summary>
            rgb( 30, 144, 255)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.FireBrick">
            <summary>
            rgb(178,  34,  34)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.FloralWhite">
            <summary>
            rgb(255, 250, 240)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.ForestGreen">
            <summary>
            rgb( 34, 139,  34)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Gainsboro">
            <summary>
            rgb(220, 220, 220)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.GhostWhite">
            <summary>
            rgb(248, 248, 255)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Gold">
            <summary>
            rgb(255, 215,   0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.GoldenRod">
            <summary>
            rgb(218, 165,  32)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.GreenYellow">
            <summary>
            rgb(173, 255,  47)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Grey">
            <summary>
            rgb(128, 128, 128)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.HoneyDew">
            <summary>
            rgb(240, 255, 240)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.HotPink">
            <summary>
            rgb(255, 105, 180)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.IndianRed">
            <summary>
            rgb(205,  92,  92)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Indigo">
            <summary>
            rgb( 75,   0, 130)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Ivory">
            <summary>
            rgb(255, 255, 240)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Khaki">
            <summary>
            rgb(240, 230, 140)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Lavender">
            <summary>
            rgb(230, 230, 250)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LavenderBlush">
            <summary>
            rgb(255, 240, 245)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LawnGreen">
            <summary>
            rgb(124, 252, 0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LemonChiffon">
            <summary>
            rgb(255, 250, 205)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LightBlue">
            <summary>
            rgb(173, 216, 230)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LightCoral">
            <summary>
            rgb(240, 128, 128)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LightCyan">
            <summary>
            rgb(224, 255, 255)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LightGoldenRodYellow">
            <summary>
            rgb(250, 250, 210)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LightGray">
            <summary>
            rgb(211, 211, 211)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LightGrey">
            <summary>
            rgb(211, 211, 211)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LightGreen">
            <summary>
            rgb(144, 238, 144)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LightPink">
            <summary>
            rgb(255, 182, 193)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LightSalmon">
            <summary>
            rgb(255, 160, 122)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LightSeaGreen">
            <summary>
            rgb( 32, 178, 170)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LightSkyBlue">
            <summary>
            rgb(135, 206, 250)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LightSlateGray">
            <summary>
            rgb(119, 136, 153)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LightSlateGrey">
            <summary>
            rgb(119, 136, 153)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LightSteelBlue">
            <summary>
            rgb(176, 196, 222)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LightYellow">
            <summary>
            rgb(255, 255, 224)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.LimeGreen">
            <summary>
            rgb( 50, 205,  50)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Linen">
            <summary>
            rgb(250, 240, 230)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Magenta">
            <summary>
            rgb(255, 0, 255)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.MediumAquamarine">
            <summary>
            rgb(102, 205, 170)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.MediumBlue">
            <summary>
            rgb(  0,   0, 205)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.MediumOrchid">
            <summary>
            rgb(186,  85, 211)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.MediumPurple">
            <summary>
            rgb(147, 112, 219)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.MediumSeaGreen">
            <summary>
            rgb( 60, 179, 113)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.MediumSlateBlue">
            <summary>
            rgb(123, 104, 238)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.MediumSpringGreen">
            <summary>
            rgb(  0, 250, 154)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.MediumTurquoise">
            <summary>
            rgb( 72, 209, 204)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.MediumVioletRed">
            <summary>
            rgb(199,  21, 133)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.MidnightBlue">
            <summary>
            rgb( 25,  25, 112)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.MintCream">
            <summary>
            rgb(245, 255, 250)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.MistyRose">
            <summary>
            rgb(255, 228, 225)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Moccasin">
            <summary>
            rgb(255, 228, 181)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.NavajoWhite">
            <summary>
            rgb(255, 222, 173)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.OldLace">
            <summary>
            rgb(253, 245, 230)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.OliveDrab">
            <summary>
            rgb(107, 142,  35)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.OrangeRed">
            <summary>
            rgb(255,  69,   0)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Orchid">
            <summary>
            rgb(218, 112, 214)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.PaleGoldenRod">
            <summary>
            rgb(238, 232, 170)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.PaleGreen">
            <summary>
            rgb(152, 251, 152)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.PaleTurquoise">
            <summary>
            rgb(175, 238, 238)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.PaleVioletRed">
            <summary>
            rgb(219, 112, 147)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.PapayaWhip">
            <summary>
            rgb(255, 239, 213)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.PeachPuff">
            <summary>
            rgb(255, 218, 185)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Peru">
            <summary>
            rgb(205, 133,  63)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Pink">
            <summary>
            rgb(255, 192, 203)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Plum">
            <summary>
            rgb(221, 160, 221)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.PowderBlue">
            <summary>
            rgb(176, 224, 230)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.RosyBrown">
            <summary>
            rgb(188, 143, 143)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.RoyalBlue">
            <summary>
            rgb( 65, 105, 225)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.SaddleBrown">
            <summary>
            rgb(139,  69,  19)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Salmon">
            <summary>
            rgb(250, 128, 114)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.SandyBrown">
            <summary>
            rgb(244, 164,  96)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.SeaGreen">
            <summary>
            rgb( 46, 139,  87)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.SeaShell">
            <summary>
            rgb(255, 245, 238)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Sienna">
            <summary>
            rgb(160,  82,  45)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Skyblue">
            <summary>
            rgb(135, 206, 235)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.SlateBlue">
            <summary>
            rgb(106,  90, 205)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.SlateGray">
            <summary>
            rgb(112, 128, 144)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.SlateGrey">
            <summary>
            rgb(112, 128, 144)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Snow">
            <summary>
            rgb(255, 250, 250)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.SpringGreen">
            <summary>
            rgb(  0, 255, 127)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.SteelBlue">
            <summary>
            rgb( 70, 130, 180)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Tan">
            <summary>
            rgb(210, 180, 140)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Thistle">
            <summary>
            rgb(216, 191, 216)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Tomato">
            <summary>
            rgb(255,  99,  71)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Turquoise">
            <summary>
            rgb( 64, 224, 208)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Violet">
            <summary>
            rgb(238, 130, 238)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.Wheat">
            <summary>
            rgb(245, 222, 179)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.WhiteSmoke">
            <summary>
            rgb(245, 245, 245)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLColor.YellowGreen">
            <summary>
            rgb(154, 205,  50)
            </summary>
        </member>
        <member name="T:Bridge.Html5.Hyphens">
            <summary>
            The hyphens CSS property tells the browser how to go about splitting words to improve the layout of text when line-wrapping.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Hyphens.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.Hyphens.None">
            <summary>
            Words are not broken at line breaks, even if characters inside the words suggest line break points. Lines will only wrap at whitespace.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Hyphens.Manual">
            <summary>
            Words are broken for line-wrapping only where characters inside the word suggest line break opportunities. See Suggesting line break opportunities for details.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Hyphens.Auto">
            <summary>
            The browser is free to automatically break words at appropriate hyphenation points, following whatever rules it chooses to use. Suggested line break opportunities, as covered in Suggesting line break opportunities, should be preferred over automatically selecting break points whenever possible.
            </summary>
        </member>
        <member name="T:Bridge.Html5.ImageRendering">
            <summary>
            The image-rendering CSS property provides a hint to the user agent about how to handle its image rendering.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ImageRendering.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.ImageRendering.Auto">
            <summary>
            Default value, the image should be scaled with an algorithm that maximizes the appearance of the image. In particular, scaling algorithms that "smooth" colors are acceptable, such as bilinear interpolation. This is intended for images such as photos. Since version 1.9 (Firefox 3.0), Gecko uses bilinear resampling (high quality).
            </summary>
        </member>
        <member name="F:Bridge.Html5.ImageRendering.CrispEdges">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.ImageRendering.Pixelated">
            <summary>
            When scaling the image up, the "nearest neighbor" or similar algorithm must be used, so that the image appears to be simply composed of very large pixels. When scaling down, this is the same as 'auto'.
            </summary>
        </member>
        <member name="T:Bridge.Html5.ImeMode">
            <summary>
            The ime-mode CSS property controls the state of the input method editor for text fields.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ImeMode.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.ImeMode.Auto">
            <summary>
            No change is made to the current input method editor state. This is the default.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ImeMode.Normal">
            <summary>
            The IME state should be normal; this value can be used in a user style sheet to override the page setting. This value is not supported by Internet Explorer.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ImeMode.Active">
            <summary>
            The input method editor is initially active; text entry is performed using it unless the user specifically dismisses it. Not supported on Linux.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ImeMode.Inactive">
            <summary>
            The input method editor is initially inactive, but the user may activate it if they wish. Not supported on Linux.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ImeMode.Disabled">
            <summary>
            The input method editor is disabled and may not be activated by the user.
            </summary>
        </member>
        <member name="T:Bridge.Html5.JustifyContent">
            <summary>
            The CSS justify-content property defines how a browser distributes available space between and around elements when aligning flex items in the main-axis of the current line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.JustifyContent.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.JustifyContent.FlexStart">
            <summary>
            The flex items are packed starting from the main-start. Margins of the first flex item is flushed with the main-start edge of the line and each following flex item is flushed with the preceding.
            </summary>
        </member>
        <member name="F:Bridge.Html5.JustifyContent.FlexEnd">
            <summary>
            The flex items are packed starting from the main-end. The margin edge of the last flex item is flushed with the main-end edge of the line and each preceding flex item is flushed with the following.
            </summary>
        </member>
        <member name="F:Bridge.Html5.JustifyContent.Center">
            <summary>
            The flex items are packed toward the center of the line. The flex items are flushed with each other and aligned in the center of the line. Space between the main-start edge of the line and first item and between main-end and the last item of the line is the same.
            </summary>
        </member>
        <member name="F:Bridge.Html5.JustifyContent.SpaceBetween">
            <summary>
            Flex items are evenly distributed along the line. The spacing is done such as the space between two adjacent items is the same. Main-start edge and main-end edge are flushed with respectively first and last flex item edges.
            </summary>
        </member>
        <member name="F:Bridge.Html5.JustifyContent.SpaceAround">
            <summary>
            Flex items are evenly distributed so that the space between two adjacent items is the same. The empty space before the first and after the last items equals half of the space between two adjacent items.
            </summary>
        </member>
        <member name="T:Bridge.Html5.ListStylePosition">
            <summary>
            The list-style-position CSS property specifies the position of the marker box in the principal block box. It is often more convenient to use the shortcut list-style.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ListStylePosition.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.ListStylePosition.Outside">
            <summary>
            The marker box is outside the principal block box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ListStylePosition.Inside">
            <summary>
            The marker box is the first inline box in the principal block box, after which the element's content flows.
            </summary>
        </member>
        <member name="T:Bridge.Html5.ListStyleType">
            <summary>
            The list-style-type CSS property specifies appearance of a list item element. As it is the only one who defaults to display:list-item, this is usually a &lt;li&gt; element, but can be any element with this display value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ListStyleType.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.MaskType">
            <summary>
            The CSS mask-type properties defines if a SVG &lt;mask&gt; element is a luminance or an alpha mask.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MaskType.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.MaskType.Luminance">
            <summary>
            Is a keyword indicating that the associated &lt;mask&gt; is a luminance mask, that is that its relative luminance values must be used when applying it.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MaskType.Alpha">
            <summary>
            Is a keyword indicating that the associated &lt;mask&gt; is an alpha mask, that is that its alpha channel values must be used when applying it.
            </summary>
        </member>
        <member name="T:Bridge.Html5.ObjectFit">
            <summary>
            The ‘object-fit’ property specifies how the contents of a replaced element should be fitted to the box established by its used height and width.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ObjectFit.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.ObjectFit.Fill">
            <summary>
            The replaced content is sized to fill the element's content box: the object's concrete object size is the element's used width and height.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ObjectFit.Contain">
            <summary>
            The replaced content is sized to maintain its aspect ratio while fitting within the element's content box: its concrete object size is resolved as a contain constraint against the element's used width and height.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ObjectFit.Cover">
            <summary>
            The replaced content is sized to maintain its aspect ratio while filling the element's entire content box: its concrete object size is resolved as a cover constraint against the element's used width and height.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ObjectFit.None">
            <summary>
            The replaced content is not resized to fit inside the element's content box: determine the object's concrete object size using the default sizing algorithm with no specified size, and a default object size equal to the replaced element's used width and height.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ObjectFit.ScaleDown">
            <summary>
            The replaced content is not resized to fit inside the element's content box: determine the object's concrete object size using the default sizing algorithm with no specified size, and a default object size equal to the replaced element's used width and height.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Overflow">
            <summary>
            The overflow CSS property specifies whether to clip content, render scroll bars or display overflow content of a block-level element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Overflow.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.Overflow.Visible">
            <summary>
            Default value. Content is not clipped, it may be rendered outside the content box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Overflow.Hidden">
            <summary>
            The content is clipped and no scrollbars are provided.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Overflow.Scroll">
            <summary>
            The content is clipped and desktop browsers use scrollbars, whether or not any content is clipped. This avoids any problem with scrollbars appearing and disappearing in a dynamic environment. Printers may print overflowing content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Overflow.Auto">
            <summary>
            Depends on the user agent. Desktop browsers like Firefox provide scrollbars if content overflows.
            </summary>
        </member>
        <member name="T:Bridge.Html5.OverflowWrap">
            <summary>
            The word-wrap CSS property is used to specify whether or not the browser may break lines within words in order to prevent overflow (in other words, force wrapping) when an otherwise unbreakable string is too long to fit in its containing box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.OverflowWrap.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.OverflowWrap.Normal">
            <summary>
            Indicates that lines may only break at normal word break points.
            </summary>
        </member>
        <member name="F:Bridge.Html5.OverflowWrap.BreakWord">
            <summary>
            Indicates that normally unbreakable words may be broken at arbitrary points if there are no otherwise acceptable break points in the line.
            </summary>
        </member>
        <member name="T:Bridge.Html5.PageBreak">
            <summary>
            The page-break-after CSS property adjusts page breaks after/before the current element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PageBreak.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.PageBreak.Auto">
            <summary>
            Initial value. Automatic page breaks (neither forced nor forbidden).
            </summary>
        </member>
        <member name="F:Bridge.Html5.PageBreak.Always">
            <summary>
            Always force page breaks after the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PageBreak.Avoid">
            <summary>
            Avoid page breaks after the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PageBreak.Left">
            <summary>
            Force page breaks after the element so that the next page is formatted as a left page.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PageBreak.Right">
            <summary>
            Force page breaks after the element so that the next page is formatted as a right page.
            </summary>
        </member>
        <member name="T:Bridge.Html5.PageBreakInside">
            <summary>
            The page-break-inside CSS property adjusts page breaks inside the current element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PageBreakInside.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.PageBreakInside.Auto">
            <summary>
            Initial value. Automatic page breaks (neither forced nor forbidden).
            </summary>
        </member>
        <member name="F:Bridge.Html5.PageBreakInside.Avoid">
            <summary>
            Avoid page breaks after the element.
            </summary>
        </member>
        <member name="T:Bridge.Html5.PointerEvents">
            <summary>
            The CSS property pointer-events allows authors to control under what circumstances (if any) a particular graphic element can become the target of mouse events. When this property is unspecified, the same characteristics of the visiblePainted value apply to SVG content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PointerEvents.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.PointerEvents.Auto">
            <summary>
            The element behaves as it would if the pointer-events property was not specified. In SVG content, this value and the value visiblePainted have the same effect.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PointerEvents.None">
            <summary>
            The element is never the target of mouse events; however, mouse events may target its descendant elements if those descendants have pointer-events set to some other value. In these circumstances, mouse events will trigger event listeners on this parent element as appropriate on their way to/from the descendant during the event capture/bubble phases.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PointerEvents.VisiblePainted">
            <summary>
            SVG only. The element can only be the target of a mouse event when the visibility property is set to visible and when the mouse cursor is over the interior (i.e., 'fill') of the element and the fill property is set to a value other than none, or when the mouse cursor is over the perimeter (i.e., 'stroke') of the element and the stroke property is set to a value other than none.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PointerEvents.VisibleFill">
            <summary>
            SVG only. The element can only be the target of a mouse event when the visibility property is set to visible and when the mouse cursor is over the interior (i.e., fill) of the element. The value of the fill property does not effect event processing.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PointerEvents.VisibleStroke">
            <summary>
            SVG only. The element can only be the target of a mouse event when the visibility property is set to visible and when the mouse cursor is over the perimeter (i.e., stroke) of the element. The value of the stroke property does not effect event processing.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PointerEvents.Visible">
            <summary>
            SVG only. The element can be the target of a mouse event when the visibility property is set to visible and the mouse cursor is over either the interior (i.e., fill) or the perimeter (i.e., stroke) of the element. The values of the fill and stroke do not effect event processing.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PointerEvents.Painted">
            <summary>
            SVG only. The element can only be the target of a mouse event when the mouse cursor is over the interior (i.e., 'fill') of the element and the fill property is set to a value other than none, or when the mouse cursor is over the perimeter (i.e., 'stroke') of the element and the stroke property is set to a value other than none. The value of the visibility property does not effect event processing.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PointerEvents.Fill">
            <summary>
            SVG only. The element can only be the target of a mouse event when the pointer is over the interior (i.e., fill) of the element. The values of the fill and visibility properties do not effect event processing.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PointerEvents.Stroke">
            <summary>
            SVG only. The element can only be the target of a mouse event when the pointer is over the perimeter (i.e., stroke) of the element. The values of the stroke and visibility properties do not effect event processing.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PointerEvents.All">
            <summary>
            SVG only. The element can only be the target of a mouse event when the pointer is over the interior (i.e., fill) or the perimeter (i.e., stroke) of the element. The values of the fill, stroke and visibility properties do not effect event processing.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Position">
            <summary>
            The position CSS property chooses alternative rules for positioning elements, designed to be useful for scripted animation effects.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Position.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.Position.Static">
            <summary>
            This keyword let the element use the normal behavior, that is it is laid out in its current position in the flow.  The top, right, bottom, and left properties do not apply.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Position.Relative">
            <summary>
            This keyword lays out all elements as though the element were not positioned, and then adjust the element's position, without changing layout (and thus leaving a gap for the element where it would have been had it not been positioned). The effect of position:relative on table-*-group, table-row, table-column, table-cell, and table-caption elements is undefined.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Position.Absolute">
            <summary>
            Do not leave space for the element. Instead, position it at a specified position relative to its closest positioned ancestor or to the containing block. Absolutely positioned boxes can have margins, they do not collapse with any other margins.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Position.Fixed">
            <summary>
            Do not leave space for the element. Instead, position it at a specified position relative to the screen's viewport and doesn't move when scrolled. When printing, position it at that fixed position on every page.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Position.Sticky">
            <summary>
            The box position is calculated according to the normal flow (this is called the position in normal flow). Then the box is offset relative to its flow root and containing block and in all cases, including table elements, does not affect the position of any following boxes. When a box B is stickily positioned, the position of the following box is calculated as though B were not offset. The effect of ‘position: sticky’ on table elements is the same as for ‘position: relative’.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Resize">
            <summary>
            The resize CSS property lets you control the resizability of an element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Resize.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.Resize.None">
            <summary>
            The element offers no user-controllable method for resizing the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Resize.Both">
            <summary>
            The element displays a mechanism for allowing the user to resize the element, which may be resized both horizontally and vertically.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Resize.Horizontal">
            <summary>
            The element displays a mechanism for allowing the user to resize the element, which may only be resized horizontally.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Resize.Vertical">
            <summary>
            The element displays a mechanism for allowing the user to resize the element, which may only be resized vertically.
            </summary>
        </member>
        <member name="T:Bridge.Html5.StyleSheet">
            <summary>
            An object implementing the StyleSheet interface represents a single style sheet. CSS style sheets will further implement the more specialized CSSStyleSheet interface.
            </summary>
        </member>
        <member name="F:Bridge.Html5.StyleSheet.Disabled">
            <summary>
            Is a Boolean representing whether the current stylesheet has been applied or not.
            </summary>
        </member>
        <member name="F:Bridge.Html5.StyleSheet.Href">
            <summary>
            Returns a DOMString representing the location of the stylesheet.
            </summary>
        </member>
        <member name="F:Bridge.Html5.StyleSheet.ParentStyleSheet">
            <summary>
            Returns a StyleSheet including this one, if any; returns null if there aren't any.
            </summary>
        </member>
        <member name="F:Bridge.Html5.StyleSheet.Title">
            <summary>
            Returns a DOMString representing the advisory title of the current style sheet.
            </summary>
        </member>
        <member name="F:Bridge.Html5.StyleSheet.Type">
            <summary>
            Returns a DOMString representing the style sheet language for this style sheet.
            </summary>
        </member>
        <member name="T:Bridge.Html5.StyleSheetList">
            <summary>
            The StyleSheetList interface provides the abstraction of an ordered collection of style sheets.
            The items in the StyleSheetList are accessible via an integral index, starting from 0.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TableLayout">
            <summary>
            The table-layout CSS property defines the algorithm to be used to layout the table cells, rows, and columns.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TableLayout.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TableLayout.Auto">
            <summary>
            An automatic table layout algorithm is commonly used by most browsers for table layout. The width of the table and its cells depends on the content thereof.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TableLayout.Fixed">
            <summary>
            Table and column widths are set by the widths of table and col elements or by the width of the first row of cells. Cells in subsequent rows do not affect column widths.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TextAlign">
            <summary>
            The text-align CSS property describes how inline content like text is aligned in its parent block element. text-align does not control the alignment of block elements itself, only their inline content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextAlign.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TextAlign.Start">
            <summary>
            The same as left if direction is left-to-right and right if direction is right-to-left.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextAlign.End">
            <summary>
            The same as right if direction is left-to-right and left if direction is right-to-left.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextAlign.Left">
            <summary>
            The inline contents are aligned to the left edge of the line box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextAlign.Right">
            <summary>
            The inline contents are aligned to the right edge of the line box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextAlign.Center">
            <summary>
            The inline contents are centered within the line box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextAlign.Justify">
            <summary>
            The text is justified. Text should line up their left and right edges to the left and right content edges of the paragraph.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextAlign.MatchParent">
            <summary>
            Similar to inherit with the difference that the value start and end are calculated according the parent's direction and are replaced by the adequate left or right value.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TextDecoration">
            <summary>
            The text-decoration CSS property is used to set the text formatting to underline, overline, line-through or blink.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecoration.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecoration.None">
            <summary>
            Produces no text decoration.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecoration.Underline">
            <summary>
            Each line of text is underlined.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecoration.Overline">
            <summary>
            Each line of text has a line above it.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecoration.LineThrough">
            <summary>
            Each line of text has a line through the middle.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TextDecorationLine">
            <summary>
            The text-decoration-line CSS property sets what kind of line decorations are added to an element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecorationLine.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecorationLine.none">
            <summary>
            Produces no text decoration.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecorationLine.Underline">
            <summary>
            Each line of text is underlined.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecorationLine.Overline">
            <summary>
            Each line of text has a line above it.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecorationLine.LineThrough">
            <summary>
            Each line of text has a line through the middle.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecorationLine.Blink">
            <summary>
            The text blinks (alternates between visible and invisible). Conforming user agents may simply not blink the text. This value is deprecated in favor of Animations.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TextDecorationStyle">
            <summary>
            The text-decoration-style CSS property defines the style of the lines specified by text-decoration-line. The style applies to all lines, there is no way to define different style for each of the line defined by text-decoration-line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecorationStyle.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecorationStyle.Solid">
            <summary>
            Draws a single line
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecorationStyle.Double">
            <summary>
            Draws a double line
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecorationStyle.Dotted">
            <summary>
            Draws a dotted line
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecorationStyle.Dashed">
            <summary>
            Draws a dashed line
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDecorationStyle.Wavy">
            <summary>
            Draws a wavy line
            </summary>
        </member>
        <member name="T:Bridge.Html5.TextOverflow">
            <summary>
            The text-overflow CSS property determines how overflowed content that is not displayed is signaled to the users. It can be clipped, or display an ellipsis ('…', U+2026 HORIZONTAL ELLIPSIS) or a Web author-defined string.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextOverflow.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TextOverflow.Clip">
            <summary>
            This keyword value indicates to truncate the text at the limit of the content area, therefore the truncation can happen in the middle of a character. To truncate at the transition between two characters, the empty string value ('') must be used. The value clip is the default for this property.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextOverflow.Ellipsis">
            <summary>
            This keyword value indicates to display an ellipsis ('…', U+2026 HORIZONTAL ELLIPSIS) to represent clipped text. The ellipsis is displayed inside the content area, decreasing the amount of text displayed. If there is not enough space to display the ellipsis, it is clipped.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TextRendering">
            <summary>
            The text-rendering CSS property provides information to the rendering engine about what to optimize for when rendering text.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextRendering.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TextRendering.Auto">
            <summary>
            The browser makes educated guesses about when to optimize for speed, legibility, and geometric precision while drawing text. For differences in how this value is interpreted by the browser, see the compatibility table.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextRendering.OptimizeSpeed">
            <summary>
            The browser emphasizes rendering speed over legibility and geometric precision when drawing text. It disables kerning and ligatures.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextRendering.OptimizeLegibility">
            <summary>
            The browser emphasizes legibility over rendering speed and geometric precision. This enables kerning and optional ligatures.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextRendering.GeometricPrecision">
            <summary>
            The browser emphasizes geometric precision over rendering speed and legibility. Certain aspects of fonts—such as kerning—don't scale linearly, so geometricPrecision can make text using those fonts look good.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TextTransform">
            <summary>
            The text-transform CSS property specifies how to capitalize an element's text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTransform.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TextTransform.Capitalize">
            <summary>
            Is a keyword forcing the first letter of each word to be converted to uppercase.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTransform.UpperCase">
            <summary>
            Is a keyword forcing all characters to be converted to uppercase.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTransform.LowerCase">
            <summary>
            Is a keyword forcing all characters to be converted to lowercase.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTransform.None">
            <summary>
            Is a keyword preventing the case of all characters to be changed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTransform.FullWidth">
            <summary>
            Is a keyword forcing the writing of a character, mainly ideograms and latin scripts inside a square, allowing them to be aligned in the usual East Asian scripts (like Chinese or Japanese).
            </summary>
        </member>
        <member name="T:Bridge.Html5.TextUnderlinePosition">
            <summary>
            The CSS text-underline-position property specifies the position of the underline which is set using the text-decoration property underline value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextUnderlinePosition.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TextUnderlinePosition.Auto">
            <summary>
            This keyword allows the browser to use an algorithm to choose between under and alphabetic.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextUnderlinePosition.Under">
            <summary>
            This keyword forces the line to be set below the alphabetic baseline, at a position where it won't cross any descender. This is useful to prevent chemical or mathematical formulas, which make a large use of subscripts, to be illegible.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextUnderlinePosition.Left">
            <summary>
            In vertical writing-modes, this keyword forces the line to be placed on the left of the characters. In horizontal writing-modes, it is a synonym of under.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextUnderlinePosition.Right">
            <summary>
            In vertical writing-modes, this keyword forces the line to be placed on the right of the characters. In horizontal writing-modes, it is a synonym of under.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TimingFunction">
            <summary>
            The CSS animation-timing-function property specifies how a CSS animation should progress over the duration of each cycle.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TimingFunction.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TimingFunction.Ease">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TimingFunction.EaseIn">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TimingFunction.EaseOut">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TimingFunction.EaseInOut">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TimingFunction.Linear">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TimingFunction.StepStart">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TimingFunction.StepEnd">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.TouchAction">
            <summary>
            Determines whether touch input may trigger default behavior supplied by the user agent, such as panning or zooming.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TouchAction.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TouchAction.Auto">
            <summary>
            The user agent MAY determine any permitted touch behaviors, such as panning and zooming manipulations of the viewport, for touches that begin on the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TouchAction.None">
            <summary>
            Touches that begin on the element MUST NOT trigger default touch behaviors.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TouchAction.PanX">
            <summary>
            The user agent MAY consider touches that begin on the element only for the purposes of horizontally scrolling the element's nearest ancestor with horizontally scrollable content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TouchAction.PanY">
            <summary>
            The user agent MAY consider touches that begin on the element only for the purposes of vertically scrolling the element's nearest ancestor with vertically scrollable content.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TransformStyle">
            <summary>
            The transform-style CSS property determines if the children of the element are positioned in the 3D-space or are flattened in the plane of the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TransformStyle.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.TransformStyle.Preserve3D">
            <summary>
            Indicates that the children of the element should be positioned in the 3D-space.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TransformStyle.Flat">
            <summary>
            Indicates that the children of the element are lying in the plane of the element itself.
            </summary>
        </member>
        <member name="T:Bridge.Html5.UnicodeBidi">
            <summary>
            The unicode-bidi CSS property together with the direction property relates to the handling of bidirectional text in a document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.UnicodeBidi.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.UnicodeBidi.Normal">
            <summary>
            The element does not offer a additional level of embedding with respect to the bidirectional algorithm. For inline elements implicit reordering works across element boundaries.
            </summary>
        </member>
        <member name="F:Bridge.Html5.UnicodeBidi.Embed">
            <summary>
            If the element is inline, this value opens an additional level of embedding with respect to the bidirectional algorithm. The direction of this embedding level is given by the direction property.
            </summary>
        </member>
        <member name="F:Bridge.Html5.UnicodeBidi.BidiOverride">
            <summary>
            For inline elements this creates an override. For block container elements this creates an override for inline-level descendants not within another block container element. This means that inside the element, reordering is strictly in sequence according to the direction property; the implicit part of the bidirectional algorithm is ignored.
            </summary>
        </member>
        <member name="F:Bridge.Html5.UnicodeBidi.Isolate">
            <summary>
            This keyword indicates that the element's container directionality should be calculated without considering the content of this element. The element is therefore isolated from its siblings. When applying its bidirectional-resolution algorithm, its container element treats it as one or several U+FFFC Object Replacement Character, i.e. like an image.
            </summary>
        </member>
        <member name="F:Bridge.Html5.UnicodeBidi.IsolateOverride">
            <summary>
            This keyword applies the isolation behavior of the isolate keyword to the surrounding content and the override behavior of the bidi-override keyword to the inner content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.UnicodeBidi.PlainText">
            <summary>
            This keyword makes the elements directionality calculated without considering its parent bidirectional state or the value of the direction property. The directionality is calculated using the P2 and P3 rules of the Unicode Bidirectional Algorithm.
            This value allows to display data which has already formatted using a tool following the Unicode Bidirectional Algorithm.
            </summary>
        </member>
        <member name="T:Bridge.Html5.VerticalAlign">
            <summary>
            The vertical-align CSS property specifies the vertical alignment of an inline or table-cell box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.VerticalAlign.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.VerticalAlign.Baseline">
            <summary>
            Aligns the baseline of the element with the baseline of its parent. The baseline of some replaced elements, like textarea is not specified by the HTML specification, meaning that their behavior with this keyword may change from one browser to the other.
            </summary>
        </member>
        <member name="F:Bridge.Html5.VerticalAlign.Sub">
            <summary>
            Aligns the baseline of the element with the subscript-baseline of its parent.
            </summary>
        </member>
        <member name="F:Bridge.Html5.VerticalAlign.Super">
            <summary>
            Aligns the baseline of the element with the superscript-baseline of its parent.
            </summary>
        </member>
        <member name="F:Bridge.Html5.VerticalAlign.TextTop">
            <summary>
            Aligns the top of the element with the top of the parent element's font.
            </summary>
        </member>
        <member name="F:Bridge.Html5.VerticalAlign.TextBottom">
            <summary>
            Aligns the bottom of the element with the bottom of the parent element's font.
            </summary>
        </member>
        <member name="F:Bridge.Html5.VerticalAlign.Middle">
            <summary>
            Aligns the middle of the element with the middle of lowercase letters in the parent.
            </summary>
        </member>
        <member name="F:Bridge.Html5.VerticalAlign.Top">
            <summary>
            Align the top of the element and its descendants with the top of the entire line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.VerticalAlign.Bottom">
            <summary>
            Align the bottom of the element and its descendants with the bottom of the entire line.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Visibility">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.Visibility.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.Visibility.Visible">
            <summary>
            Default value, the box is visible.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Visibility.Hidden">
            <summary>
            The box is invisible (fully transparent, nothing is drawn), but still affects layout.  Descendants of the element will be visible if they have visibility:visible (this doesn't work in IE up to version 7).
            </summary>
        </member>
        <member name="F:Bridge.Html5.Visibility.Collapse">
            <summary>
            For table rows, columns, column groups, and row groups the row(s) or column(s) are hidden and the space they would have occupied is removed (as if display: none were applied to the column/row of the table). However, the size of other rows and columns is still calculated as though the cells in the collapsed row(s) or column(s) are present. This was designed for fast removal of a row/column from a table without having to recalculate widths and heights for every portion of the table. For XUL elements, the computed size of the element is always zero, regardless of other styles that would normally affect the size, although margins still take effect. For other elements, collapse is treated the same as hidden.
            </summary>
        </member>
        <member name="T:Bridge.Html5.WhiteSpace">
            <summary>
            The white-space CSS property is used to to describe how whitespace inside the element is handled.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WhiteSpace.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.WhiteSpace.Normal">
            <summary>
            Sequences of whitespace are collapsed. Newline characters in the source are handled as other whitespace. Breaks lines as necessary to fill line boxes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WhiteSpace.NoWrap">
            <summary>
            Collapses whitespace as for normal, but suppresses line breaks (text wrapping) within text.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WhiteSpace.Pre">
            <summary>
            Sequences of whitespace are preserved, lines are only broken at newline characters in the source and at br elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WhiteSpace.PreWrap">
            <summary>
            Sequences of whitespace are preserved. Lines are broken at newline characters, at br, and as necessary to fill line boxes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WhiteSpace.PreLine">
            <summary>
            Sequences of whitespace are collapsed. Lines are broken at newline characters, at &lt;br&gt;, and as necessary to fill line boxes.
            </summary>
        </member>
        <member name="T:Bridge.Html5.WordBreak">
            <summary>
            The word-break CSS property is used to specify how (or if) to break lines within words.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WordBreak.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.WordBreak.Normal">
            <summary>
            Use the default line break rule.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WordBreak.BreakAll">
            <summary>
            Word breaks may be inserted between any character for non-CJK (Chinese/Japanese/Korean) text.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WordBreak.KeepAll">
            <summary>
            Don't allow word breaks for CJK text.  Non-CJK text behavior is same as normal.
            </summary>
        </member>
        <member name="T:Bridge.Html5.WordWrap">
            <summary>
            The word-wrap CSS property is used to specify whether or not the browser may break lines within words in order to prevent overflow (in other words, force wrapping) when an otherwise unbreakable string is too long to fit in its containing box.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WordWrap.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.WordWrap.Normal">
            <summary>
            Indicates that lines may only break at normal word break points.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WordWrap.BreakAll">
            <summary>
            Indicates that normally unbreakable words may be broken at arbitrary points if there are no otherwise acceptable break points in the line.
            </summary>
        </member>
        <member name="T:Bridge.Html5.WritingMode">
            <summary>
            CSS Writing Modes Level 3 defines CSS features to support various international script modes, such as left-to-right (e.g., Latin and Indic), right-to-left (e.g., Hebrew and Arabic), bidirectional (e.g., mixed Latin and Arabic) and vertical (e.g., Asian). This article is about the CSS writing-mode property.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WritingMode.Inherit">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.WritingMode.HorizontalTB">
            <summary>
            Indicates that lines may only break at normal word break points.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WritingMode.RL_TB">
            <summary>
            Content flows horizontally from right to left, vertically from top to bottom. The next horizontal line is positioned below the previous line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WritingMode.VerticalLR">
            <summary>
            Content flows vertically from top to bottom, horizontally from left to right. The next vertical line is positioned to the right of the previous line. For SVG1 documents only, use the deprecated value tb-lr.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WritingMode.VerticalRL">
            <summary>
            Content flows vertically from top to bottom, horizontally from right to left. The next vertical line is positioned to the left of the previous line. For SVG1 documents only, use the deprecated value tb or tb-rl.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WritingMode.BT_RL">
            <summary>
            Content flows vertically from bottom to top, horizontally right to left. The next vertical line is positioned to the left of the previous line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WritingMode.BT_LR">
            <summary>
            Content flows vertically from bottom to top, horizontally left to right. The next vertical line is positioned to the right of the previous line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WritingMode.LR_BT">
            <summary>
            Content flows horizontally from left to right, vertically from bottom to top. The next horizontal line is positioned above the previous line.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WritingMode.RL_BT">
            <summary>
            Content flows horizontally from right to left, vertically from bottom to top. The next horizontal line is positioned above the previous line.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Document">
            <summary>
             Each web page loaded in the browser has its own document object. The Document interface serves as an entry point to the web page's content (the DOM tree, including elements such as body and table) and provides functionality global to the document (such as obtaining the page's URL and creating new elements in the document).
            </summary>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(System.String,System.Delegate)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(System.String,System.Action)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(Bridge.Html5.EventType,System.Delegate)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(Bridge.Html5.EventType,System.Action)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(System.String,System.Action{Bridge.Html5.Event})">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event})">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(System.String,System.Delegate,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(System.String,System.Action,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(Bridge.Html5.EventType,System.Delegate,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(Bridge.Html5.EventType,System.Action,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(System.String,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(System.String,Bridge.Html5.IEventListener)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(System.String,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Document.AddEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Document.DispatchEvent(Bridge.Html5.Event)">
            <summary>
            Dispatches the specified event to the current element.
            To create an event object use the createEvent method in Firefox, Opera, Google Chrome, Safari and Internet Explorer from version 9. After the new event is created, initialize it first (for details, see the page for the createEvent method). When the event is initialized, it is ready for dispatching.
            </summary>
            <param name="e">Required. Reference to an event object to be dispatched.</param>
            <returns>Boolean that indicates whether the default action of the event was not canceled.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(System.String,Bridge.Html5.IEventListener)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(System.String,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(Bridge.Html5.EventType,System.Delegate)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(Bridge.Html5.EventType,System.Action)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(Bridge.Html5.EventType,System.Delegate,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(Bridge.Html5.EventType,System.Action,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(System.String,System.Delegate)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(System.String,System.Action)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(System.String,System.Delegate,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(System.String,System.Action,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event})">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(System.String,System.Action{Bridge.Html5.Event})">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveEventListener(System.String,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="F:Bridge.Html5.Document.BaseURI">
            <summary>
            Returns a DOMString representing the base URL. The concept of base URL changes from one language to another; in HTML, it corresponds to the protocol, the domain name and the directory structure, that is all until the last '/'.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.ChildNodes">
            <summary>
            Returns a live NodeList containing all the children of this node. NodeList being live means that if the children of the Node change, the NodeList object is automatically updated.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.FirstChild">
            <summary>
            Returns a Node representing the first direct child node of the node, or null if the node has no child.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.LastChild">
            <summary>
            Returns a Node representing the last direct child node of the node, or null if the node has no child.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.NextSibling">
            <summary>
            Returns a Node representing the next node in the tree, or null if there isn't such node.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.NodeName">
            <summary>
            Returns a DOMString containing the name of the Node. The structure of the name will differ with the name type. E.g. An HTMLElement will contain the name of the corresponding tag, like 'audio' for an HTMLAudioElement, a Text node will have the '#text' string, or a Document node will have the '#document' string.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.NodeType">
            <summary>
            Returns an unsigned short representing the type of the node.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.NodeValue">
            <summary>
            Is a DOMString representing the value of an object. For most Node type, this returns null and any set operation is ignored. For nodes of type TEXT_NODE (Text objects), COMMENT_NODE (Comment objects), and PROCESSING_INSTRUCTION_NODE (ProcessingInstruction objects), the value corresponds to the text data contained in the object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OwnerDocument">
            <summary>
            Returns the Document that this node belongs to. If no document is associated with it, returns null.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.ParentNode">
            <summary>
            Returns a Node that is the parent of this node. If there is no such node, like if this node is the top of the tree or if doesn't participate in a tree, this property returns null.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.ParentElement">
            <summary>
            Returns an Element that is the parent of this node. If the node has no parent, or if that parent is not an Element, this property returns null.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.PreviousSibling">
            <summary>
            Returns a Node representing the previous node in the tree, or null if there isn't such node.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.TextContent">
            <summary>
            Is a DOMString representing the textual content of an element and all its descendants.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Document.AppendChild(Bridge.Html5.Node)">
            <summary>
            Adds a node to the end of the list of children of a specified parent node. If the node already exists it is removed from current parent node, then added to new parent node.
            </summary>
            <param name="child">child is the node to append underneath element. Also returned.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.CloneNode">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <returns>The new node that will be a clone of this node</returns>
        </member>
        <member name="M:Bridge.Html5.Document.CloneNode(System.Boolean)">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <param name="deep">true if the children of the node should also be cloned, or false to clone only the specified node.</param>
            <returns>The new node that will be a clone of this node</returns>
        </member>
        <member name="M:Bridge.Html5.Document.CompareDocumentPosition(Bridge.Html5.Node)">
            <summary>
            Compares the position of the current node against another node in any other document.
            </summary>
            <param name="node">is the node that's being compared against.</param>
            <returns>The return value is computed as the relationship that otherNode has with node.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.Contains(Bridge.Html5.Node)">
            <summary>
            Indicates whether a node is a descendant of a given node.
            </summary>
            <param name="node">is the node that's being compared against.</param>
            <returns>The return value is true if otherNode is a descendant of node, or node itself. Otherwise the return value is false.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.HasChildNodes">
            <summary>
             returns a Boolean value indicating whether the current Node has child nodes or not.
            </summary>
            <returns>Boolean value indicating whether the current Node has child nodes or not</returns>
        </member>
        <member name="M:Bridge.Html5.Document.InsertBefore(Bridge.Html5.Node,Bridge.Html5.Node)">
            <summary>
            Inserts the specified node before a reference element as a child of the current node.
            </summary>
            <param name="newElement">The node to insert.</param>
            <param name="referenceElement">The node before which newElement is inserted.</param>
            <returns>The node being inserted, that is newElement</returns>
        </member>
        <member name="M:Bridge.Html5.Document.IsDefaultNamespace(System.String)">
            <summary>
            Accepts a namespace URI as an argument and returns true if the namespace is the default namespace on the given node or false if not.
            </summary>
            <param name="namespaceURI">string representing the namespace against which the element will be checked.</param>
            <returns>holds the return value true or false.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.IsEqualNode(Bridge.Html5.Node)">
            <summary>
            Tests whether two nodes are equal.
            </summary>
            <param name="node">The node to compare equality with.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.Normalize">
            <summary>
            Clean up all the text nodes under this element (merge adjacent, remove empty).
            </summary>
        </member>
        <member name="M:Bridge.Html5.Document.RemoveChild(Bridge.Html5.Node)">
            <summary>
            Removes a child node from the DOM. Returns removed node.
            </summary>
            <param name="child">child node to be removed from the DOM.</param>
            <returns>Reference to the removed child node</returns>
        </member>
        <member name="M:Bridge.Html5.Document.ReplaceChild(Bridge.Html5.Node,Bridge.Html5.Node)">
            <summary>
            Replaces one child node of the specified element with another.
            </summary>
            <param name="newChild">new node to replace oldChild. If it already exists in the DOM, it is first removed.</param>
            <param name="oldChild">the existing child to be replaced.</param>
            <returns>the replaced node. This is the same node as oldChild.</returns>
        </member>
        <member name="F:Bridge.Html5.Document.ChildElementCount">
            <summary>
            The number of child nodes that are elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Children">
            <summary>
            All child elements of an element as a collection.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.FirstElementChild">
            <summary>
            The ParentNode.firstElementChild read-only property returns the object's first child Element, or null if there are no child elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.LastElementChild">
            <summary>
            The ParentNode.lastElementChild read-only method returns the object's last child Element or null if there are no child elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnCopy">
            <summary>
            The oncopy property returns the onCopy event handler code on the current element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnCut">
            <summary>
            Returns the event handling code for the cut event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnPaste">
            <summary>
            Returns the event handling code for the paste event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnWheel">
            <summary>
            Returns the event handling code for the wheel event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnAbort">
            <summary>
             EventHandler representing the code to be called when the abort event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnBlur">
            <summary>
            EventHandler representing the code to be called when the blur event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnError">
            <summary>
            OnErrorEventHandler representing the code to be called when the error event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnFocus">
            <summary>
            EventHandler representing the code to be called when the focus event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnCancel">
            <summary>
            EventHandler representing the code to be called when the cancel event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnCanPlay">
            <summary>
            EventHandler representing the code to be called when the canplay event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnCanPlayThrough">
            <summary>
            EventHandler representing the code to be called when the canplaythrough event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnChange">
            <summary>
            EventHandler representing the code to be called when the change event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnClick">
            <summary>
            EventHandler representing the code to be called when the click event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnClose">
            <summary>
            EventHandler representing the code to be called when the close event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnContextMenu">
            <summary>
            EventHandler representing the code to be called when the contextmenu event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnCueChange">
            <summary>
            EventHandler representing the code to be called when the cuechange event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnDblClick">
            <summary>
            EventHandler representing the code to be called when the dblclick event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnDrag">
            <summary>
            EventHandler representing the code to be called when the drag event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnDragEnd">
            <summary>
            Is an EventHandler representing the code to be called when the dragend event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnDragEnter">
            <summary>
            Is an EventHandler representing the code to be called when the dragenter event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnDragExit">
            <summary>
            Is an EventHandler representing the code to be called when the dragexit event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnDragLeave">
            <summary>
            Is an EventHandler representing the code to be called when the dragleave event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnDragOver">
            <summary>
            Is an EventHandler representing the code to be called when the dragover event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnDragStart">
            <summary>
            Is an EventHandler representing the code to be called when the dragstart event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnDrop">
            <summary>
            Is an EventHandler representing the code to be called when the drop event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnDurationChange">
            <summary>
            Is an EventHandler representing the code to be called when the durationchange event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnEmptied">
            <summary>
            Is an EventHandler representing the code to be called when the emptied event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnEnded">
            <summary>
            Is an EventHandler representing the code to be called when the ended event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnInput">
            <summary>
            Is an EventHandler representing the code to be called when the input event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnInvalid">
            <summary>
            Is an EventHandler representing the code to be called when the invalid event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnKeyDown">
            <summary>
            Is an EventHandler representing the code to be called when the keydown event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnKeyPress">
            <summary>
            Is an EventHandler representing the code to be called when the keypress event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnKeyUp">
            <summary>
            Is an EventHandler representing the code to be called when the keyup event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnLoad">
            <summary>
            Is an EventHandler representing the code to be called when the load event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnLoadedData">
            <summary>
            Is an EventHandler representing the code to be called when the loadeddata event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnLoadedMetaData">
            <summary>
            Is an EventHandler representing the code to be called when the loadedmetadata event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnLoadStart">
            <summary>
            Is an EventHandler representing the code to be called when the loadstart event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnMouseDown">
            <summary>
            Is an EventHandler representing the code to be called when the mousedown event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnMouseEnter">
            <summary>
            Is an EventHandler representing the code to be called when the mouseenter event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnMouseLeave">
            <summary>
            Is an EventHandler representing the code to be called when the mouseleave event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnMouseMove">
            <summary>
            Is an EventHandler representing the code to be called when the mousemove event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnMouseOut">
            <summary>
            Is an EventHandler representing the code to be called when the mouseout event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnMouseOver">
            <summary>
            Is an EventHandler representing the code to be called when the mouseover event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnMouseUp">
            <summary>
            Is an EventHandler representing the code to be called when the mouseup event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnMouseWheel">
            <summary>
            Is an EventHandler representing the code to be called when the mousewheel event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnPause">
            <summary>
            Is an EventHandler representing the code to be called when the pause event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnPlay">
            <summary>
            Is an EventHandler representing the code to be called when the play event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnPlaying">
            <summary>
            Is an EventHandler representing the code to be called when the playing event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnProgress">
            <summary>
            Is an EventHandler representing the code to be called when the progress event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnRateChange">
            <summary>
            Is an EventHandler representing the code to be called when the ratechange event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnReset">
            <summary>
            Is an EventHandler representing the code to be called when the reset event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnScroll">
            <summary>
            Is an EventHandler representing the code to be called when the scroll event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnSeeked">
            <summary>
            Is an EventHandler representing the code to be called when the seeked event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnSeeking">
            <summary>
            Is an EventHandler representing the code to be called when the seeking event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnSelect">
            <summary>
            Is an EventHandler representing the code to be called when the select event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnShow">
            <summary>
            Is an EventHandler representing the code to be called when the show event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnSort">
            <summary>
            Is an EventHandler representing the code to be called when the sort event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnStalled">
            <summary>
            Is an EventHandler representing the code to be called when the stalled event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnSubmit">
            <summary>
            Is an EventHandler representing the code to be called when the submit event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnSuspend">
            <summary>
            Is an EventHandler representing the code to be called when the suspend event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnTimeUpdate">
            <summary>
            Is an EventHandler representing the code to be called when the timeupdate event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnVolumeChange">
            <summary>
            Is an EventHandler representing the code to be called when the volumechange event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnWaiting">
            <summary>
            Is an EventHandler representing the code to be called when the waiting event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Async">
            <summary>
            document.async can be set to indicate whether a document.load call should be an asynchronous or synchronous request. true is the default value, indicating that documents should be loaded asynchronously.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.CharacterSet">
            <summary>
            Returns the character encoding of the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.CompatMode">
            <summary>
            Indicates whether the document is rendered in Quirks mode or Strict mode.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.ContentType">
            <summary>
            Returns the MIME type that the document is being rendered as.  This may come from HTTP headers or other sources of MIME information, and might be affected by automatic type conversions performed by either the browser or extensions.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Doctype">
            <summary>
            Returns the Document Type Declaration (DTD) associated with current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.DocumentElement">
            <summary>
            Returns the Element that is the root element of the document (for example, the &lt;html&gt; element for HTML documents).
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.DocumentURI">
            <summary>
            Returns the document location as string.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Implementation">
            <summary>
            Returns a DOMImplementation object associated with the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.LastStyleSheetSet">
            <summary>
            Returns the last enabled style sheet set; this property's value changes whenever the document.selectedStyleSheetSet property is changed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.PreferredStyleSheetSet">
            <summary>
            Returns the preferred style sheet set as set by the page author.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.SelectedStyleSheetSet">
            <summary>
            Indicates the name of the style sheet set that's currently in use.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.StyleSheets">
            <summary>
            The Document.styleSheets read-only property returns a StyleSheetList of StyleSheet objects for stylesheets explicitly linked into or embedded in a document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.StyleSheetSets">
            <summary>
            Returns a live list of all of the currently-available style sheet sets.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.ActiveElement">
            <summary>
            Returns the currently focused element, that is, the element that will get keystroke events if the user types any.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.AlinkColor">
            <summary>
            Returns or sets the color of an active link in the document body. A link is active during the time between mousedown and mouseup events.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Anchors">
            <summary>
            Returns a list of all of the anchors in the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Applets">
            <summary>
            Returns an ordered list of the applets within a document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.BgColor">
            <summary>
            Gets/sets the background color of the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Body">
            <summary>
            Returns the body or frameset node of the current document, or null if no such element exists.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Cookie">
            <summary>
            Get and set the cookies associated with the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.DefaultView">
            <summary>
            In browsers returns the window object associated with the document or null if none available.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.DesignMode">
            <summary>
            Gets/sets the ability to edit the whole document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Dir">
            <summary>
            Gets/sets directionality (rtl/ltr) of the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Domain">
            <summary>
            Gets/sets the domain portion of the origin of the current document, as used by the same origin policy.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Embeds">
            <summary>
            Returns a list of the embedded OBJECTS within the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.FgColor">
            <summary>
            Gets/sets the foreground color, or text color, of the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Forms">
            <summary>
            Returns a list of the form elements within the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Head">
            <summary>
            Returns the head element of the current document. If there are more than one head elements, the first one is returned.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Images">
            <summary>
            Returns a list of the images in the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.LastModified">
            <summary>
            Returns a string containing the date and time on which the current document was last modified.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.LinkColor">
            <summary>
            Gets/sets the color of hyperlinks in the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Links">
            <summary>
            Returns a list of all the hyperlinks in the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Location">
            <summary>
            The Document.location read-only property returns a Location object, which contains information about the URL of the document and provides methods for changing that URL and load another URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Plugins">
            <summary>
            Returns an HTMLCollection object containing one or more HTMLEmbedElements or null which represent the embed elements in the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.ReadyState">
            <summary>
            Returns loading status of the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Referrer">
            <summary>
            Returns the URI of the page that linked to this page.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Scripts">
            <summary>
            Returns all the script elements on the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.Title">
            <summary>
            Returns the title of the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.URL">
            <summary>
            Returns a string containing the URL of the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.VlinkColor">
            <summary>
            Gets/sets the color of hyperlinks in the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Document.OnReadyStateChange">
            <summary>
            Returns the event handling code for the readystatechange event.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Document.AdoptNode(Bridge.Html5.Node)">
            <summary>
            Adopts a node from an external document. The node and its subtree is removed from the document it's in (if any), and its ownerDocument is changed to the current document. The node can then be inserted into the current document.
            </summary>
            <param name="externalNode">the node from another document to be adopted.</param>
            <returns>the adopted node that can be used in the current document. The new node's parentNode is null, since it has not yet been inserted into the document tree.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.CaretPositionFromPoint(System.Double,System.Double)">
            <summary>
            This method is used to retrieve the caret position in a document based on two coordinates. A CaretPosition is returned, containing the found DOM node and the character offset in that node.
            </summary>
            <param name="x">Horizontal point on the page at where to determine the caret position.</param>
            <param name="y">Vertical point on the page at where to determine the caret position.</param>
            <returns>A CaretPosition. Null, if x or y are negative or greater than the viewport.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.CaretRangeFromPoint(System.Double,System.Double)">
            <summary>
            This method is used to retrieve the caret position in a document based on two coordinates. A Range is returned, containing the found DOM node and the character offset in that node.
            </summary>
            <param name="x">Horizontal point on the page at where to determine the caret position.</param>
            <param name="y">Vertical point on the page at where to determine the caret position.</param>
            <returns>A Range. Null, if x or y are negative or greater than the viewport.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateAttribute(System.String)">
            <summary>
            Creates a new Attr object and returns it.
            </summary>
            <param name="name">name is a string containing the name of the attribute.</param>
            <returns>an attribute node</returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateAttributeNS(System.String,System.String)">
            <summary>
            Creates a new attribute node in a given namespace and returns it.
            </summary>
            <param name="namespace"></param>
            <param name="name">name is a string containing the name of the attribute.</param>
            <returns>an attribute node</returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateCDATASection(System.String)">
            <summary>
            Creates a new CDATA node and returns it.
            </summary>
            <param name="data">string containing the data to be added to the CDATA Section.</param>
            <returns>CDATA Section node.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateComment(System.String)">
            <summary>
            Creates a new comment node and returns it.
            </summary>
            <param name="comment">string containing the data to be added to the Comment.</param>
            <returns>Comment node.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateDocumentFragment">
            <summary>
            Creates a new document fragment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateElement(System.String)">
            <summary>
            In an HTML document creates the specified HTML element or HTMLUnknownElement if the element is not known.
            In a XUL document creates the specified XUL element.
            In other documents creates an element with a null namespaceURI.
            </summary>
            <param name="tagName">tagName is a string that specifies the type of element to be created. The nodeName of the created element is initialized with the value of tagName. Don't use qualified names (like "html:a") with this method.</param>
            <returns>created element object</returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateElement``1(System.String)">
            <summary>
            In an HTML document creates the specified HTML element or HTMLUnknownElement if the element is not known.
            In a XUL document creates the specified XUL element.
            In other documents creates an element with a null namespaceURI.
            </summary>
            <param name="tagName">tagName is a string that specifies the type of element to be created. The nodeName of the created element is initialized with the value of tagName. Don't use qualified names (like "html:a") with this method.</param>
            <returns>created element object</returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateElementNS(System.String,System.String)">
            <summary>
            Creates an element with the specified namespace URI and qualified name.
            </summary>
            <param name="namespaceURI"> a string that specifies the namespace URI to associate with the element. The namespaceURI property of the created element is initialized with the value of namespaceURI. (see section below for "Valid Namespace URI's")</param>
            <param name="qualifiedName">a string that specifies the type of element to be created. The nodeName property of the created element is initialized with the value of qualifiedName</param>
            <returns>the created element.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateElementNS``1(System.String,System.String)">
            <summary>
            Creates an element with the specified namespace URI and qualified name.
            </summary>
            <param name="namespaceURI"> a string that specifies the namespace URI to associate with the element. The namespaceURI property of the created element is initialized with the value of namespaceURI. (see section below for "Valid Namespace URI's")</param>
            <param name="qualifiedName">a string that specifies the type of element to be created. The nodeName property of the created element is initialized with the value of qualifiedName</param>
            <returns>the created element.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateEvent(System.String)">
            <summary>
            Creates an event of the type specified. The returned object should be first initialized and can then be passed to element.dispatchEvent.
            </summary>
            <param name="type">type is a string that represents the type of event to be created. Possible event types include "UIEvents", "MouseEvents", "MutationEvents", and "HTMLEvents".</param>
            <returns>the created Event object.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateEvent``1(System.String)">
            <summary>
            Creates an event of the type specified. The returned object should be first initialized and can then be passed to element.dispatchEvent.
            </summary>
            <param name="type">type is a string that represents the type of event to be created. Possible event types include "UIEvents", "MouseEvents", "MutationEvents", and "HTMLEvents".</param>
            <returns>the created Event object.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateNodeIterator(Bridge.Html5.Node)">
            <summary>
            Returns a new NodeIterator object.
            </summary>
            <param name="root">The root node at which to begin the NodeIterator's traversal.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateNodeIterator(Bridge.Html5.Node,Bridge.Html5.NodeFilter)">
            <summary>
            Returns a new NodeIterator object.
            </summary>
            <param name="root">The root node at which to begin the NodeIterator's traversal.</param>
            <param name="whatToShow">Bitwise OR'd list of Filter specification constants from the NodeFilter DOM interface, indicating which nodes to iterate over.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateNodeIterator(Bridge.Html5.Node,Bridge.Html5.NodeFilter,Bridge.Html5.INodeFilter)">
            <summary>
            Returns a new NodeIterator object.
            </summary>
            <param name="root">The root node at which to begin the NodeIterator's traversal.</param>
            <param name="whatToShow">Bitwise OR'd list of Filter specification constants from the NodeFilter DOM interface, indicating which nodes to iterate over.</param>
            <param name="filter">An object implementing the NodeFilter interface; its acceptNode() method will be called for each node in the subtree based at root which is accepted as included by the whatToShow flag to determine whether or not to include it in the list of iterable nodes (a simple callback function may also be used instead). The method should return one of NodeFilter.FILTER_ACCEPT, NodeFilter.FILTER_REJECT, or NodeFilter.FILTER_SKIP.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateProcessingInstruction(System.String,System.String)">
            <summary>
            Creates a new ProcessingInstruction object.
            </summary>
            <param name="target"> refers to the target part of the processing instruction node</param>
            <param name="data">string containing the data to be added to the data within the node.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateRange">
            <summary>
            Returns a new Range object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateTextNode(System.String)">
            <summary>
            Creates a new Text node.
            </summary>
            <param name="data">string containing the data to be put in the text node.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateTreeWalker(Bridge.Html5.Node)">
            <summary>
            The Document.createTreeWalker() creator method returns a newly created TreeWalker object.
            </summary>
            <param name="root">Is the root Node of this TreeWalker traversal. Typically this will be an element owned by the document.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateTreeWalker(Bridge.Html5.Node,Bridge.Html5.NodeFilter)">
            <summary>
            The Document.createTreeWalker() creator method returns a newly created TreeWalker object.
            </summary>
            <param name="root">Is the root Node of this TreeWalker traversal. Typically this will be an element owned by the document.</param>
            <param name="whatToShow">Is an optionale unsigned int representing a bitmask created by combining the constant properties of NodeFilter. It is a convenient way of filtering for certain types of node. It defaults to 0xFFFFFFFF representing the SHOW_ALL constant.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.CreateTreeWalker(Bridge.Html5.Node,Bridge.Html5.NodeFilter,Bridge.Html5.INodeFilter)">
            <summary>
            The Document.createTreeWalker() creator method returns a newly created TreeWalker object.
            </summary>
            <param name="root">Is the root Node of this TreeWalker traversal. Typically this will be an element owned by the document.</param>
            <param name="whatToShow">Is an optionale unsigned int representing a bitmask created by combining the constant properties of NodeFilter. It is a convenient way of filtering for certain types of node. It defaults to 0xFFFFFFFF representing the SHOW_ALL constant.</param>
            <param name="filter">Is an optional NodeFilter, that is an object with a method acceptNode, which is called by the TreeWalker to determine whether or not to accept a node that has passed the whatToShow check.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.ElementFromPoint(System.Int32,System.Int32)">
            <summary>
            Returns the element from the document whose elementFromPoint method is being called which is the topmost element which lies under the given point.  To get an element, specify the point via coordinates, in CSS pixels, relative to the upper-left-most point in the window or frame containing the document.
            </summary>
            <param name="x">x and y specify the coordinates to check, in CSS pixels relative to the upper-left corner of the document's containing window or frame.</param>
            <param name="y">x and y specify the coordinates to check, in CSS pixels relative to the upper-left corner of the document's containing window or frame.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.EnableStyleSheetsForSet(System.String)">
            <summary>
            Enables the style sheets matching the specified name in the current style sheet set, and disables all other style sheets (except those without a title, which are always enabled).
            </summary>
            <param name="name">The name of the style sheets to enable. All style sheets with a title that match this name will be enabled, while all others that have a title will be disabled. Specify an empty string for the name parameter to disable all alternate and preferred style sheets (but not the persistent style sheets; that is, those with no title attribute).</param>
        </member>
        <member name="M:Bridge.Html5.Document.ExitPointerLock">
            <summary>
            The exitPointerLock asynchronously releases a pointer lock previously requested through Element.requestPointerLock.
            To track the success or failure of the request, it is necessary to listen for the pointerlockchange and pointerlockerror events.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Document.GetElementsByClassName(System.String)">
            <summary>
            Returns an array-like object of all child elements which have all of the given class names. When called on the document object, the complete document is searched, including the root node. You may also call getElementsByClassName() on any element; it will return only elements which are descendants of the specified root element with the given class names.
            </summary>
            <param name="names">string representing the list of class names to match; class names are separated by whitespace</param>
            <returns>HTMLCollection of found elements.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.GetElementsByTagName(System.String)">
            <summary>
            Returns an HTMLCollection of elements with the given tag name. The complete document is searched, including the root node. The returned HTMLCollection is live, meaning that it updates itself automatically to stay in sync with the DOM tree without having to call document.getElementsByTagName() again.
            </summary>
            <param name="name">a string representing the name of the elements. The special string "*" represents all elements.</param>
            <returns> a live HTMLCollection of found elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.GetElementsByTagNameNS(System.String,System.String)">
            <summary>
            Returns a list of elements with the given tag name belonging to the given namespace. The complete document is searched, including the root node.
            </summary>
            <param name="namespace"> the namespace URI of elements to look for.</param>
            <param name="name"> the local name of elements to look for or the special value "*", which matches all elements</param>
            <returns>live NodeList of found elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.ImportNode(Bridge.Html5.Node)">
            <summary>
            Creates a copy of a node from an external document that can be inserted into the current document.
            </summary>
            <param name="externalNode">The node from another document to be imported.</param>
            <returns>The new node that is imported into the document. The new node's parentNode is null, since it has not yet been inserted into the document tree.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.ImportNode(Bridge.Html5.Node,System.Boolean)">
            <summary>
            Creates a copy of a node from an external document that can be inserted into the current document.
            </summary>
            <param name="externalNode">The node from another document to be imported.</param>
            <param name="deep">A boolean, indicating whether the descendants of the imported node need to be imported.</param>
            <returns>The new node that is imported into the document. The new node's parentNode is null, since it has not yet been inserted into the document tree.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.ReleaseCapture">
            <summary>
            Releases mouse capture if it's currently enabled on an element within this document. Enabling mouse capture on an element is done by calling element.setCapture().
            </summary>
        </member>
        <member name="M:Bridge.Html5.Document.GetElementById(System.String)">
            <summary>
            Returns a reference to the element by its ID.
            </summary>
            <param name="id">id is a case-sensitive string representing the unique ID of the element being sought.</param>
            <returns>element is a reference to an Element object, or null if an element with the specified ID is not in the document.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.GetElementById``1(System.String)">
            <summary>
            Returns a reference to the element by its ID.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">id is a case-sensitive string representing the unique ID of the element being sought.</param>
            <returns>element is a reference to an Element object, or null if an element with the specified ID is not in the document.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.QuerySelector(System.String)">
            <summary>
            Returns the first element within the document (using depth-first pre-order traversal of the document's nodes) that matches the specified group of selectors.
            </summary>
            <param name="selectors">selectors is a string containing one or more CSS selectors separated by commas.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.QuerySelector``1(System.String)">
            <summary>
            Returns the first element within the document (using depth-first pre-order traversal of the document's nodes) that matches the specified group of selectors.
            </summary>
            <param name="selectors">selectors is a string containing one or more CSS selectors separated by commas.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.QuerySelectorAll(System.String)">
            <summary>
            Returns a list of the elements within the document (using depth-first pre-order traversal of the document's nodes) that match the specified group of selectors. The object returned is a NodeList.
            </summary>
            <param name="selectors">selectors is a string containing one or more CSS selectors separated by commas.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.Close">
            <summary>
            Closes a document stream for writing.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Document.ExecCommand(System.String)">
            <summary>
            When an HTML document has been switched to designMode, the document object exposes the execCommand method which allows one to run commands to manipulate the contents of the editable region. Most commands affect the document's selection (bold, italics, etc), while others insert new elements (adding a link) or affect an entire line (indenting). When using contentEditable, calling execCommand will affect the currently active editable element.
            </summary>
            <param name="commandName">the name of the command</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.ExecCommand(System.String,System.Boolean)">
            <summary>
            When an HTML document has been switched to designMode, the document object exposes the execCommand method which allows one to run commands to manipulate the contents of the editable region. Most commands affect the document's selection (bold, italics, etc), while others insert new elements (adding a link) or affect an entire line (indenting). When using contentEditable, calling execCommand will affect the currently active editable element.
            </summary>
            <param name="commandName">the name of the command</param>
            <param name="showDefaultUI">whether the default user interface should be shown. This is not implemented in Mozilla.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.ExecCommand(System.String,System.Boolean,System.String)">
            <summary>
            When an HTML document has been switched to designMode, the document object exposes the execCommand method which allows one to run commands to manipulate the contents of the editable region. Most commands affect the document's selection (bold, italics, etc), while others insert new elements (adding a link) or affect an entire line (indenting). When using contentEditable, calling execCommand will affect the currently active editable element.
            </summary>
            <param name="commandName">the name of the command</param>
            <param name="showDefaultUI">whether the default user interface should be shown. This is not implemented in Mozilla.</param>
            <param name="valueArgument">some commands (such as insertimage) require an extra value argument (the image's url). Pass an argument of null if no argument is needed.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.GetElementsByName(System.String)">
            <summary>
            Returns a list of elements with a given name in the (X)HTML document.
            </summary>
            <param name="name">name is the value of the name attribute of the element.</param>
            <returns>elements is an HTMLCollection of elements.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.GetSelection">
            <summary>
            The DOM getSelection() method is available on the Window and Document interfaces.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.HasFocus">
            <summary>
            Returns a Boolean value indicating whether the document or any element inside the document has focus. This method can be used to determine whether the active element in a document has focus.
            </summary>
            <returns>false if the active element in the document has no focus; true if the active element in the document has focus.</returns>
        </member>
        <member name="M:Bridge.Html5.Document.Open">
            <summary>
            Opens a document stream for writing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.QueryCommandEnabled(System.String)">
            <summary>
            Returns true if the formating command can be executed on the current range.
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.QueryCommandIndeterm(System.String)">
            <summary>
            Returns true if the formating command is in an indeterminate state on the current range.
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.QueryCommandState(System.String)">
            <summary>
            Returns true if the formating command has been executed on the current range.
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.QueryCommandSupported(System.String)">
            <summary>
            Returns true if the formating command is supported on the current range.
            </summary>
            <param name="command">The command for which to determine support.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.QueryCommandValue(System.String)">
            <summary>
            Returns the current value of the current range for a formating command.
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Document.Write(System.String)">
            <summary>
            Writes a string of text to a document stream opened by document.open().
            </summary>
            <param name="markup">markup is a string containing the text to be written to the document.</param>
        </member>
        <member name="M:Bridge.Html5.Document.Writeln(System.String)">
            <summary>
            Writes a string of text followed by a newline character to a document.
            </summary>
            <param name="line">line is string containing a line of text.</param>
        </member>
        <member name="F:Bridge.Html5.DocumentFragment.Children">
            <summary>
            Returns a live HTMLCollection containing all objects of type Node that are children of the DocumentFragment object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentFragment.FirstElementChild">
            <summary>
            Returns the Element that is the first child of the DocumentFragment object, or null if there is none.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentFragment.LastElementChild">
            <summary>
            Returns the Element that is the last child of the DocumentFragment object, or null if there is none.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentFragment.ChildElementCount">
            <summary>
            Returns an unsigned long giving the amount of children that the DocumentFragment has.
            </summary>
        </member>
        <member name="M:Bridge.Html5.DocumentFragment.QuerySelector(System.String)">
            <summary>
            Returns the first Element node within the DocumentFragment, in document order, that matches the specified selectors.
            </summary>
            <param name="selectors">String containing one or more CSS selectors separated by commas.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentFragment.QuerySelector``1(System.String)">
            <summary>
            Returns the first Element node within the DocumentFragment, in document order, that matches the specified selectors.
            </summary>
            <param name="selectors">selectors is a string containing one or more CSS selectors separated by commas.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentFragment.QuerySelectorAll(System.String)">
            <summary>
            Returns a NodeList of all the Element nodes within the DocumentFragment that match the specified selectors.
            </summary>
            <param name="selectors">String containing one or more CSS selectors separated by commas.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentFragment.GetElementById(System.String)">
            <summary>
            Returns the first Element node within the DocumentFragment, in document order, that matches the specified ID.
            </summary>
            <param name="elementId"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentFragment.GetElementById``1(System.String)">
            <summary>
            Returns the first Element node within the DocumentFragment, in document order, that matches the specified ID.
            </summary>
            <param name="id">id is a case-sensitive string representing the unique ID of the element being sought.</param>
            <returns>element is a reference to an Element object, or null if an element with the specified ID is not in the document.</returns>
        </member>
        <member name="T:Bridge.Html5.DocumentInstance">
            <summary>
            Each web page loaded in the browser has its own document object. The Document interface serves as an entry point to the web page's content (the DOM tree, including elements such as body and table) and provides functionality global to the document (such as obtaining the page's URL and creating new elements in the document).
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.ChildElementCount">
            <summary>
            The number of child nodes that are elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Children">
            <summary>
            All child elements of an element as a collection.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.FirstElementChild">
            <summary>
            The ParentNode.firstElementChild read-only property returns the object's first child Element, or null if there are no child elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.LastElementChild">
            <summary>
            The ParentNode.lastElementChild read-only method returns the object's last child Element or null if there are no child elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnCopy">
            <summary>
            The oncopy property returns the onCopy event handler code on the current element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnCut">
            <summary>
            Returns the event handling code for the cut event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnPaste">
            <summary>
            Returns the event handling code for the paste event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnWheel">
            <summary>
            Returns the event handling code for the wheel event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnAbort">
            <summary>
             EventHandler representing the code to be called when the abort event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnBlur">
            <summary>
            EventHandler representing the code to be called when the blur event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnError">
            <summary>
            OnErrorEventHandler representing the code to be called when the error event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnFocus">
            <summary>
            EventHandler representing the code to be called when the focus event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnCancel">
            <summary>
            EventHandler representing the code to be called when the cancel event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnCanPlay">
            <summary>
            EventHandler representing the code to be called when the canplay event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnCanPlayThrough">
            <summary>
            EventHandler representing the code to be called when the canplaythrough event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnChange">
            <summary>
            EventHandler representing the code to be called when the change event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnClick">
            <summary>
            EventHandler representing the code to be called when the click event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnClose">
            <summary>
            EventHandler representing the code to be called when the close event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnContextMenu">
            <summary>
            EventHandler representing the code to be called when the contextmenu event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnCueChange">
            <summary>
            EventHandler representing the code to be called when the cuechange event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnDblClick">
            <summary>
            EventHandler representing the code to be called when the dblclick event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnDrag">
            <summary>
            EventHandler representing the code to be called when the drag event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnDragEnd">
            <summary>
            Is an EventHandler representing the code to be called when the dragend event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnDragEnter">
            <summary>
            Is an EventHandler representing the code to be called when the dragenter event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnDragExit">
            <summary>
            Is an EventHandler representing the code to be called when the dragexit event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnDragLeave">
            <summary>
            Is an EventHandler representing the code to be called when the dragleave event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnDragOver">
            <summary>
            Is an EventHandler representing the code to be called when the dragover event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnDragStart">
            <summary>
            Is an EventHandler representing the code to be called when the dragstart event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnDrop">
            <summary>
            Is an EventHandler representing the code to be called when the drop event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnDurationChange">
            <summary>
            Is an EventHandler representing the code to be called when the durationchange event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnEmptied">
            <summary>
            Is an EventHandler representing the code to be called when the emptied event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnEnded">
            <summary>
            Is an EventHandler representing the code to be called when the ended event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnInput">
            <summary>
            Is an EventHandler representing the code to be called when the input event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnInvalid">
            <summary>
            Is an EventHandler representing the code to be called when the invalid event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnKeyDown">
            <summary>
            Is an EventHandler representing the code to be called when the keydown event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnKeyPress">
            <summary>
            Is an EventHandler representing the code to be called when the keypress event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnKeyUp">
            <summary>
            Is an EventHandler representing the code to be called when the keyup event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnLoad">
            <summary>
            Is an EventHandler representing the code to be called when the load event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnLoadedData">
            <summary>
            Is an EventHandler representing the code to be called when the loadeddata event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnLoadedMetaData">
            <summary>
            Is an EventHandler representing the code to be called when the loadedmetadata event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnLoadStart">
            <summary>
            Is an EventHandler representing the code to be called when the loadstart event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnMouseDown">
            <summary>
            Is an EventHandler representing the code to be called when the mousedown event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnMouseEnter">
            <summary>
            Is an EventHandler representing the code to be called when the mouseenter event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnMouseLeave">
            <summary>
            Is an EventHandler representing the code to be called when the mouseleave event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnMouseMove">
            <summary>
            Is an EventHandler representing the code to be called when the mousemove event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnMouseOut">
            <summary>
            Is an EventHandler representing the code to be called when the mouseout event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnMouseOver">
            <summary>
            Is an EventHandler representing the code to be called when the mouseover event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnMouseUp">
            <summary>
            Is an EventHandler representing the code to be called when the mouseup event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnMouseWheel">
            <summary>
            Is an EventHandler representing the code to be called when the mousewheel event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnPause">
            <summary>
            Is an EventHandler representing the code to be called when the pause event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnPlay">
            <summary>
            Is an EventHandler representing the code to be called when the play event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnPlaying">
            <summary>
            Is an EventHandler representing the code to be called when the playing event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnProgress">
            <summary>
            Is an EventHandler representing the code to be called when the progress event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnRateChange">
            <summary>
            Is an EventHandler representing the code to be called when the ratechange event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnReset">
            <summary>
            Is an EventHandler representing the code to be called when the reset event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnScroll">
            <summary>
            Is an EventHandler representing the code to be called when the scroll event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnSeeked">
            <summary>
            Is an EventHandler representing the code to be called when the seeked event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnSeeking">
            <summary>
            Is an EventHandler representing the code to be called when the seeking event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnSelect">
            <summary>
            Is an EventHandler representing the code to be called when the select event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnShow">
            <summary>
            Is an EventHandler representing the code to be called when the show event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnSort">
            <summary>
            Is an EventHandler representing the code to be called when the sort event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnStalled">
            <summary>
            Is an EventHandler representing the code to be called when the stalled event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnSubmit">
            <summary>
            Is an EventHandler representing the code to be called when the submit event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnSuspend">
            <summary>
            Is an EventHandler representing the code to be called when the suspend event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnTimeUpdate">
            <summary>
            Is an EventHandler representing the code to be called when the timeupdate event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnVolumeChange">
            <summary>
            Is an EventHandler representing the code to be called when the volumechange event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnWaiting">
            <summary>
            Is an EventHandler representing the code to be called when the waiting event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Async">
            <summary>
            document.async can be set to indicate whether a document.load call should be an asynchronous or synchronous request. true is the default value, indicating that documents should be loaded asynchronously.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.CharacterSet">
            <summary>
            Returns the character encoding of the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.CompatMode">
            <summary>
            Indicates whether the document is rendered in Quirks mode or Strict mode.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.ContentType">
            <summary>
            Returns the MIME type that the document is being rendered as.  This may come from HTTP headers or other sources of MIME information, and might be affected by automatic type conversions performed by either the browser or extensions.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Doctype">
            <summary>
            Returns the Document Type Declaration (DTD) associated with current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.DocumentElement">
            <summary>
            Returns the Element that is the root element of the document (for example, the &lt;html&gt; element for HTML documents).
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.DocumentURI">
            <summary>
            Returns the document location as string.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Implementation">
            <summary>
            Returns a DOMImplementation object associated with the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.LastStyleSheetSet">
            <summary>
            Returns the last enabled style sheet set; this property's value changes whenever the document.selectedStyleSheetSet property is changed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.PreferredStyleSheetSet">
            <summary>
            Returns the preferred style sheet set as set by the page author.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.SelectedStyleSheetSet">
            <summary>
            Indicates the name of the style sheet set that's currently in use.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.StyleSheets">
            <summary>
            The Document.styleSheets read-only property returns a StyleSheetList of StyleSheet objects for stylesheets explicitly linked into or embedded in a document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.StyleSheetSets">
            <summary>
            Returns a live list of all of the currently-available style sheet sets.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.ActiveElement">
            <summary>
            Returns the currently focused element, that is, the element that will get keystroke events if the user types any.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.AlinkColor">
            <summary>
            Returns or sets the color of an active link in the document body. A link is active during the time between mousedown and mouseup events.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Anchors">
            <summary>
            Returns a list of all of the anchors in the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Applets">
            <summary>
            Returns an ordered list of the applets within a document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.BgColor">
            <summary>
            Gets/sets the background color of the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Body">
            <summary>
            Returns the body or frameset node of the current document, or null if no such element exists.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Cookie">
            <summary>
            Get and set the cookies associated with the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.DefaultView">
            <summary>
            In browsers returns the window object associated with the document or null if none available.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.DesignMode">
            <summary>
            Gets/sets the ability to edit the whole document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Dir">
            <summary>
            Gets/sets directionality (rtl/ltr) of the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Domain">
            <summary>
            Gets/sets the domain portion of the origin of the current document, as used by the same origin policy.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Embeds">
            <summary>
            Returns a list of the embedded OBJECTS within the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.FgColor">
            <summary>
            Gets/sets the foreground color, or text color, of the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Forms">
            <summary>
            Returns a list of the form elements within the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Head">
            <summary>
            Returns the head element of the current document. If there are more than one head elements, the first one is returned.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Images">
            <summary>
            Returns a list of the images in the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.LastModified">
            <summary>
            Returns a string containing the date and time on which the current document was last modified.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.LinkColor">
            <summary>
            Gets/sets the color of hyperlinks in the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Links">
            <summary>
            Returns a list of all the hyperlinks in the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Location">
            <summary>
            The Document.location read-only property returns a Location object, which contains information about the URL of the document and provides methods for changing that URL and load another URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Plugins">
            <summary>
            Returns an HTMLCollection object containing one or more HTMLEmbedElements or null which represent the embed elements in the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.ReadyState">
            <summary>
            Returns loading status of the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Referrer">
            <summary>
            Returns the URI of the page that linked to this page.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Scripts">
            <summary>
            Returns all the script elements on the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.Title">
            <summary>
            Returns the title of the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.URL">
            <summary>
            Returns a string containing the URL of the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.VlinkColor">
            <summary>
            Gets/sets the color of hyperlinks in the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentInstance.OnReadyStateChange">
            <summary>
            Returns the event handling code for the readystatechange event.
            </summary>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.AdoptNode(Bridge.Html5.Node)">
            <summary>
            Adopts a node from an external document. The node and its subtree is removed from the document it's in (if any), and its ownerDocument is changed to the current document. The node can then be inserted into the current document.
            </summary>
            <param name="externalNode">the node from another document to be adopted.</param>
            <returns>the adopted node that can be used in the current document. The new node's parentNode is null, since it has not yet been inserted into the document tree.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CaretPositionFromPoint(System.Double,System.Double)">
            <summary>
            This method is used to retrieve the caret position in a document based on two coordinates. A CaretPosition is returned, containing the found DOM node and the character offset in that node.
            </summary>
            <param name="x">Horizontal point on the page at where to determine the caret position.</param>
            <param name="y">Vertical point on the page at where to determine the caret position.</param>
            <returns>A CaretPosition. Null, if x or y are negative or greater than the viewport.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CaretRangeFromPoint(System.Double,System.Double)">
            <summary>
            This method is used to retrieve the caret position in a document based on two coordinates. A Range is returned, containing the found DOM node and the character offset in that node.
            </summary>
            <param name="x">Horizontal point on the page at where to determine the caret position.</param>
            <param name="y">Vertical point on the page at where to determine the caret position.</param>
            <returns>A Range. Null, if x or y are negative or greater than the viewport.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateAttribute(System.String)">
            <summary>
            Creates a new Attr object and returns it.
            </summary>
            <param name="name">name is a string containing the name of the attribute.</param>
            <returns>an attribute node</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateAttributeNS(System.String,System.String)">
            <summary>
            Creates a new attribute node in a given namespace and returns it.
            </summary>
            <param name="namespace"></param>
            <param name="name">name is a string containing the name of the attribute.</param>
            <returns>an attribute node</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateCDATASection(System.String)">
            <summary>
            Creates a new CDATA node and returns it.
            </summary>
            <param name="data">string containing the data to be added to the CDATA Section.</param>
            <returns>CDATA Section node.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateComment(System.String)">
            <summary>
            Creates a new comment node and returns it.
            </summary>
            <param name="comment">string containing the data to be added to the Comment.</param>
            <returns>Comment node.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateDocumentFragment">
            <summary>
            Creates a new document fragment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateElement(System.String)">
            <summary>
            In an HTML document creates the specified HTML element or HTMLUnknownElement if the element is not known.
            In a XUL document creates the specified XUL element.
            In other documents creates an element with a null namespaceURI.
            </summary>
            <param name="tagName">tagName is a string that specifies the type of element to be created. The nodeName of the created element is initialized with the value of tagName. Don't use qualified names (like "html:a") with this method.</param>
            <returns>created element object</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateElement``1(System.String)">
            <summary>
            In an HTML document creates the specified HTML element or HTMLUnknownElement if the element is not known.
            In a XUL document creates the specified XUL element.
            In other documents creates an element with a null namespaceURI.
            </summary>
            <param name="tagName">tagName is a string that specifies the type of element to be created. The nodeName of the created element is initialized with the value of tagName. Don't use qualified names (like "html:a") with this method.</param>
            <returns>created element object</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateElementNS(System.String,System.String)">
            <summary>
            Creates an element with the specified namespace URI and qualified name.
            </summary>
            <param name="namespaceURI"> a string that specifies the namespace URI to associate with the element. The namespaceURI property of the created element is initialized with the value of namespaceURI. (see section below for "Valid Namespace URI's")</param>
            <param name="qualifiedName">a string that specifies the type of element to be created. The nodeName property of the created element is initialized with the value of qualifiedName</param>
            <returns>the created element.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateElementNS``1(System.String,System.String)">
            <summary>
            Creates an element with the specified namespace URI and qualified name.
            </summary>
            <param name="namespaceURI"> a string that specifies the namespace URI to associate with the element. The namespaceURI property of the created element is initialized with the value of namespaceURI. (see section below for "Valid Namespace URI's")</param>
            <param name="qualifiedName">a string that specifies the type of element to be created. The nodeName property of the created element is initialized with the value of qualifiedName</param>
            <returns>the created element.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateEvent(System.String)">
            <summary>
            Creates an event of the type specified. The returned object should be first initialized and can then be passed to element.dispatchEvent.
            </summary>
            <param name="type">type is a string that represents the type of event to be created. Possible event types include "UIEvents", "MouseEvents", "MutationEvents", and "HTMLEvents".</param>
            <returns>the created Event object.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateEvent``1(System.String)">
            <summary>
            Creates an event of the type specified. The returned object should be first initialized and can then be passed to element.dispatchEvent.
            </summary>
            <param name="type">type is a string that represents the type of event to be created. Possible event types include "UIEvents", "MouseEvents", "MutationEvents", and "HTMLEvents".</param>
            <returns>the created Event object.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateNodeIterator(Bridge.Html5.Node)">
            <summary>
            Returns a new NodeIterator object.
            </summary>
            <param name="root">The root node at which to begin the NodeIterator's traversal.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateNodeIterator(Bridge.Html5.Node,Bridge.Html5.NodeFilter)">
            <summary>
            Returns a new NodeIterator object.
            </summary>
            <param name="root">The root node at which to begin the NodeIterator's traversal.</param>
            <param name="whatToShow">Bitwise OR'd list of Filter specification constants from the NodeFilter DOM interface, indicating which nodes to iterate over.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateNodeIterator(Bridge.Html5.Node,Bridge.Html5.NodeFilter,Bridge.Html5.INodeFilter)">
            <summary>
            Returns a new NodeIterator object.
            </summary>
            <param name="root">The root node at which to begin the NodeIterator's traversal.</param>
            <param name="whatToShow">Bitwise OR'd list of Filter specification constants from the NodeFilter DOM interface, indicating which nodes to iterate over.</param>
            <param name="filter">An object implementing the NodeFilter interface; its acceptNode() method will be called for each node in the subtree based at root which is accepted as included by the whatToShow flag to determine whether or not to include it in the list of iterable nodes (a simple callback function may also be used instead). The method should return one of NodeFilter.FILTER_ACCEPT, NodeFilter.FILTER_REJECT, or NodeFilter.FILTER_SKIP.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateProcessingInstruction(System.String,System.String)">
            <summary>
            Creates a new ProcessingInstruction object.
            </summary>
            <param name="target"> refers to the target part of the processing instruction node</param>
            <param name="data">string containing the data to be added to the data within the node.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateRange">
            <summary>
            Returns a new Range object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateTextNode(System.String)">
            <summary>
            Creates a new Text node.
            </summary>
            <param name="data">string containing the data to be put in the text node.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateTreeWalker(Bridge.Html5.Node)">
            <summary>
            The Document.createTreeWalker() creator method returns a newly created TreeWalker object.
            </summary>
            <param name="root">Is the root Node of this TreeWalker traversal. Typically this will be an element owned by the document.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateTreeWalker(Bridge.Html5.Node,Bridge.Html5.NodeFilter)">
            <summary>
            The Document.createTreeWalker() creator method returns a newly created TreeWalker object.
            </summary>
            <param name="root">Is the root Node of this TreeWalker traversal. Typically this will be an element owned by the document.</param>
            <param name="whatToShow">Is an optionale unsigned long representing a bitmask created by combining the constant properties of NodeFilter. It is a convenient way of filtering for certain types of node. It defaults to 0xFFFFFFFF representing the SHOW_ALL constant.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.CreateTreeWalker(Bridge.Html5.Node,Bridge.Html5.NodeFilter,Bridge.Html5.INodeFilter)">
            <summary>
            The Document.createTreeWalker() creator method returns a newly created TreeWalker object.
            </summary>
            <param name="root">Is the root Node of this TreeWalker traversal. Typically this will be an element owned by the document.</param>
            <param name="whatToShow">Is an optionale unsigned long representing a bitmask created by combining the constant properties of NodeFilter. It is a convenient way of filtering for certain types of node. It defaults to 0xFFFFFFFF representing the SHOW_ALL constant.</param>
            <param name="filter">Is an optional NodeFilter, that is an object with a method acceptNode, which is called by the TreeWalker to determine whether or not to accept a node that has passed the whatToShow check.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.ElementFromPoint(System.Int32,System.Int32)">
            <summary>
            Returns the element from the document whose elementFromPoint method is being called which is the topmost element which lies under the given point.  To get an element, specify the point via coordinates, in CSS pixels, relative to the upper-left-most point in the window or frame containing the document.
            </summary>
            <param name="x">x and y specify the coordinates to check, in CSS pixels relative to the upper-left corner of the document's containing window or frame.</param>
            <param name="y">x and y specify the coordinates to check, in CSS pixels relative to the upper-left corner of the document's containing window or frame.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.EnableStyleSheetsForSet(System.String)">
            <summary>
            Enables the style sheets matching the specified name in the current style sheet set, and disables all other style sheets (except those without a title, which are always enabled).
            </summary>
            <param name="name">The name of the style sheets to enable. All style sheets with a title that match this name will be enabled, while all others that have a title will be disabled. Specify an empty string for the name parameter to disable all alternate and preferred style sheets (but not the persistent style sheets; that is, those with no title attribute).</param>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.ExitPointerLock">
            <summary>
            The exitPointerLock asynchronously releases a pointer lock previously requested through Element.requestPointerLock.
            To track the success or failure of the request, it is necessary to listen for the pointerlockchange and pointerlockerror events.
            </summary>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.GetElementsByClassName(System.String)">
            <summary>
            Returns an array-like object of all child elements which have all of the given class names. When called on the document object, the complete document is searched, including the root node. You may also call getElementsByClassName() on any element; it will return only elements which are descendants of the specified root element with the given class names.
            </summary>
            <param name="names">string representing the list of class names to match; class names are separated by whitespace</param>
            <returns>HTMLCollection of found elements.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.GetElementsByTagName(System.String)">
            <summary>
            Returns an HTMLCollection of elements with the given tag name. The complete document is searched, including the root node. The returned HTMLCollection is live, meaning that it updates itself automatically to stay in sync with the DOM tree without having to call document.getElementsByTagName() again.
            </summary>
            <param name="name">a string representing the name of the elements. The special string "*" represents all elements.</param>
            <returns> a live HTMLCollection of found elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.GetElementsByTagNameNS(System.String,System.String)">
            <summary>
            Returns a list of elements with the given tag name belonging to the given namespace. The complete document is searched, including the root node.
            </summary>
            <param name="namespace"> the namespace URI of elements to look for.</param>
            <param name="name"> the local name of elements to look for or the special value "*", which matches all elements</param>
            <returns>live NodeList of found elements in the order they appear in the tree.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.ImportNode(Bridge.Html5.Node)">
            <summary>
            Creates a copy of a node from an external document that can be inserted into the current document.
            </summary>
            <param name="externalNode">The node from another document to be imported.</param>
            <returns>The new node that is imported into the document. The new node's parentNode is null, since it has not yet been inserted into the document tree.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.ImportNode(Bridge.Html5.Node,System.Boolean)">
            <summary>
            Creates a copy of a node from an external document that can be inserted into the current document.
            </summary>
            <param name="externalNode">The node from another document to be imported.</param>
            <param name="deep">A boolean, indicating whether the descendants of the imported node need to be imported.</param>
            <returns>The new node that is imported into the document. The new node's parentNode is null, since it has not yet been inserted into the document tree.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.ReleaseCapture">
            <summary>
            Releases mouse capture if it's currently enabled on an element within this document. Enabling mouse capture on an element is done by calling element.setCapture().
            </summary>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.GetElementById(System.String)">
            <summary>
            Returns a reference to the element by its ID.
            </summary>
            <param name="id">id is a case-sensitive string representing the unique ID of the element being sought.</param>
            <returns>element is a reference to an Element object, or null if an element with the specified ID is not in the document.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.GetElementById``1(System.String)">
            <summary>
            Returns a reference to the element by its ID.
            </summary>
            <param name="id">id is a case-sensitive string representing the unique ID of the element being sought.</param>
            <returns>element is a reference to an Element object, or null if an element with the specified ID is not in the document.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.QuerySelector(System.String)">
            <summary>
            Returns the first element within the document (using depth-first pre-order traversal of the document's nodes) that matches the specified group of selectors.
            </summary>
            <param name="selectors">selectors is a string containing one or more CSS selectors separated by commas.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.QuerySelector``1(System.String)">
            <summary>
            Returns the first element within the document (using depth-first pre-order traversal of the document's nodes) that matches the specified group of selectors.
            </summary>
            <param name="selectors">selectors is a string containing one or more CSS selectors separated by commas.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.QuerySelectorAll(System.String)">
            <summary>
            Returns a list of the elements within the document (using depth-first pre-order traversal of the document's nodes) that match the specified group of selectors. The object returned is a NodeList.
            </summary>
            <param name="selectors">selectors is a string containing one or more CSS selectors separated by commas.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.Close">
            <summary>
            Closes a document stream for writing.
            </summary>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.ExecCommand(System.String)">
            <summary>
            When an HTML document has been switched to designMode, the document object exposes the execCommand method which allows one to run commands to manipulate the contents of the editable region. Most commands affect the document's selection (bold, italics, etc), while others insert new elements (adding a link) or affect an entire line (indenting). When using contentEditable, calling execCommand will affect the currently active editable element.
            </summary>
            <param name="commandName">the name of the command</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.ExecCommand(System.String,System.Boolean)">
            <summary>
            When an HTML document has been switched to designMode, the document object exposes the execCommand method which allows one to run commands to manipulate the contents of the editable region. Most commands affect the document's selection (bold, italics, etc), while others insert new elements (adding a link) or affect an entire line (indenting). When using contentEditable, calling execCommand will affect the currently active editable element.
            </summary>
            <param name="commandName">the name of the command</param>
            <param name="showDefaultUI">whether the default user interface should be shown. This is not implemented in Mozilla.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.ExecCommand(System.String,System.Boolean,System.String)">
            <summary>
            When an HTML document has been switched to designMode, the document object exposes the execCommand method which allows one to run commands to manipulate the contents of the editable region. Most commands affect the document's selection (bold, italics, etc), while others insert new elements (adding a link) or affect an entire line (indenting). When using contentEditable, calling execCommand will affect the currently active editable element.
            </summary>
            <param name="commandName">the name of the command</param>
            <param name="showDefaultUI">whether the default user interface should be shown. This is not implemented in Mozilla.</param>
            <param name="valueArgument">some commands (such as insertimage) require an extra value argument (the image's url). Pass an argument of null if no argument is needed.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.GetElementsByName(System.String)">
            <summary>
            Returns a list of elements with a given name in the (X)HTML document.
            </summary>
            <param name="name">name is the value of the name attribute of the element.</param>
            <returns>elements is an HTMLCollection of elements.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.GetSelection">
            <summary>
            The DOM getSelection() method is available on the Window and Document interfaces.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.HasFocus">
            <summary>
            Returns a Boolean value indicating whether the document or any element inside the document has focus. This method can be used to determine whether the active element in a document has focus.
            </summary>
            <returns>false if the active element in the document has no focus; true if the active element in the document has focus.</returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.Open">
            <summary>
            Opens a document stream for writing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.QueryCommandEnabled(System.String)">
            <summary>
            Returns true if the formating command can be executed on the current range.
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.QueryCommandIndeterm(System.String)">
            <summary>
            Returns true if the formating command is in an indeterminate state on the current range.
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.QueryCommandState(System.String)">
            <summary>
            Returns true if the formating command has been executed on the current range.
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.QueryCommandSupported(System.String)">
            <summary>
            Returns true if the formating command is supported on the current range.
            </summary>
            <param name="command">The command for which to determine support.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.QueryCommandValue(System.String)">
            <summary>
            Returns the current value of the current range for a formating command.
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.Write(System.String)">
            <summary>
            Writes a string of text to a document stream opened by document.open().
            </summary>
            <param name="markup">markup is a string containing the text to be written to the document.</param>
        </member>
        <member name="M:Bridge.Html5.DocumentInstance.Writeln(System.String)">
            <summary>
            Writes a string of text followed by a newline character to a document.
            </summary>
            <param name="line">line is string containing a line of text.</param>
        </member>
        <member name="T:Bridge.Html5.DocumentType">
            <summary>
            The DocumentType interface represents a Node containing a doctype.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentType.PreviousElementSibling">
            <summary>
            Returns the Element immediately prior to this ChildNode in its parent's children list, or null if there is no Element in the list prior to this ChildNode.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DocumentType.NextElementSibling">
            <summary>
            Returns the Element immediately following this ChildNode in its parent's children list, or null if there is no Element in the list following this ChildNode.
            </summary>
        </member>
        <member name="M:Bridge.Html5.DocumentType.Remove">
            <summary>
            Removes the object from its parent children list.
            </summary>
        </member>
        <member name="T:Bridge.Html5.DOMImplementation">
            <summary>
            The DOMImplementation interface represent an object providing methods which are not dependent on any particular document. Such an object is returned by the Document.implementation property.
            </summary>
        </member>
        <member name="M:Bridge.Html5.DOMImplementation.CreateDocument(System.String,System.String)">
            <summary>
            The DOMImplementation.createDocument() method creates and returns an XMLDocument.
            </summary>
            <param name="namespaceURI">Is a DOMString containing the namespace URI of the document to be created, or null if the document doesn't belong to one.</param>
            <param name="qualifiedName">Is a DOMString containing the qualified name, that is an optional prefix and colon plus the local root element name, of the document to be created.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DOMImplementation.CreateDocument(System.String,System.String,Bridge.Html5.DocumentType)">
            <summary>
            The DOMImplementation.createDocument() method creates and returns an XMLDocument.
            </summary>
            <param name="namespaceURI">Is a DOMString containing the namespace URI of the document to be created, or null if the document doesn't belong to one.</param>
            <param name="qualifiedName">Is a DOMString containing the qualified name, that is an optional prefix and colon plus the local root element name, of the document to be created.</param>
            <param name="documentType">Is the DocumentType of the document to be created. It defaults to null.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DOMImplementation.CreateDocumentType(System.String,System.String,System.String)">
            <summary>
            The DOMImplementation.createDocumentType() method returns a DocumentType object which can either be used with DOMImplementation.createDocument upon document creation or can be put into the document via methods like Node.insertBefore() or Node.replaceChild().
            </summary>
            <param name="qualifiedName">Is a DOMString containing the qualified name, like svg:svg.</param>
            <param name="publicId">Is a DOMString containing the PUBLIC identifier.</param>
            <param name="systemId">Is a DOMString containing the SYSTEM identifiers.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DOMImplementation.CreateHTMLDocument">
            <summary>
            The DOMImplementation.createHTMLDocument() method creates a new HTML Document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DOMImplementation.CreateHTMLDocument(System.String)">
            <summary>
            The DOMImplementation.createHTMLDocument() method creates a new HTML Document.
            </summary>
            <param name="title">Is a DOMString containing the title to give the new HTML document.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DOMImplementation.HasFeature(System.String,System.String)">
            <summary>
            The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.
            The different implementation fairly diverged in what kind of features was reported. The latest version of the spec settled to force this method to always return true, except for SVG features, where the functionnality was accurate and in use.
            </summary>
            <param name="feature">Is a DOMString representing the feature name.</param>
            <param name="version">Is a DOMString representing the version of the specification defining the feature.</param>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.DOMStringList">
            <summary>
            A type returned by some APIs which contains a list of DOMString (strings).
            </summary>
        </member>
        <member name="P:Bridge.Html5.DOMStringList.Item(System.Int32)">
            <summary>
            returns a DOMString (a string)
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DOMStringList.Contains(System.String)">
            <summary>
             Returns true/false depending on whether the given string is in the list
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DOMStringList.GetItem(System.Int32)">
            <summary>
             returns a DOMString (a string)
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="F:Bridge.Html5.DOMStringList.Length">
            <summary>
            Gives length of the list
            </summary>
        </member>
        <member name="T:Bridge.Html5.DOMSettableTokenList">
            <summary>
            The class that extends DOMTokenList with settable .Value property
            </summary>
        </member>
        <member name="F:Bridge.Html5.DOMSettableTokenList.Value">
            <summary>
            Gets or sets the underlying string.
            </summary>
        </member>
        <member name="T:Bridge.Html5.DOMTokenList">
            <summary>
            This type represents a set of space-separated tokens.
            </summary>
        </member>
        <member name="P:Bridge.Html5.DOMTokenList.Item(System.Int32)">
            <summary>
            Returns an item in the list by its index (or undefined if the number is greater than or equal to the length of the list, prior to Gecko 7.0 returned null)
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DOMTokenList.GetItem(System.Int32)">
            <summary>
            Returns an item in the list by its index (or undefined if the number is greater than or equal to the length of the list, prior to Gecko 7.0 returned null)
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DOMTokenList.Contains(System.String)">
            <summary>
             return true if the underlying string contains token, otherwise false
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DOMTokenList.Add(System.String)">
            <summary>
            adds token to the underlying string
            </summary>
            <param name="token"></param>
        </member>
        <member name="M:Bridge.Html5.DOMTokenList.Remove(System.String)">
            <summary>
            Remove token from the underlying string
            </summary>
            <param name="token"></param>
        </member>
        <member name="M:Bridge.Html5.DOMTokenList.Toggle(System.String)">
            <summary>
            Removes token from string and returns false. If token doesn't exist it's added and the function returns true
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DOMTokenList.Toggle(System.String,System.Boolean)">
            <summary>
            Removes token from string and returns false. If token doesn't exist it's added and the function returns true
            </summary>
            <param name="token"></param>
            <param name="force"></param>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.HTMLAudioElement">
            <summary>
            The HTMLAudioElement interface provides access to the properties of &lt;audio&gt; elements, as well as methods to manipulate them. It derives from the HTMLMediaElement interface.
            The HTML &lt;audio&gt; element is used to embed sound content in documents. It may contain several audio sources, represented using the src attribute or the &lt;source&gt; element; the browser will choose the most suitable one.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLAudioElement.#ctor">
            <summary>
            Constructor for audio elements. The preload property of the returned object is set to auto and the src property is set to the argument value. The browser begins asynchronously selecting the resource before returning the object.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLAudioElement.#ctor(System.String)">
            <summary>
            Constructor for audio elements. The preload property of the returned object is set to auto and the src property is set to the argument value. The browser begins asynchronously selecting the resource before returning the object.
            </summary>
            <param name="urlString">The src property of the constructed HTMLAudioElement.</param>
        </member>
        <member name="T:Bridge.Html5.HTMLBRElement">
            <summary>
            The HTMLBRElement interface represents a HTML line break element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBRElement.Clear">
            <summary>
            Indicates flow of text around floating objects.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLBodyElement">
            <summary>
            The HTMLBodyElement interface provides special properties (beyond those of the regular HTMLElement interface they also inherit) for manipulating body elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.ALink">
            <summary>
            Color of active hyperlinks.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.Background">
            <summary>
            Color of active hyperlinks.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.BgColor">
            <summary>
            Background color for the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.Link">
            <summary>
            Color of unvisited links.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.OnAfterPrint">
            <summary>
            Reflects the onafterprint HTML attribute value for a function to call after the user has printed the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.OnBeforePrint">
            <summary>
            Reflects the onbeforeprint HTML attribute value for a function to call when the user has requested printing the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.OnBeforeUnload">
            <summary>
            Reflects the onbeforeunload HTML attribute value for a function to call when the document is about to be unloaded.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.OnBlur">
            <summary>
            Exposes the window.onblur event handler to call when the window loses focus. Note: This handler is triggered when the event reaches the window, not the body element. Use addEventListener() to attach an event listener to the body element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.OnError">
            <summary>
            Exposes the window.onerror event handler to call when the document fails to load properly. Note: This handler is triggered when the event reaches the window, not the body element. Use addEventListener() to attach an event listener to the body element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.OnFocus">
            <summary>
            Exposes the window.onfocus event handler to call when the window gains focus. Note: This handler is triggered when the event reaches the window, not the body element. Use addEventListener() to attach an event listener to the body element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.OnHashChange">
            <summary>
            Reflects the onhashchange HTML attribute value for a function to call when the fragment identifier in the address of the document changes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.OnLoad">
            <summary>
            Exposes the window.onload event handler to call when the window gains focus. Note: This handler is triggered when the event reaches the window, not the body element. Use addEventListener() to attach an event listener to the body element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.OnMessage">
            <summary>
            Reflects the onmessage HTML attribute value for a function to call when the document receives a message.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.OnOffline">
            <summary>
            Reflects the onoffline HTML attribute value for a function to call when network communication fails.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.OnOnline">
            <summary>
            Reflects the ononline HTML attribute value for a function to call when network communication is restored.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.OnPopState">
            <summary>
            Reflects the onpopstate HTML attribute value for a function to call when the user has navigated session history.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.OnResize">
            <summary>
            Reflects the onresize HTML attribute value for a function to call when the document has been resized.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.OnStorage">
            <summary>
            Reflects the onstorage HTML attribute value for a function to call when the storage area has changed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.OnUnload">
            <summary>
            Reflects the onunload HTML attribute value for a function to call when when the document is going away.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.Text">
            <summary>
            Foreground color of text.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBodyElement.VLink">
            <summary>
            Color of visited links.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLBaseElement">
            <summary>
            The HTMLBaseElement interface contains the base URI for a document. This object inherits all of the properties and methods as described in the HTMLElement interface.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBaseElement.Href">
            <summary>
            Is a DOMString that reflects the href HTML attribute, containing a base URL for relative URLs in the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLBaseElement.Target">
            <summary>
            Is a DOMString that reflects the target HTML attribute, containing a default target browsing context or frame for elements that do not have a target reference specified.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLAreaElement">
            <summary>
            The HTMLAreaElement interface provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of area elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Alt">
            <summary>
            Is a DOMString that reflects the alt HTML attribute, containing alternative text for the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Coords">
            <summary>
            Is a DOMString that reflects the coords HTML attribute, containing coordinates to define the hot-spot region.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Download">
            <summary>
            Is a DOMString indicating that the linked resource is intended to be downloaded rather than displayed in the browser. The value represent the proposed name of the file. If the name is not a valid filename of the underlying OS, browser will adapt it.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Hash">
            <summary>
            Is a DOMString containing the fragment identifier (including the leading hash mark (#)), if any, in the referenced URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Host">
            <summary>
            Is a DOMString containing the hostname and port (if it's not the default port) in the referenced URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Hostname">
            <summary>
            Is a DOMString containing the hostname in the referenced URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Href">
            <summary>
            Is a DOMString containing that reflects the href HTML attribute, containing a valid URL of a linked resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Hreflang">
            <summary>
            Is a DOMString containing that reflects the hreflang HTML attribute, indicating the language of the linked resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Media">
            <summary>
            Is a DOMString containing that reflects the media HTML attribute, indicating target media of the linked resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.NoHref">
            <summary>
            Is a Boolean flag indicating if the area is inactive (true) or active (false).
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Password">
            <summary>
            Is a DOMString containing the password specified before the domain name.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Origin">
            <summary>
            Returns a DOMString containing the origin of the URL, that is its scheme, its domain and its port.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Pathname">
            <summary>
            Is a DOMString containing the path name component, if any, of the referenced URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Port">
            <summary>
            Is a DOMString containing the port component, if any, of the referenced URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Protocol">
            <summary>
            Is a DOMString containing the protocol component (including trailing colon ':'), of the referenced URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Rel">
            <summary>
            Is a DOMString that reflects the rel HTML attribute, specifying the relationship of the target object to the link object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.RelList">
            <summary>
            Returns a DOMTokenList that reflects the rel HTML attribute, as a list of tokens.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Search">
            <summary>
            Is a DOMString representing tThe search element, including leading question mark ('?'), if any, of the referenced URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.SearchParams">
            <summary>
            The URLUtils.searchParams property is a URLSearchParams containing the query/search parameters of the URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Shape">
            <summary>
            Is a DOMString representing the shape of the active area.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Target">
            <summary>
            Is a DOMString that reflects the target HTML attribute, indicating where to display the linked resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Type">
            <summary>
            Is a DOMString that reflects the type HTML attribute, indicating the MIME type of the linked resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAreaElement.Username">
            <summary>
            Is a DOMString containing the username specified before the domain name.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLDataListElement">
            <summary>
            The HTMLDataListElement interface provides special properties (beyond the HTMLElement object interface it also has available to it by inheritance) to manipulate &lt;datalist&gt; elements and their content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLDataListElement.Options">
            <summary>
            A collection of the contained option elements.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLEmbedElement">
            <summary>
            The HTMLEmbedElement interface, which provides special properties (beyond the regular &lt;htmlelement&gt; interface it also has available to it by inheritance) for manipulating &lt;embed&gt; elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLEmbedElement.Height">
            <summary>
            Reflects the height HTML attribute, containing the displayed height of the resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLEmbedElement.Name">
            <summary>
            The name of the embedded object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLEmbedElement.Src">
            <summary>
            Reflects the src HTML attribute, containing the address of the resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLEmbedElement.Type">
            <summary>
            Reflects the type HTML attribute, containing the type of the resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLEmbedElement.Width">
            <summary>
            Reflects the width HTML attribute, containing the displayed width of the resource.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLDListElement">
            <summary>
            The HTMLDListElement interface provides special properties (beyond those of the regular HTMLElement interface it also has available to it by inheritance) for manipulating definition list elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLDListElement.Compact">
            <summary>
            Indicates that spacing between list items should be reduced.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLFieldSetElement">
            <summary>
            The HTMLFieldSetElement interface special properties and methods (beyond the regular HTMLelement interface it also has available to it by inheritance) for manipulating the layout and presentation of field-set elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFieldSetElement.Disabled">
            <summary>
            Reflects the disabled HTML attribute, indicating whether the user can interact with the control.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFieldSetElement.Elements">
            <summary>
            The elements belonging to this field set.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFieldSetElement.Form">
            <summary>
            The containing form element, if this element is in a form.
            If the button is not a descendant of a form element, then the attribute can be the ID of any form element in the same document it is related to, or the null value if none matches.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFieldSetElement.Name">
            <summary>
            Reflects the name HTML attribute, containing the name of the field set, used for submitting the form.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFieldSetElement.Type">
            <summary>
            Must be the string fieldset.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFieldSetElement.ValidationMessage">
            <summary>
            A localized message that describes the validation constraints that the element does not satisfy (if any). This is the empty string if the element is not a candidate for constraint validation (willValidate is false), or it satisfies its constraints.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFieldSetElement.Validity">
            <summary>
            The validity states that this element is in.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFieldSetElement.WillValidate">
            <summary>
            Always false because &lt;fieldset&gt; objects are never candidates for constraint validation.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLFieldSetElement.CheckValidity">
            <summary>
            Always returns true because &lt;fieldset&gt; objects are never candidates for constraint validation.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLFieldSetElement.SetCustomValidity(System.String)">
            <summary>
            Sets a custom validity message for the field set. If this message is not the empty string, then the field set is suffering from a custom validity error, and does not validate.
            </summary>
            <param name="error"></param>
        </member>
        <member name="T:Bridge.Html5.HTMLMediaElement`1">
            <summary>
            The HTMLMediaElement interface has special properties and methods (beyond the properties and methods available for all children of HTMLElement), that are common to all media-related objects.
            This interface is inherited by HTMLVideoElement and HTMLAudioElement.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type of all MediaElement's events</typeparam>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.AutoPlay">
            <summary>
            Reflects the autoplay HTML attribute, indicating whether playback should automatically begin as soon as enough media is available to do so without interruption.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.Buffered">
            <summary>
            The ranges of the media source that the browser has buffered (if any) at the moment the buffered property is accessed. The returned TimeRanges object is normalized.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.Controls">
            <summary>
            Reflects the controls HTML attribute, indicating whether user interface items for controlling the resource should be displayed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.CrossOrigin">
            <summary>
            The CORS setting for this image element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.CurrentSrc">
            <summary>
            The absolute URL of the chosen media resource (if, for example, the server selects a media file based on the resolution of the user's display), or an empty string if the networkState is EMPTY.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.CurrentTime">
            <summary>
            The current playback time, in seconds. Setting this value seeks the media to the new time.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.DefaultMuted">
            <summary>
            Reflects the muted HTML attribute, indicating whether the media element's audio output should be muted by default. This property has no dynamic effect, to mute and unmute the audio output, use the muted property.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.DefaultPlaybackRate">
            <summary>
            The default playback rate for the media. 1.0 is "normal speed," values lower than 1.0 make the media play slower than normal, higher values make it play faster. The value 0.0 is invalid and throws a NOT_SUPPORTED_ERR exception.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.Duration">
            <summary>
            The length of the media in seconds, or zero if no media data is available.  If the media data is available but the length is unknown, this value is NaN.  If the media is streamed and has no predefined length, the value is Inf.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.Ended">
            <summary>
            Indicates whether the media element has ended playback.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.Error">
            <summary>
            The MediaError object for the most recent error, or null if there has not been an error.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.Loop">
            <summary>
            Reflects the loop HTML attribute, indicating whether the media element should start over when it reaches the end.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.MediaGroup">
            <summary>
            Reflects the mediagroup HTML attribute, indicating the name of the group of elements it belongs to. A group of media elements shares a common controller.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.Muted">
            <summary>
            True if the audio is muted, and false otherwise.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.NetworkState">
            <summary>
            The current state of fetching the media over the network.
            NETWORK_EMPTY 	    0 	There is no data yet.  The readyState is also HAVE_NOTHING.
            NETWORK_IDLE 	    1
            NETWORK_LOADING 	2 	The media is loading.
            NETWORK_NO_SOURCE 	3
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.Paused">
            <summary>
            Indicates whether the media element is paused.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.PlaybackRate">
            <summary>
            The current rate at which the media is being played back. This is used to implement user controls for fast forward, slow motion, and so forth. The normal playback rate is multiplied by this value to obtain the current rate, so a value of 1.0 indicates normal speed.
            If the playbackRate is negative, the media is played backwards.
            The audio is muted when the media plays backwards or if the fast forward or slow motion is outside a useful range (E.g. Gecko mute the sound outside the range 0.25 and 5.0).
            The pitch of the audio is corrected by default and is the same for every speed. Some navigators implement the non-standard preservespitch property to control this.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.Played">
            <summary>
            The ranges of the media source that the browser has played, if any.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.Preload">
            <summary>
            Reflects the preload HTML attribute, indicating what data should be preloaded, if any.
            It may have one of the following values:
                none: hints that either the author thinks that the user won't need to consult that video or that the server wants to minimize its traffic; in others terms this hint indicates that the video should not be cached.
                metadata: hints that though the author thinks that the user won't need to consult that video, fetching the metadata (e.g. length) is reasonable.
                auto: hints that the user needs have priority; in others terms this hint indicated that, if needed, the whole video could be downloaded, even if the user is not expected to use it.
                the empty string: which is a synonym of the auto value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.ReadyState">
            <summary>
            The readiness state of the media.
            HAVE_NOTHING 	    0 	No information is available about the media resource.
            HAVE_METADATA 	    1 	Enough of the media resource has been retrieved that the metadata attributes are initialized.  Seeking will no longer raise an exception.
            HAVE_CURRENT_DATA 	2 	Data is available for the current playback position, but not enough to actually play more than one frame.
            HAVE_FUTURE_DATA 	3 	Data for the current playback position as well as for at least a little bit of time into the future is available (in other words, at least two frames of video, for example).
            HAVE_ENOUGH_DATA 	4 	Enough data is available—and the download rate is high enough—that the media can be played through to the end without interruption.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.Seekable">
            <summary>
            The time ranges that the user is able to seek to, if any.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.Seeking">
            <summary>
            Indicates whether the media is in the process of seeking to a new position.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.Src">
            <summary>
            Reflects the src HTML attribute, containing the URL of a media resource to use.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.TextTracks">
            <summary>
            Represents the list of TextTrack objects contained in the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMediaElement`1.Volume">
            <summary>
            The audio volume, from 0.0 (silent) to 1.0 (loudest).
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLMediaElement`1.CanPlayType(System.String)">
             <summary>
             Determines whether the specified media type can be played back.
             Returns:
            
                 probably         : if the specified type appears to be playable.
                 maybe            : if it's impossible to tell whether the type is playable without playing it.
                 The empty string : if the specified type definitely cannot be played.
             </summary>
             <param name="type">The media type</param>
             <returns>The string representing that the specified type may be played or not</returns>
        </member>
        <member name="M:Bridge.Html5.HTMLMediaElement`1.FastSeek(System.Double)">
            <summary>
            Directly seek to the given time.
            </summary>
            <param name="time">The time to seek</param>
        </member>
        <member name="M:Bridge.Html5.HTMLMediaElement`1.Load">
            <summary>
            Begins loading the media content from the server.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLMediaElement`1.Pause">
            <summary>
            Pauses the media playback.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLMediaElement`1.Play">
            <summary>
            Begins playback of the media. If you have changed the src attribute of the media element since the page was loaded, you must call load() before play(), otherwise the original media plays again.
            </summary>
        </member>
        <member name="T:Bridge.Html5.MediaElement">
            <summary>
            The non-generic MediaElement class. Events' CurrentTarget has the MediaElement type.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TimeRanges">
            <summary>
            The TimeRanges interface is used to represent a set of time ranges, primarily for the purpose of tracking which portions of media have been buffered when loading it for use by the &lt;audio&gt; and &lt;video&gt; elements.
            A TimeRanges object includes one or more ranges of time, each specified by a starting and ending time offset. You reference each time range by using the start() and end() methods, passing the index number of the time range you want to retrieve.
            The term "normalized TimeRanges object" indicates that ranges in such an object are ordered, don't overlap, aren't empty, and don't touch (adjacent ranges are folded into one bigger range).
            </summary>
        </member>
        <member name="F:Bridge.Html5.TimeRanges.Length">
            <summary>
            The number of time ranges represented by the time range object.
            </summary>
        </member>
        <member name="M:Bridge.Html5.TimeRanges.Start(System.Int32)">
            <summary>
            Returns the time offset at which a specified time range begins.
            A DOMException thrown if the specified index doesn't correspond to an existing range.
            </summary>
            <param name="index">The range number to return the starting time for.</param>
            <returns>Returns the time offset at which a specified time range begins.</returns>
        </member>
        <member name="M:Bridge.Html5.TimeRanges.End(System.Int32)">
            <summary>
            Returns the time offset at which a specified time range ends.
            A DOMException thrown if the specified index doesn't correspond to an existing range.
            </summary>
            <param name="index">The range number to return the ending time for.</param>
            <returns>Returns the time offset at which a specified time range ends.</returns>
        </member>
        <member name="F:Bridge.Html5.MediaError.MEDIA_ERR_ABORTED">
            <summary>
            The fetching process for the media resource was aborted by the user agent at the user's request.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MediaError.MEDIA_ERR_NETWORK">
            <summary>
            A network error of some description caused the user agent to stop fetching the media resource, after the resource was established to be usable.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MediaError.MEDIA_ERR_DECODE">
            <summary>
            An error of some description occurred while decoding the media resource, after the resource was established to be usable.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED">
            <summary>
            The media resource indicated by the src attribute was not suitable.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MediaError.Code">
            <summary>
            Returns the current error's error code.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLMeterElement">
            <summary>
            The HTML &lt;meter&gt; elements expose the HTMLMeterElement interface, which provides special properties and methods (beyond the HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of &lt;meter&gt; elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMeterElement.High">
            <summary>
            It returns the value of the high boundary, reflecting the high &lt;meter&gt; attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMeterElement.Low">
            <summary>
            It returns the value of the low boundary, reflecting the low &lt;meter&gt; attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMeterElement.Max">
            <summary>
            It return the maximum value, reflecting the max &lt;meter&gt; attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMeterElement.Min">
            <summary>
            It returns the minimum value, reflecting the min &lt;meter&gt; attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMeterElement.Optimum">
            <summary>
            It retruns the optimum value, reflecting the min &lt;meter&gt; attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMeterElement.Labels">
            <summary>
            A list of &lt;label&gt; elements that are labels for this element.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLModElement">
            <summary>
            The HTMLModElement interface provides special properties (beyond the regular methods and properties available through the HTMLElement interface they also have available to them by inheritance) for manipulating modification elements, that is &lt;del&gt; and &lt;ins&gt;.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLModElement.Cite">
            <summary>
            Reflects the cite HTML attribute, containing a URI of a resource explaining the change.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLModElement.DateTime">
            <summary>
            Reflects the datetime HTML attribute, containing a date-and-time string representing a timestamp for the change.
            </summary>
        </member>
        <member name="T:Bridge.Html5.ModElementType">
            <summary>
            The types of ModElement
            </summary>
        </member>
        <member name="F:Bridge.Html5.ModElementType.Ins">
            <summary>
            The HTML &lt;ins&gt; Element (or HTML Inserted Text) HTML represents a range of text that has been added to a document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ModElementType.Del">
            <summary>
            The HTML &lt;del&gt; element (or HTML Deleted Text Element) represents a range of text that has been deleted from a document. This element is often (but need not be) rendered with strike-through text.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLObjectElement">
            <summary>
            The HTMLObjectElement interface provides special properties and methods (beyond those on the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of &lt;object&gt; element, representing external resources.
            The HTML &lt;object&gt; Element (or HTML Embedded Object Element) represents an external resource, which can be treated as an image, a nested browsing context, or a resource to be handled by a plugin.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLObjectElement.ContentDocument">
            <summary>
            The active document of the object element's nested browsing context, if any; otherwise null.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLObjectElement.ContentWindow">
            <summary>
            The window proxy of the object element's nested browsing context, if any; otherwise null.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLObjectElement.Data">
            <summary>
            Reflects the data HTML attribute, specifying the address of a resource's data.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLObjectElement.Form">
            <summary>
            The object element's form owner, or null if there isn't one.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLObjectElement.Height">
            <summary>
            Reflects the height HTML attribute, specifying the displayed height of the resource in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLObjectElement.Name">
            <summary>
            Reflects the name HTML attribute, specifying the name of of a browsing context.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLObjectElement.TabIndex">
            <summary>
            The position of the element in the tabbing navigation order for the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLObjectElement.Type">
            <summary>
            Reflects the type HTML attribute, specifying the MIME type of the resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLObjectElement.TypeMustMatch">
            <summary>
            Reflects the typemustmatch HTML attribute, indicating if the resource specified by data must only be played if it matches the type attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLObjectElement.useMap">
            <summary>
            Reflects the usemap HTML attribute, specifying a &lt;map&gt; element to use.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLObjectElement.ValidationMessage">
            <summary>
            A localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (willValidate is false), or it satisfies its constraints.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLObjectElement.Validity">
            <summary>
            The validity states that this element is in.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLObjectElement.Width">
            <summary>
            Reflects the width HTML attribute, specifying the displayed width of the resource in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLObjectElement.WillValidate">
            <summary>
            Indicates whether the element is a candidate for constraint validation. Always false for HTMLObjectElement objects.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLObjectElement.CheckValidity">
            <summary>
            Always returns true, because object objects are never candidates for constraint validation.
            </summary>
            <returns>Always returns true</returns>
        </member>
        <member name="M:Bridge.Html5.HTMLObjectElement.SetCustomValidity(System.String)">
            <summary>
            Sets a custom validity message for the element. If this message is not the empty string, then the element is suffering from a custom validity error, and does not validate.
            </summary>
            <param name="error">The custom validity message</param>
        </member>
        <member name="T:Bridge.Html5.HTMLOListElement">
            <summary>
            The HTMLOListElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating ordered list elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOListElement.Reversed">
            <summary>
            Is a Boolean value reflecting the reversed and defining if the numbering is descending, that is its value is true, or ascending (false).
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOListElement.Start">
            <summary>
            Is a long value reflecting the start and defining the value of the first number of the first element of the list.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOListElement.Type">
            <summary>
            Is a DOMString value reflecting the type and defining the kind of marker to be used to display. It can have the following values:
            '1' meaning that decimal numbers are used: 1, 2, 3, 4, 5, …
            'a' meaning that the lowercase latin alphabet is used:  a, b, c, d, e, …
            'A' meaning that the uppercase latin alphabet is used: A, B, C, D, E, …
            'i' meaning that the lowercase latin numerals are used: i, ii, iii, iv, v, …
            'I' meaning that the uppercase latin numerals are used: I, II, III, IV, V, …
            </summary>
        </member>
        <member name="T:Bridge.Html5.OListType">
            <summary>
            Defines the kind of marker to be used to display with an &lt;ol&gt;. Reflects to the &lt;ol&gt;'s type attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.OListType.DecimalNumbers">
            <summary>
            Reflects to '1' value of the &lt;ol&gt;'s type attribute meaning that decimal numbers are used: 1, 2, 3, 4, 5, …
            </summary>
        </member>
        <member name="F:Bridge.Html5.OListType.LowercaseLatinAlphabet">
            <summary>
            Reflects to 'a' value of the &lt;ol&gt;'s type attribute meaning that the lowercase latin alphabet is used:  a, b, c, d, e, …
            </summary>
        </member>
        <member name="F:Bridge.Html5.OListType.UppercaseLatinAlphabet">
            <summary>
            Reflects to 'A' value of the &lt;ol&gt;'s type attribute meaning that the uppercase latin alphabet is used: A, B, C, D, E, …
            </summary>
        </member>
        <member name="F:Bridge.Html5.OListType.LowercaseLatinNumerals">
            <summary>
            Reflects to 'i' value of the &lt;ol&gt;'s type attribute meaning that the lowercase latin numerals are used: i, ii, iii, iv, v, …
            </summary>
        </member>
        <member name="F:Bridge.Html5.OListType.UppercaseLatinNumerals">
            <summary>
            Reflects to 'I' value of the &lt;ol&gt;'s type attribute meaning that the uppercase latin numerals are used: I, II, III, IV, V, …
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLOptGroupElement">
            <summary>
            The HTMLOptGroupElement interface provides special properties and methods (beyond the regular HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of &lt;optgroup&gt; elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOptGroupElement.Disabled">
            <summary>
            If true, the whole list of children &lt;option&gt; is disabled.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOptGroupElement.Label">
            <summary>
            Set or get the label for the group.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLOptionElement">
            <summary>
            The HTMLOptionElement interface represents &lt;option&gt; elements and inherits all classes and methods of the HTMLElement interface.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOptionElement.DefaultSelected">
            <summary>
            Contains the initial value of the selected HTML attribute, indicating whether the option is selected by default or not.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOptionElement.Disable">
            <summary>
            Reflects the value of the disabled HTML attribute, which indicates that the option is unavailable to be selected. An option can also be disabled if it is a child of an &lt;optgroup&gt; element that is disabled.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOptionElement.Form">
            <summary>
            If the option is a descendent of a &lt;select&gt; element, then this property has the same value as the form property of the corresponding HTMLSelectElement object; otherwise, it is null.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOptionElement.Index">
            <summary>
            The position of the option within the list of options it belongs to, in tree-order. If the option is not part of a list of options, like when it is part of the &lt;datalist&gt; element, the value is 0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOptionElement.Label">
            <summary>
            Reflects the value of the label HTML attribute, which provides a label for the option. If this attribute isn't specifically set, reading it returns the element's text content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOptionElement.Selected">
            <summary>
            Indicates whether the option is currently selected.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOptionElement.Text">
            <summary>
            Contains the text content of the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOptionElement.Value">
            <summary>
            Reflects the value of the value HTML attribute, if it exists; otherwise reflects value of the Node.textContent property.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLOutputElement">
            <summary>
            The HTMLOutputElement interface provides properties and methods (beyond those inherited from HTMLElement) for manipulating the layout and presentation of &lt;output&gt; elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOutputElement.DefaultValue">
            <summary>
            The default value of the element, initially the empty string.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOutputElement.Form">
            <summary>
            Indicates the control's form owner, reflecting the form HTML attribute if it is defined.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOutputElement.HtmlFor">
            <summary>
            Reflects the for HTML attribute, containing a list of IDs of other elements in the same document that contribute to (or otherwise affect) the calculated value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOutputElement.Name">
            <summary>
            Reflects the name HTML attribute, containing the name for the control that is submitted with form data.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOutputElement.Type">
            <summary>
            Must be the string output.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOutputElement.ValidationMessage">
            <summary>
            A localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (willValidate is false), or it satisfies its constraints.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOutputElement.Validity">
            <summary>
            The validity states that this element is in.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLOutputElement.WillValidate">
            <summary>
            The behavior of this property is subject to an open specification bug (https://www.w3.org/Bugs/Public/show_bug.cgi?id=10912), as some browser maker are not happy with what is specified. It is unclear which will be the final the outcome of this.
            The standard behavior is to always return false because output objects are never candidates for constraint validation.
            The proposed new behavior, implemented in Firefox since Gecko 2.0 is to use this property to indicate whether the element is a candidate for constraint validation. It is false if any conditions bar it from constraint validation (See bug 604673 (https://bugzilla.mozilla.org/show_bug.cgi?id=604673)).
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLOutputElement.CheckValidity">
            <summary>
            The behavior of this property is subject to an open specification bug (https://www.w3.org/Bugs/Public/show_bug.cgi?id=10912), as some browser maker are not happy with what is specified. It is unclear which will be the final the outcome of this.
            The standard behavior is to always return true because output objects are never candidates for constraint validation.
            The proposed new behavior, implemented in Firefox since Gecko 2.0 is to return false if the element is a candidate for constraint validation, and it does not satisfy its constraints. In this case, it also fires an "invalid" event at the element. It returns true if the element is not a candidate for constraint validation, or if it satisfies its constraints (See bug 604673 (https://bugzilla.mozilla.org/show_bug.cgi?id=604673)).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.HTMLOutputElement.SetCustomValidity(System.String)">
            <summary>
            Sets a custom validity message for the element. If this message is not the empty string, then the element is suffering from a custom validity error, and does not validate.
            </summary>
            <param name="error">The custom validity message</param>
        </member>
        <member name="T:Bridge.Html5.HTMLParagraphElement">
            <summary>
            The HTMLParagraphElement interface provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating &lt;p&gt; elements.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLMetaElement">
            <summary>
            The HTMLMetaElement interface contains descriptive metadata about a document. Itt inherits all of the properties and methods described in the HTMLElement interface.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMetaElement.Content">
            <summary>
            Gets or sets the value of meta-data property.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMetaElement.HttpEquiv">
            <summary>
            Gets or sets the name of an HTTP response header to define for a document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMetaElement.Name">
            <summary>
            Gets or sets the name of a meta-data property to define for a document.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLMapElement">
            <summary>
            The HTMLMapElement interface provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of map elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMapElement.Name">
            <summary>
            Is a DOMString representing the &lt;map&gt; element for referencing it other context. If the id attribute is set, this must have the same value; and it cannot be null or empty.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMapElement.Areas">
            <summary>
            Is a live HTMLCollection representing the &lt;area&gt; elements associated to this &lt;map&gt;.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLMapElement.Images">
            <summary>
            Is a live HTMLCollection representing the &lt;img&gt; and &lt;object&gt; elements associated to this &lt;map&gt;.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLLinkElement">
            <summary>
            The HTMLLinkElement interface represents reference information for external resources and the relationship of those resources to a document and vice-versa. This object inherits all of the properties and methods of the HTMLElement interface.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLLinkElement.Disabled">
            <summary>
            Gets or sets whether the link is disabled; currently only used with style sheet links.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLLinkElement.Href">
            <summary>
            Gets or sets the URI for the target resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLLinkElement.HrefLang">
            <summary>
            Gets or sets the language code for the linked resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLLinkElement.Media">
            <summary>
            Gets or sets a list of one or more media formats to which the resource applies.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLLinkElement.Rel">
            <summary>
            Gets or sets the forward relationship of the linked resource from the document to the resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLLinkElement.RelList">
            <summary>
            Is a DOMTokenList that reflects the rel HTML attribute, as a list of tokens.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLLinkElement.Sizes">
            <summary>
            Is a DOMSettableTokenList that reflects the sizes HTML attribute, as a list of tokens.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLLinkElement.Sheet">
            <summary>
            Returns the StyleSheet object associated with the given element, or null if there is none.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLLinkElement.Type">
            <summary>
            Gets or sets the MIME type of the linked resource.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLLIElement">
            <summary>
            The HTMLLIElement interface expose specific properties and methods (beyond those defined by regular HTMLElement interface it also has available to it by inheritance) for manipulating list elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLLIElement.Type">
            <summary>
            The type of the bullets, "disc", "square" or "circle". As the standard way of defining the list type is via the CSS list-style-type property, use the CSSOM methods to set it via a script.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLLIElement.Value">
            <summary>
            Indicates the ordinal position of the list element inside a given &lt;ol&gt;. It reflects the value attribute of the HTML &lt;li&gt; element, and can be smaller than 0. If the &lt;li&gt; element is not a child of an &lt;ol&gt; element, the property has no meaning.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLLegendElement">
            <summary>
            The HTMLLegendElement is an interface allowing to access properties of the &lt;legend&gt; elements. It inherits properties and methods from the HTMLElement interface.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLLegendElement.Form">
            <summary>
            The form that this legend belongs to. If the legend has a fieldset element as its parent, then this attribute returns the same value as the form attribute on the parent fieldset element. Otherwise, it returns null.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLImageElement">
            <summary>
            The HTMLImageElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of &lt;img&gt; elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLImageElement.Complete">
            <summary>
            True if the browser has fetched the image, and it is in a supported image type that was decoded without errors.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLImageElement.CrossOrigin">
            <summary>
            The CORS setting for this image element. See CORS settings attributes for details.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLImageElement.Height">
            <summary>
            Reflects the height HTML attribute, indicating the rendered height of the image in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLImageElement.IsMap">
            <summary>
            Reflects the ismap HTML attribute, indicating that the image is part of a server-side image map.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLImageElement.NaturalHeight">
            <summary>
            Intrinsic height of the image in CSS pixels, if it is available; otherwise, 0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLImageElement.NaturalWidth">
            <summary>
            Intrinsic width of the image in CSS pixels, if it is available; otherwise, 0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLImageElement.Src">
            <summary>
            Reflects the src HTML attribute, containing the full URL of the image including base URI.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLImageElement.SrcSet">
            <summary>
            The srcset attribute allows authors to provide a set of images to handle graphical displays of varying dimensions and pixel densities.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLImageElement.UseMap">
            <summary>
            Reflects the usemap HTML attribute, containing a partial URL of a map element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLImageElement.Width">
            <summary>
            Reflects the width HTML attribute, indicating the rendered width of the image in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLImageElement.X">
            <summary>
            The horizontal offset from the nearest layer. (Mimic an old Netscape 4 behavior)
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLImageElement.Y">
            <summary>
            The vertical offset from the nearest layer. (Mimic an old Netscape 4 behavior)
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLIFrameElement">
            <summary>
            The HTMLIFrameElement interface provides special properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of inline frame elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLIFrameElement.AllowFullScreen">
            <summary>
            Indicates whether or not the inline frame is willing to be placed into full screen mode. See Using full-screen mode for details.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLIFrameElement.ContentDocument">
            <summary>
            The active document in the inline frame's nested browsing context.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLIFrameElement.ContentWindow">
            <summary>
            The window proxy for the nested browsing context.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLIFrameElement.FrameBorder">
            <summary>
            Indicates whether to create borders between frames.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLIFrameElement.Height">
            <summary>
            Reflects the height HTML attribute, indicating the height of the frame.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLIFrameElement.LongDesc">
            <summary>
            URI of a long description of the frame.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLIFrameElement.MarginHeight">
            <summary>
            Height of the frame margin.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLIFrameElement.MarginWidth">
            <summary>
            Width of the frame margin.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLIFrameElement.Name">
            <summary>
            Reflects the name HTML attribute, containing a name by which to refer to the frame.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLIFrameElement.Sandbox">
            <summary>
            Reflects the sandbox HTML attribute, indicating extra restrictions on the behavior of the nested content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLIFrameElement.Scrolling">
            <summary>
            Indicates whether the browser should provide scrollbars for the frame.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLIFrameElement.Seamless">
            <summary>
            Reflects the seamless HTML attribute, indicating that the inline frame should be rendered seamlessly within the parent document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLIFrameElement.Src">
            <summary>
            Reflects the src HTML attribute, containing the address of the content to be embedded.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLIFrameElement.SrcDoc">
            <summary>
            The content to display in the frame.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLIFrameElement.Width">
            <summary>
            Reflects the width HTML attribute, indicating the width of the frame.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLHRElement">
            <summary>
            The HTMLHRElement interface provides special properties (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating &lt;hr&gt; elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLHRElement.Color">
            <summary>
            The name of the color of the rule.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLHRElement.NoShade">
            <summary>
            Sets the rule to have no shading.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLHRElement.Size">
            <summary>
            The height of the rule.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLHRElement.Width">
            <summary>
            The width of the rule on the page.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLHtmlElement">
            <summary>
            The HTMLHtmlElement interface serves as the root node for a given HTML document.  This object inherits the properties and methods described in the HTMLElement interface.
            You can retrieve the HTMLHtmlElement object for a given document by reading the value of the document.documentElement property.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLHeadElement">
            <summary>
            The HTMLHeadElement interface contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the HTMLElement interface.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLHeadingElement">
            <summary>
            The HTMLHeadingElement interface represents the different heading elements.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLHeadingElement.#ctor(Bridge.Html5.HeadingType)">
            <summary>
            Creates a heading element of the specified type
            </summary>
        </member>
        <member name="T:Bridge.Html5.HeadingType">
            <summary>
            Specifies the type of heading
            </summary>
        </member>
        <member name="F:Bridge.Html5.HeadingType.H1">
            <summary>
            <h1></h1>
            </summary>
        </member>
        <member name="F:Bridge.Html5.HeadingType.H2">
            <summary>
            <h2></h2>
            </summary>
        </member>
        <member name="F:Bridge.Html5.HeadingType.H3">
            <summary>
            <h3></h3>
            </summary>
        </member>
        <member name="F:Bridge.Html5.HeadingType.H4">
            <summary>
            <h4></h4>
            </summary>
        </member>
        <member name="F:Bridge.Html5.HeadingType.H5">
            <summary>
            <h5></h5>
            </summary>
        </member>
        <member name="F:Bridge.Html5.HeadingType.H6">
            <summary>
            <h6></h6>
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLLabelElement">
            <summary>
            The HTMLLabelElement interface gives access to properties specific to &lt;label&gt; elements. It inherits from HTMLElement.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLLabelElement.Control">
            <summary>
            The labeled control.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLLabelElement.Form">
            <summary>
            The form owner of this label.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLLabelElement.HtmlFor">
            <summary>
            The ID of the labeled control. Reflects the for attribute.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLKeygenElement">
            <summary>
            The &lt;keygen&gt; elements expose the HTMLKeygenElement interface, which provides special properties and methods (beyond the regular element object interface they also have available to them by inheritance) for manipulating the layout and presentation of keygen elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLKeygenElement.AutoFocus">
            <summary>
            Reflects the autofocus HTML attribute, which specifies that a form control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form element in a document can have the autofocus attribute. It cannot be applied if the type attribute is set to hidden (that is, you cannot automatically set focus to a hidden control).
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLKeygenElement.AutoSave">
            <summary>
            Reflects the autofocus HTML attribute, indicating that the form control should have input focus when the page loads.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLKeygenElement.Challenge">
            <summary>
            Reflects the challenge HTML attribute, containing a challenge string that is packaged with the submitted key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLKeygenElement.Disabled">
            <summary>
            Reflects the disabled HTML attribute, indicating that the control is not available for interaction.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLKeygenElement.Form">
            <summary>
            Indicates the control's form owner, reflecting the form HTML attribute if it is defined.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLKeygenElement.KeyType">
            <summary>
            Reflects the keytype HTML attribute, containing the type of key used.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLKeygenElement.Labels">
            <summary>
            A list of &lt;label&gt; elements that are labels for this element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLKeygenElement.Type">
            <summary>
            Must be the value keygen.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLKeygenElement.ValidationMessage">
            <summary>
            A localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (willValidate is false), or it satisfies its constraints.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLKeygenElement.Validity">
            <summary>
            The validity state that this element is in.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLKeygenElement.WillValidate">
            <summary>
            Indicates whether the element is a candidate for constraint validation. It is false if any conditions bar it from constraint validation.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLKeygenElement.Blur">
            <summary>
            Removes focus from input; keystrokes will subsequently go nowhere.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLKeygenElement.CheckValidity">
            <summary>
            Always returns true because keygen objects are never candidates for constraint validation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.HTMLKeygenElement.SetCustomValidity(System.String)">
            <summary>
            Sets a custom validity message for the element. If this message is not the empty string, then the element is suffering from a custom validity error, and does not validate.
            </summary>
            <param name="error"></param>
        </member>
        <member name="T:Bridge.Html5.HTMLParamElement">
            <summary>
            The HTMLParamElement interface provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating &lt;param&gt; elements, representing a pair of a key and a value that acts as a parameter for an &lt;object&gt; element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLParamElement.Name">
            <summary>
            Is a DOMString representing the name of the parameter. It reflects the name attribute.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLPreElement">
            <summary>
            The HTMLPreElement interface expose specific properties and methods (beyond those defined by regular HTMLElement interface it also has available to it by inheritance) for manipulating block of preformatted text.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLProgressElement">
            <summary>
            The HTMLProgressElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of &lt;progress&gt; elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLProgressElement.Max">
            <summary>
            Is a double value reflecting the content attribute of the same name, limited to numbers greater than zero. Its default value is 1.0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLProgressElement.Position">
            <summary>
            Returns a double value returning the result of dividing the current value (value) by the maximum value (max); if the progress bar is an indeterminate progress bar, it returns -1.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLProgressElement.Value">
            <summary>
            Is a double value returning  the current value; if the progress bar is an indeterminate progress bar, it returns 0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLProgressElement.Labels">
            <summary>
            Returns NodeList containing the list of &lt;label&gt; elements that are labels for this element.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLQuoteElement">
            <summary>
            The HTMLQuoteElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating quoting elements, like &lt;blockquote&gt; and &lt;q&gt;, but not the &lt;cite&gt; element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLQuoteElement.Cite">
            <summary>
            Reflects the cite HTML attribute, containing a URL for the source of the quotation.
            </summary>
        </member>
        <member name="T:Bridge.Html5.QuoteType">
            <summary>
            Specifies the type of quote: &lt;blockquote&gt; or &lt;q&gt;
            </summary>
        </member>
        <member name="F:Bridge.Html5.QuoteType.BlockQuote">
            <summary>
            &lt;blockquote&gt;&lt;/blockquote&gt;
            </summary>
        </member>
        <member name="F:Bridge.Html5.QuoteType.Q">
            <summary>
            &lt;q&gt;&lt;/q&gt;
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLScriptElement">
            <summary>
            HTML script elements expose the HTMLScriptElement interface, which provides special properties and methods (beyond the regular HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of &lt;script&gt; elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLScriptElement.Async">
            <summary>
            The async and defer attributes are boolean attributes that indicate how the script should be executed. The defer and async attributes must not be specified if the src attribute is not present.
            There are three possible modes that can be selected using these attributes. If the async attribute is present, then the script will be executed asynchronously, as soon as it is available. If the async attribute is not present but the defer attribute is present, then the script is executed when the page has finished parsing. If neither attribute is present, then the script is fetched and executed immediately, before the user agent continues parsing the page.
            Note: The exact processing details for these attributes are, for mostly historical reasons, somewhat non-trivial, involving a number of aspects of HTML. The implementation requirements are therefore by necessity scattered throughout the specification. These algorithms describe the core of this processing, but these algorithms reference and are referenced by the parsing rules for &lt;script&gt; start and end tags in HTML, in foreign content, and in XML, the rules for the document.write() method, the handling of scripting, etc.
            The defer attribute may be specified even if the async attribute is specified, to cause legacy Web browsers that only support defer (and not async) to fall back to the defer behavior instead of the synchronous blocking behavior that is the default.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLScriptElement.Charset">
            <summary>
            Represents the character encoding of the external script resource. It reflects the charset attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLScriptElement.CrossOrigin">
            <summary>
            Is a DOMString that corresponds to the CORS setting for this script element. See CORS settings attributes for details. It controls, for scripts that are obtained from other origins, whether error information will be exposed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLScriptElement.Defer">
            <summary>
            The async and defer attributes are boolean attributes that indicate how the script should be executed. The defer and async attributes must not be specified if the src attribute is not present.
            There are three possible modes that can be selected using these attributes. If the async attribute is present, then the script will be executed asynchronously, as soon as it is available. If the async attribute is not present but the defer attribute is present, then the script is executed when the page has finished parsing. If neither attribute is present, then the script is fetched and executed immediately, before the user agent continues parsing the page.
            Note: The exact processing details for these attributes are, for mostly historical reasons, somewhat non-trivial, involving a number of aspects of HTML. The implementation requirements are therefore by necessity scattered throughout the specification. These algorithms describe the core of this processing, but these algorithms reference and are referenced by the parsing rules for &lt;script&gt; start and end tags in HTML, in foreign content, and in XML, the rules for the document.write() method, the handling of scripting, etc.
            The defer attribute may be specified even if the async attribute is specified, to cause legacy Web browsers that only support defer (and not async) to fall back to the defer behavior instead of the synchronous blocking behavior that is the default.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLScriptElement.Text">
            <summary>
            The IDL attribute text must return a concatenation of the contents of all the Text nodes that are children of the &lt;script&gt; element (ignoring any other nodes such as comments or elements), in tree order. On setting, it must act the same way as the textContent IDL attribute.
            Note: When inserted using the document.write() method, &lt;script&gt; elements execute (typically synchronously), but when inserted using innerHTML and outerHTML attributes, they do not execute at all.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLScriptElement.Type">
            <summary>
            Represents the MIME type of the script. It reflects the type attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLScriptElement.Src">
            <summary>
            Represents gives the address of the external script resource to use. It reflects the src attribute.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLSelectElement">
            <summary>
            HTML &lt;select&gt; elements share all of the properties and methods of other HTML elements described in the element section. They also have the specialized interface HTMLSelectElement.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.AutoFocus">
            <summary>
            Reflects the autofocus HTML attribute, which indicates whether the control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.Disabled">
            <summary>
            Reflects the disabled HTML attribute, which indicates whether the control is disabled. If it is disabled, it does not accept clicks.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.Form">
            <summary>
            The form that this element is associated with. If this element is a descendant of a form element, then this attribute is the ID of that form element. If the element is not a descendant of a form element, then:
            HTML5 The attribute can be the ID of any form element in the same document.
            HTML 4 The attribute is null.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.Labels">
            <summary>
            A list of label elements associated with this select element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.Length">
            <summary>
            The number of &lt;option&gt; elements in this select element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.Multiple">
            <summary>
            Reflects the multiple HTML attribute, whichindicates whether multiple items can be selected.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.Name">
            <summary>
            Reflects the name HTML attribute, containing the name of this control used by servers and DOM search functions.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.Options">
            <summary>
            The set of &lt;option&gt; elements contained by this element. Read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.Required">
            <summary>
            Reflects the required HTML attribute, which indicates whether the user is required to select a value before submitting the form.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.SelectedIndex">
            <summary>
            The index of the first selected &lt;option&gt; element. The value -1 is returned if no element is selected.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.SelectedOptions">
            <summary>
            The set of options that are selected.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.Size">
            <summary>
            Reflects the size HTML attribute, which contains the number of visible items in the control. The default is 1, HTML5 unless multiple is true, in which case it is 4.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.Src">
            <summary>
            Reflects the src HTML attribute, which specifies a URI for the location of an image to display on the graphical submit button, if the value of type is image; otherwise it is ignored.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.Type">
            <summary>
            The form control's type. When multiple is true, it returns select-multiple; otherwise, it returns select-one. Read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.ValidationMessage">
            <summary>
            A localized message that describes the validation constraints that the control does not satisfy (if any). This attribute is the empty string if the control is not a candidate for constraint validation (willValidate is false), or it satisfies its constraints. Read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.Validity">
            <summary>
            The validity states that this control is in. Read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.Value">
            <summary>
            The value of this form control, that is, of the first selected option.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSelectElement.WillValidate">
            <summary>
            Indicates whether the button is a candidate for constraint validation. It is false if any conditions bar it from constraint validation. Read only.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLSelectElement.Add(Bridge.Html5.HTMLElement)">
            <summary>
            Adds an element to the collection of option elements for this select element.
            <param name="element">An item to add to the collection of options.</param>
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLSelectElement.Add(Bridge.Html5.HTMLElement,Bridge.Html5.HTMLElement)">
            <summary>
            Adds an element to the collection of option elements for this select element.
            <param name="element">An item to add to the collection of options.</param>
            <param name="beforeElement">An item that the new item should be inserted before. If this parameter is null, the new element is appended to the end of the collection.</param>
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLSelectElement.Add(Bridge.Html5.HTMLElement,System.Int32)">
            <summary>
            Adds an element to the collection of option elements for this select element.
            <param name="element">An item to add to the collection of options.</param>
            <param name="beforeIndex">An index of an item that the new item should be inserted before. If the index does not exist, the new element is appended to the end of the collection.</param>
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLSelectElement.CheckValidity">
            <summary>
            Checks whether the element has any constraints and whether it satisfies them. If the element fails its constraints, the browser fires a cancelable invalid event at the element (and returns false).
            </summary>
            <returns>A false value if the select element is a candidate for constraint evaluation and it does not satisfy its constraints. Returns true if the element is not constrained, or if it satisfies its constraints.</returns>
        </member>
        <member name="M:Bridge.Html5.HTMLSelectElement.GetItem(System.Int32)">
            <summary>
            Gets an item from the options collection for this select element. You can also access an item by specifying the index in array-style brackets or parentheses, without calling this method explicitly.
            <param name="index">The zero-based index into the collection of the option to get.</param>
            <returns>The node at the specified index, or null if such a node does not exist in the collection.</returns>
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLSelectElement.NamedItem(System.String)">
            <summary>
            Gets the item in the options collection with the specified name. The name string can match either the id or the name attribute of an option node. You can also access an item by specifying the name in array-style brackets or parentheses, without calling this method explicitly.
            </summary>
            <param name="name">The name of the option to get.</param>
            <returns>
                - An OptionElement, if there is exactly one match.
                - null if there are no matches.
                - An OptionsCollection in tree order of nodes whose name or id attributes match the specified name.</returns>
        </member>
        <member name="M:Bridge.Html5.HTMLSelectElement.Remove(System.Int32)">
            <summary>
            Removes the element at the specified index from the options collection for this select element.
            <param name="index">The zero-based index of the option element to remove from the collection.</param>
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLSelectElement.SetCustomValidity(System.String)">
            <summary>
            Sets the custom validity message for the selection element to the specified message. Use the empty string to indicate that the element does not have a custom validity error.
            </summary>
            <param name="error">The string to use for the custom validity message.</param>
        </member>
        <member name="T:Bridge.Html5.HTMLSourceElement">
            <summary>
            The HTMLSourceElement interface provides special properties (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating &lt;source&gt; elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSourceElement.Media">
            <summary>
            Reflects the media HTML attribute, containing the intended type of the media resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSourceElement.Src">
            <summary>
            Reflects the src HTML attribute, containing the URL for the media resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLSourceElement.Type">
            <summary>
            Reflects the type HTML attribute, containing the type of the media resource.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLStyleElement">
            <summary>
            The HTMLStyleElement interface represents a &lt;style&gt; element. It inherits properties and methods from its parent, HTMLElement, and from LinkStyle.
            This interface doesn't allow to manipulate the CSS it contains (in most case). To manipulate CSS, see Using dynamic styling information for an overview of the objects used to manipulate specified CSS properties using the DOM.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLStyleElement.Media">
            <summary>
            Is a DOMString representing the intended destination medium for style information.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLStyleElement.Type">
            <summary>
            Is a DOMString representing the type of style being applied by this statement.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLStyleElement.Disabled">
            <summary>
            Is a Boolean value, with true if the stylesheet is disabled, and false if not.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLStyleElement.Sheet">
            <summary>
            Returns the StyleSheet object associated with the given element, or null if there is none
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLTableCaptionElement">
            <summary>
            The HTMLTableCaptionElement interface special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating table caption elements.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLTableCellElement`1">
            <summary>
            The HTMLTableCellElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of table cells, either header or data cells, in an HTML document.
            The HTML elements implementing this interface: &lt;th&gt; and &lt;td&gt;.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type of all TableCellElement's events</typeparam>
        </member>
        <member name="F:Bridge.Html5.HTMLTableCellElement`1.ColSpan">
            <summary>
            Is an unsigned long that represents the number of columns this cell must span. It reflects the colspan attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTableCellElement`1.RowSpan">
            <summary>
            Is an unsigned long that represents the number of rows this cell must span. It reflects the rowspan attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTableCellElement`1.Headers">
            <summary>
            Is a DOMSettableTokenList describing a list of id of &lt;th&gt; elements that represents headers associated with the cell. It reflects the headers attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTableCellElement`1.CellIndex">
            <summary>
            Is a long representing the cell position in the cells collection of the &lt;tr&gt; it belongs to. If the cell doesn't belong to a &lt;tr&gt;, it returns -1.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TableCellElement">
            <summary>
            The non-generic TableCellElement class. Events' CurrentTarget has the TableCellElement type.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLTableColElement">
            <summary>
            The HTMLTableColElement interface provides special properties (beyond the HTMLElement interface it also has available to it inheritance) for manipulating single or grouped table column elements.
            The HTML element implementing this interface: &lt;col&gt; and &lt;colgroup&gt;.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTableColElement.Span">
            <summary>
            Reflects the span HTML attribute, indicating the number of columns to apply this object's attributes to. Must be a positive integer.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TableColumnType">
            <summary>
            Specifies the type of a table column. It can be a single &lt;col&gt; or a group &lt;colgroup&gt; column.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TableColumnType.Single">
            <summary>
            &lt;col&gt;&lt;/col&gt;
            </summary>
        </member>
        <member name="F:Bridge.Html5.TableColumnType.Group">
            <summary>
            &lt;colgroup&gt;&lt;/colgroup&gt;
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLTableElement">
            <summary>
            The HTMLTableElement interface provides special properties and methods (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating the layout and presentation of tables in an HTML document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTableElement.Caption">
            <summary>
            Is an HTMLTableCaptionElement representing the first &lt;caption&gt; that is a child of the element, or null if none is found. When set, if the object doesn't represent a &lt;caption&gt;, a DOMException with the HierarchyRequestError name is thrown. If a correct object is given, it is inserted in the tree as the first child of this element and the first &lt;caption&gt; that is a child of this element is removed from the tree, if any.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTableElement.THead">
            <summary>
            Is an HTMLTableSectionElement representing the first &lt;thead&gt; that is a child of the element, or null if none is found. When set, if the object doesn't represent a &lt;thead&gt;, a DOMException with the HierarchyRequestError name is thrown. If a correct object is given, it is inserted in the tree immediately before the first element that is neither a &lt;caption&gt;, nor a &lt;colgroup&gt;, or as the last child if there is no such element, and the first &lt;thead&gt; that is a child of this element is removed from the tree, if any.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTableElement.TFoot">
            <summary>
            Is an HTMLTableSectionElement representing the first &lt;tfoot&gt; that is a child of the element, or null if none is found. When set, if the object doesn't represent a &lt;tfoot&gt;, a DOMException with the HierarchyRequestError name is thrown. If a correct object is given, it is inserted in the tree immediately before the first element that is neither a &lt;caption&gt;, a &lt;colgroup&gt;, nor a &lt;thead&gt;, or as the last child if there is no such element, and the first &lt;tfoot&gt; that is a child of this element is removed from the tree, if any.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTableElement.Rows">
            <summary>
            Returns a live HTMLCollection containing all the rows of the element, that is all &lt;tr&gt; that are a child of the element, or a child or one of its &lt;thead&gt;, &lt;tbody&gt; and &lt;tfoot&gt; children. The rows members of a &lt;thead&gt; appear first, in tree order, and those members of a &lt;tbody&gt; last, also in tree order. The HTMLCollection is live and is automatically updated when the HTMLTableElement changes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTableElement.TBodies">
            <summary>
            Returns a live HTMLCollection containing all the &lt;tbody&gt; of the element. The HTMLCollection is live and is automatically updated when the HTMLTableElement changes.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLTableElement.CreateTHead">
            <summary>
            Returns an HTMLElement representing the first &lt;thead&gt; that is a child of the element. If none is found, a new one is created and inserted in the tree immediately before the first element that is neither a &lt;caption&gt;, nor a &lt;colgroup&gt;, or as the last child if there is no such element.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLTableElement.DeleteTHead">
            <summary>
            Removes the first &lt;thead&gt; that is a child of the element.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLTableElement.CreateTFoot">
            <summary>
            Returns an HTMLElement representing the first &lt;tfoot&gt; that is a child of the element. If none is found, a new one is created and inserted in the tree immediately before the first element that is neither a &lt;caption&gt;, a &lt;colgroup&gt;, nor a &lt;thead&gt;, or as the last child if there is no such element.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLTableElement.DeleteTFoot">
            <summary>
            Removes the first &lt;tfoot&gt; that is a child of the element.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLTableElement.CreateCaption">
            <summary>
            Returns an HTMLElement representing the first &lt;caption&gt; that is a child of the element. If none is found, a new one is created and inserted in the tree as the first child of the &lt;table&gt; element.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLTableElement.DeleteCaption">
            <summary>
            Removes the first &lt;caption&gt; that is a child of the element.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLTableElement.InsertRow(System.Int32)">
            <summary>
            Inserts a new row in the table and returns a reference to the row.
            If index is -1 or equal to the number of rows, the row is appended as the last row. If index is greater than the number of rows, an IndexSizeError exception will result.
            If index is omitted it defaults to -1.
            If a table has multiple tbody elements, by default, the new row is inserted into the last tbody.
            </summary>
            <param name="index">The row index of the new row. Defaults to -1.</param>
            <returns>Returns the TableRowElement representing the new row of the table.</returns>
        </member>
        <member name="M:Bridge.Html5.HTMLTableElement.DeleteRow(System.Int32)">
            <summary>
            Removes the row corresponding to the index given in parameter. If the index value is -1 the last row is removed; if it smaller than -1 or greater than the amount of rows in the collection, a DOMException with the value IndexSizeError is raised.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLTableHeaderCellElement">
            <summary>
            The HTMLTableHeaderCellElement interface provides special properties and methods (beyond the regular HTMLTableCellElement and HTMLElement interfaces it also has available to it by inheritance) for manipulating the layout and presentation of table header cells in an HTML document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTableHeaderCellElement.Abbr">
            <summary>
            Is a DOMString containing a name used to refer to this cell in other context. It reflects the abbr attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTableHeaderCellElement.Scope">
            <summary>
            Is a DOMString representing an enumerated value indicating which cells the header cell applies to.
            It reflects the scope attribute and has one of the following values: "row", "col", "colgroup", or "rowgroup". If the attribute is in the auto state, or if an invalid value is set for the attribute, scope will be returns the empty string, "".
            </summary>
        </member>
        <member name="T:Bridge.Html5.TableHeaderCellScope">
            <summary>
            The scope attribute specifies whether a header cell is a header for a column, row, or group of columns or rows.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TableHeaderCellScope.Col">
            <summary>
            Specifies that the cell is a header for a column
            </summary>
        </member>
        <member name="F:Bridge.Html5.TableHeaderCellScope.Row">
            <summary>
            Specifies that the cell is a header for a row
            </summary>
        </member>
        <member name="F:Bridge.Html5.TableHeaderCellScope.ColGroup">
            <summary>
            Specifies that the cell is a header for a group of columns
            </summary>
        </member>
        <member name="F:Bridge.Html5.TableHeaderCellScope.RowGroup">
            <summary>
            Specifies that the cell is a header for a group of rows
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLTableDataCellElement">
            <summary>
            The HTMLTableDataCellElement interface provides special properties and methods (beyond the regular HTMLTableCellElement and HTMLElement interfaces it also has available to it by inheritance) for manipulating the layout and presentation of table data cells in an HTML document.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLTableRowElement">
            <summary>
            The HTMLTableRowElement interface provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of rows in an HTML table.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTableRowElement.Cells">
            <summary>
            Returns a live HTMLCollection containing the cells in the row. The HTMLCollection is live and is automatically updated when cells are added or removed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTableRowElement.RowIndex">
            <summary>
            Returns a long value which gives the logical position of the row within the entire table. If the row is not part of a table, returns -1.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTableRowElement.SectionRowIndex">
            <summary>
            Returns a long value which gives the logical position of the row within the table section it belongs to. If the row is not part of a section, returns -1.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLTableRowElement.DeleteCell(System.Int32)">
            <summary>
            Removes the cell at the given position in the row. If the given position is greater (or equal as it starts at zero) than the amount of cells in the row, or is smaller than 0, it raises a DOMException with the IndexSizeError value.
            <param name="index">The position of the cell in the row</param>
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLTableRowElement.InsertCell(System.Int32)">
            <summary>
            Inserts a new cell into a table row and returns a reference to the cell.
            If index is -1 or equal to the number of cells, the cell is appended as the last cell in the row.
            If index is greater than the number of cells, an IndexSizeError exception will result.
            If index is omitted it defaults to -1.
            <param name="index">The cell index of the new cell. Defaults to -1.</param>
            <returns>Returns the TableDataCellElement representing the new cell of the row.</returns>
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLTableSectionElement">
            <summary>
            The HTMLTableSectionElement interface provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies, in an HTML table.
            The HTML elements implementing this interface: &lt;tfoot&gt;, &lt;thead&gt;, and &lt;tbody&gt;.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTableSectionElement.Rows">
            <summary>
            Returns a live HTMLCollection containing the rows in the section. The HTMLCollection is live and is automatically updated when rows are added or removed.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLTableSectionElement.DeleteRow(System.Int32)">
            <summary>
            Removes the cell at the given position in the section. If the given position is greater (or equal as it starts at zero) than the amount of rows in the section, or is smaller than 0, it raises a DOMException with the IndexSizeError value.
            </summary>
            <param name="index">The position of the row to delete</param>
        </member>
        <member name="M:Bridge.Html5.HTMLTableSectionElement.InsertRow(System.Int32)">
            <summary>
            Inserts a new row just before the given position in the section.
            If the given position is -1, it appends the row to the end of section.
            If the given position is greater (or equal as it starts at zero) than the amount of rows in the section, or is smaller than -1, it raises a DOMException with the IndexSizeError value.
            </summary>
            <param name="index">The possition of a new row to insert</param>
            <returns>Returns a TableRowElement object that represents a new row added to a table element.</returns>
        </member>
        <member name="T:Bridge.Html5.TableSectionType">
            <summary>
            Specifies the type of a table section. It can be a footer &lt;tfoot&gt;, a header &lt;thead&gt; or a body &lt;tbody&gt; section.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TableSectionType.Body">
            <summary>
            &lt;tbody&gt;&lt;/tbody&gt;
            </summary>
        </member>
        <member name="F:Bridge.Html5.TableSectionType.Footer">
            <summary>
            &lt;tfoot&gt;&lt;/tfoot&gt;
            </summary>
        </member>
        <member name="F:Bridge.Html5.TableSectionType.Header">
            <summary>
            &lt;thead&gt;&lt;/thead&gt;
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLTextAreaElement">
            <summary>
            The HTMLTextAreaElement interface, which provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of &lt;textarea&gt; elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.AutoFocus">
            <summary>
            Reflects the autofocus HTML attribute, which specifies that a form control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form element in a document can have the autofocus attribute. It cannot be applied if the type attribute is set to hidden (that is, you cannot automatically set focus to a hidden control).
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.Cols">
            <summary>
            Reflects the cols HTML attribute, indicating the visible width of the text area.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.DefaultValue">
            <summary>
            The default value as originally specified in HTML that created this object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.Disabled">
            <summary>
            Reflects the disabled HTML attribute, indicating that the control is not available for interaction. The input values will not be submitted with the form. See also readonly
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.Form">
            <summary>
            The containing form element, if this element is in a form. If this element is not contained in a form element:
            HTML5 this can be the id attribute of any &lt;form&gt; element in the same document. Even if the attribute is set on &lt;input&gt;, this property will be null, if it isn't the id of a &lt;form&gt; element.
            HTML 4 this must be null.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.MaxLength">
            <summary>
            Reflects the maxlength HTML attribute, containing the maximum length of text (in Unicode code points) that the value can be changed to. The constraint is evaluated only when the value is changed
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.Name">
            <summary>
            Reflects the name HTML attribute, containing a name that identifies the element when submitting the form.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.Placeholder">
            <summary>
            Reflects the placeholder HTML attribute, containing a hint to the user of what can be entered in the control. The placeholder text must not contain carriage returns or line-feeds. This attribute applies when the value of the type attribute is text, search, tel, url or email; otherwise it is ignored.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.ReadOnly">
            <summary>
            Reflects the readonly HTML attribute, indicating that the user cannot modify the value of the control.
            HTML5This is ignored if the value of the type attribute is hidden, range, color, checkbox, radio, file, or a button type.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.Required">
            <summary>
            Reflects the required HTML attribute, indicating that the user must fill in a value before submitting a form.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.Rows">
            <summary>
            Reflects the rows HTML attribute, indicating the number of visible text lines for the control.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.SelectionDirection">
            <summary>
            The direction in which selection occurred. This is "forward" if selection was performed in the start-to-end direction of the current locale, or "backward" for the opposite direction. This can also be "none" if the direction is unknown."
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.SelectionEnd">
            <summary>
            The index of the end of selected text.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.SelectionStart">
            <summary>
            The index of the beginning of selected text. When nothing is selected, this is also the caret position inside of the input element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.Type">
            <summary>
            The string textarea.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.ValidationMessage">
            <summary>
            A localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (willvalidate is false), or it satisfies its constraints.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.Validity">
            <summary>
            The validity state that this element is in.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.Value">
            <summary>
            The raw value contained in the control.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.WillValidate">
            <summary>
            Indicates whether the element is a candidate for constraint validation. It is false if any conditions bar it from constraint validation.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTextAreaElement.Wrap">
            <summary>
            Reflects the wrap HTML attribute, indicating how the control wraps text. If this attribute is not specified, soft is its default value.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLTextAreaElement.CheckValidity">
            <summary>
            Returns false if the button is a candidate for constraint validation, and it does not satisfy its constraints. In this case, it also fires an invalid event at the control. It returns true if the control is not a candidate for constraint validation, or if it satisfies its constraints.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.HTMLTextAreaElement.Select">
            <summary>
            Selects the contents of the control.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLTextAreaElement.SetCustomValidity(System.String)">
            <summary>
            Sets a custom validity message for the element. If this message is not the empty string, then the element is suffering from a custom validity error, and does not validate.
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:Bridge.Html5.HTMLTextAreaElement.SetSelectionRange(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the element (but does not focus it). The optional selectionDirection parameter may be "forward" or "backward" to establish the direction in which selection was set, or "none" if the direction is unknown or not relevant. The default is "none". Specifying a selectionDirection parameter sets the value of the selectionDirection property.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:Bridge.Html5.HTMLTextAreaElement.SetSelectionRange(System.Int32,System.Int32,System.String)">
            <summary>
            Selects a range of text in the element (but does not focus it). The optional selectionDirection parameter may be "forward" or "backward" to establish the direction in which selection was set, or "none" if the direction is unknown or not relevant. The default is "none". Specifying a selectionDirection parameter sets the value of the selectionDirection property.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="direction"></param>
        </member>
        <member name="M:Bridge.Html5.HTMLTextAreaElement.SetRangeText(System.String)">
            <summary>
            Replaces a range of text with the new text. Supported input types: text, search, url, tel, password.
            </summary>
            <param name="replacement"></param>
        </member>
        <member name="M:Bridge.Html5.HTMLTextAreaElement.SetRangeText(System.String,System.Int32,System.Int32)">
            <summary>
            Replaces a range of text with the new text. Supported input types: text, search, url, tel, password.
            </summary>
            <param name="replacement"></param>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:Bridge.Html5.HTMLTextAreaElement.SetRangeText(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Replaces a range of text with the new text. Supported input types: text, search, url, tel, password.
            </summary>
            <param name="replacement"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="selectMode"></param>
        </member>
        <member name="T:Bridge.Html5.Wrap">
            <summary>
            Indicates how the control wraps text.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Wrap.Hard">
            <summary>
            The browser automatically inserts line breaks (CR+LF) so that each line has no more than the width of the control; the cols attribute must be specified.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Wrap.Soft">
            <summary>
            The browser ensures that all line breaks in the value consist of a CR+LF pair, but does not insert any additional line breaks.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLSpanElement">
            <summary>
            The HTMLSpanElement interface represents a &lt;span&gt; element and derives from the HTMLElement interface, but without implementing any additional properties or methods.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLDivElement">
            <summary>
            The HTMLDivElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating div elements.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLFormElement">
            <summary>
            The HTMLFormElement interface provides methods to create and modify &lt;form&gt; elements; it inherits from properties and methods of the HTMLElement interface.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFormElement.AcceptCharset">
            <summary>
            Reflects the accept-charset HTML attribute, containing a list of character encodings that the server accepts.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFormElement.Action">
            <summary>
            Reflects the action HTML attribute, containing the URI of a program that processes the information submitted by the form.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFormElement.AutoComplete">
            <summary>
            Reflects the autocomplete HTML attribute, containing a string that indicates whether the controls in this form can have their values automatically populated by the browser.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFormElement.Elements">
            <summary>
            All the form controls belonging to this form element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFormElement.Encoding">
            <summary>
            The HTMLFormElement.enctype property represents the content type of the form element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFormElement.Enctype">
            <summary>
            Reflects the enctype HTML attribute, indicating the type of content that is used to transmit the form to the server. Only specified values can be set.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFormElement.Length">
            <summary>
            The number of controls in the form.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFormElement.Method">
            <summary>
            Reflects the method HTML attribute, indicating the HTTP method used to submit the form. Only specified values can be set.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFormElement.Name">
            <summary>
            Reflects the name HTML attribute, containing the name of the form.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFormElement.NoValidate">
            <summary>
            Reflects the novalidate HTML attribute, indicating that the form should not be validated.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLFormElement.Target">
            <summary>
            Reflects the target HTML attribute, indicating where to display the results received from submitting the form.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLFormElement.CheckValidity">
            <summary>
            Returns true if all controls that are subject to constraint validation satisfy their constraints, or false if some controls do not satisfy their constraints. Fires an event named invalid at any control that does not satisfy its constraints; such controls are considered invalid if the event is not canceled.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLFormElement.Submit">
            <summary>
            Submits the form to the server.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLFormElement.Reset">
            <summary>
            Resets the forms to its initial state.
            </summary>
        </member>
        <member name="P:Bridge.Html5.HTMLFormElement.Item(System.Int32)">
            <summary>
            Gets the item in the elements collection at the specified index, or null if there is no item at that index. You can also specify the index in array-style brackets or parentheses after the form object name, without calling this method explicitly.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Bridge.Html5.HTMLFormElement.Item(System.String)">
            <summary>
            Gets the item or list of items in elements collection whose name or id match the specified name, or null if no items match. You can also specify the name in array-style brackets or parentheses after the form object name, without calling this method explicitly.
            </summary>
            <param name="name">The name to match the Elements' name and id</param>
            <returns>An Element or an HTMLCollection</returns>
        </member>
        <member name="M:Bridge.Html5.HTMLFormElement.GetItem(System.Int32)">
            <summary>
            Gets the item in the elements collection at the specified index, or null if there is no item at that index. You can also specify the index in array-style brackets or parentheses after the form object name, without calling this method explicitly.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.HTMLFormElement.NamedItem(System.String)">
            <summary>
            Gets the item or list of items in elements collection whose name or id match the specified name, or null if no items match. You can also specify the name in array-style brackets or parentheses after the form object name, without calling this method explicitly.
            </summary>
            <param name="name">The name to match the Elements' name and id</param>
            <returns>An Element or an HTMLCollection</returns>
        </member>
        <member name="T:Bridge.Html5.HTMLAnchorElement">
            <summary>
            The HTMLAnchorElement interface represents hyperlink elements and provides special properties and methods (beyond those of the regular HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of such elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Charset">
            <summary>
            Is a DOMString representing the character encoding of the linked resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Coords">
            <summary>
            Is a DOMString representing a comma-separated list of coordinates.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Download">
            <summary>
            Is a DOMString indicating that the linked resource is intended to be downloaded rather than displayed in the browser. The value represent the proposed name of the file. If the name is not a valid filename of the underlying OS, browser will adapt it. The value is a URL with a scheme like http:, file:, data: or even blob: (created with URL.createObjectURL).
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Hash">
            <summary>
            Is a DOMString that reflects the href HTML attribute, containing a valid URL of a linked resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Host">
            <summary>
            Is a DOMString representing the hostname and port (if it's not the default port) in the referenced URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Hostname">
            <summary>
            Is a DOMString representing the hostname in the referenced URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Href">
            <summary>
            Is a DOMString that reflects the href HTML attribute, containing a valid URL of a linked resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Hreflang">
            <summary>
            Is a DOMString that reflects the hreflang HTML attribute, indicating the language of the linked resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Media">
            <summary>
            Is a DOMString that reflects the media HTML attribute, indicating the intended media for the linked resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Name">
            <summary>
            Is a DOMString representing the anchor name.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Password">
            <summary>
            Is a DOMString containing the password specified before the domain name.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Origin">
            <summary>
            Returns a DOMString containing the origin of the URL, that is its scheme, its domain and its port.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Pathname">
            <summary>
            Is a DOMString representing the path name component, if any, of the referenced URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Port">
            <summary>
            Is a DOMString representing the port component, if any, of the referenced URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Protocol">
            <summary>
            Is a DOMString representing the protocol component, including trailing colon (':'), of the referenced URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Rel">
            <summary>
            Is a DOMString that reflects the rel HTML attribute, specifying the relationship of the target object to the link object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.RelList">
            <summary>
            Returns a DOMTokenList that reflects the rel HTML attribute, as a list of tokens.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Rev">
            <summary>
            Is a DOMString representing that the rev HTML attribute, specifying the relationship of the link object to the target object
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Search">
            <summary>
            Is a DOMString representing tThe search element, including leading question mark ('?'), if any, of the referenced URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.SearchParams">
            <summary>
            The URLUtils.searchParams property is a URLSearchParams containing the query/search parameters of the URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Shape">
            <summary>
            Is a DOMString representing the shape of the active area.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Target">
            <summary>
            Is a DOMString that reflects the target HTML attribute, indicating where to display the linked resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Text">
            <summary>
            Is a DOMString being a synonym for the Node.textContent property.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Type">
            <summary>
            Is a DOMString that reflects the type HTML attribute, indicating the MIME type of the linked resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLAnchorElement.Username">
            <summary>
            Is a DOMString containing the username specified before the domain name.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLButtonElement">
            <summary>
            The HTMLButtonElement interface provides properties and methods (beyond the button object interface it also has available to them by inheritance) for manipulating the layout and presentation of button elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLButtonElement.AutoFocus">
            <summary>
            The control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLButtonElement.Disabled">
            <summary>
            The control is disabled, meaning that it does not accept any clicks.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLButtonElement.Form">
            <summary>
            The form that this button is associated with. If the button is a descendant of a form element, then this attribute is the ID of that form element.
            If the button is not a descendant of a form element, then the attribute can be the ID of any form element in the same document it is related to, or the null value if none matches.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLButtonElement.FormAction">
            <summary>
            The URI of a resource that processes information submitted by the button. If specified, this attribute overrides the action attribute of the &lt;form&gt; element that owns this element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLButtonElement.FormEncType">
            <summary>
            The type of content that is used to submit the form to the server. If specified, this attribute overrides the enctype attribute of the &lt;form&gt; element that owns this element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLButtonElement.FormMethod">
            <summary>
            The HTTP method that the browser uses to submit the form. If specified, this attribute overrides the method attribute of the &lt;form&gt; element that owns this element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLButtonElement.FormNoValidate">
            <summary>
            Indicates that the form is not to be validated when it is submitted. If specified, this attribute overrides the enctype attribute of the &lt;form&gt; element that owns this element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLButtonElement.FormTarget">
            <summary>
            A name or keyword indicating where to display the response that is received after submitting the form. If specified, this attribute overrides the target attribute of the &lt;form&gt; element that owns this element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLButtonElement.Labels">
            <summary>
            A list of &lt;label&gt; elements that are labels for this button.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLButtonElement.Name">
            <summary>
            The name of the object when submitted with a form. HTML5 If specified, it must not be the empty string.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLButtonElement.Type">
            <summary>
            Indicates the behavior of the button.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLButtonElement.ValidationMessage">
            <summary>
            A localized message that describes the validation constraints that the control does not satisfy (if any). This attribute is the empty string if the control is not a candidate for constraint validation (willValidate is false), or it satisfies its constraints.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLButtonElement.Validity">
            <summary>
            The validity states that this button is in.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLButtonElement.Value">
            <summary>
            The current form control value of the button.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLButtonElement.WillValidate">
            <summary>
            Indicates whether the button is a candidate for constraint validation. It is false if any conditions bar it from constraint validation.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLInputElement">
            <summary>
            The HTMLInputElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of input elements.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Accept">
            <summary>
            If the value of the type attribute is file, this attribute indicates the types of files that the server accepts; otherwise it is ignored. The value must be a comma-separated list of unique content type specifiers:
            A file extension starting with the STOP character (U+002E). (E.g.: ".jpg,.png,.doc")
            A valid MIME type with no extensions
            audio/* representing sound files HTML5
            video/* representing video files HTML5
            image/* representing image files HTML5
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Alt">
            <summary>
            Reflects the alt HTML attribute, containing alternative text to use when type is image.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.AutoComplete">
            <summary>
            Reflects the autocomplete HTML attribute, indicating whether the value of the control can be automatically completed by the browser. Ignored if the value of the type attribute is hidden, checkbox, radio, file, or a button type (button, submit, reset, image).
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.AutoFocus">
            <summary>
            Reflects the autofocus HTML attribute, which specifies that a form control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form element in a document can have the autofocus attribute. It cannot be applied if the type attribute is set to hidden (that is, you cannot automatically set focus to a hidden control).
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.AutoSave">
            <summary>
            This attribute should be defined as a unique value. If the value of the type attribute is search, previous search term values will persist in the dropdown across page load.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Checked">
            <summary>
            The current state of the element when type is checkbox or radio.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.DefaultChecked">
            <summary>
            The default state of a radio button or checkbox as originally specified in HTML that created this object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.DefaultValue">
            <summary>
            The default value as originally specified in HTML that created this object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Disabled">
            <summary>
            Reflects the disabled HTML attribute, indicating that the control is not available for interaction. The input values will not be submitted with the form. See also readonly
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Files">
            <summary>
            A list of selected files.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Form">
            <summary>
            The containing form element, if this element is in a form. If this element is not contained in a form element:
            HTML5 this can be the id attribute of any &lt;form&gt; element in the same document. Even if the attribute is set on &lt;input&gt;, this property will be null, if it isn't the id of a &lt;form&gt; element.
            HTML 4 this must be null.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.FormAction">
            <summary>
            Reflects the formaction HTML attribute, containing the URI of a program that processes information submitted by the element. If specified, this attribute overrides the action attribute of the &lt;form&gt; element that owns this element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.FormEncType">
            <summary>
            Reflects the formenctype HTML attribute, containing the type of content that is used to submit the form to the server. If specified, this attribute overrides the enctype attribute of the &lt;form&gt; element that owns this element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.FormMethod">
            <summary>
            Reflects the formmethod HTML attribute, containing the HTTP method that the browser uses to submit the form. If specified, this attribute overrides the method attribute of the &lt;form&gt; element that owns this element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.FormNoValidate">
            <summary>
            Reflects the formnovalidate HTML attribute, indicating that the form is not to be validated when it is submitted. If specified, this attribute overrides the novalidate attribute of the &lt;form&gt; element that owns this element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.FormTarget">
            <summary>
            Reflects the formtarget HTML attribute, containing a name or keyword indicating where to display the response that is received after submitting the form. If specified, this attribute overrides the target attribute of the form element that owns this element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Height">
            <summary>
            Reflects the height HTML attribute, which defines the height of the image displayed for the button, if the value of type is image.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Indeterminate">
            <summary>
            Indicates that a checkbox is neither on nor off.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Labels">
            <summary>
            A list of &lt;label&gt; elements that are labels for this element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.List">
            <summary>
            Identifies a list of pre-defined options to suggest to the user. The value must be the id of a &lt;datalist&gt; element in the same document. The browser displays only options that are valid values for this input element. This attribute is ignored when the type attribute's value is hidden, checkbox, radio, file, or a button type.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Max">
            <summary>
            Reflects the max HTML attribute, containing the maximum (numeric or date-time) value for this item, which must not be less than its minimum (min attribute) value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.MaxLength">
            <summary>
            Reflects the maxlength HTML attribute, containing the maximum length of text (in Unicode code points) that the value can be changed to. The constraint is evaluated only when the value is changed
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Min">
            <summary>
            Reflects the min HTML attribute, containing the minimum (numeric or date-time) value for this item, which must not be greater than its maximum (max attribute) value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Multiple">
            <summary>
            Reflects the multiple HTML attribute, indicating whether more than one value is possible (e.g., multiple files).
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Name">
            <summary>
            Reflects the name HTML attribute, containing a name that identifies the element when submitting the form.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Pattern">
            <summary>
            Reflects the pattern HTML attribute, containing a regular expression that the control's value is checked against. The pattern must match the entire value, not just some subset. Use the title attribute to describe the pattern to help the user. This attribute applies when the value of the type attribute is text, search, tel, url or email; otherwise it is ignored.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Placeholder">
            <summary>
            Reflects the placeholder HTML attribute, containing a hint to the user of what can be entered in the control. The placeholder text must not contain carriage returns or line-feeds. This attribute applies when the value of the type attribute is text, search, tel, url or email; otherwise it is ignored.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.ReadOnly">
            <summary>
            Reflects the readonly HTML attribute, indicating that the user cannot modify the value of the control.
            HTML5This is ignored if the value of the type attribute is hidden, range, color, checkbox, radio, file, or a button type.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Required">
            <summary>
            Reflects the required HTML attribute, indicating that the user must fill in a value before submitting a form.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.SelectionDirection">
            <summary>
            The direction in which selection occurred. This is "forward" if selection was performed in the start-to-end direction of the current locale, or "backward" for the opposite direction. This can also be "none" if the direction is unknown."
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.SelectionEnd">
            <summary>
            The index of the end of selected text.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.SelectionStart">
            <summary>
            The index of the beginning of selected text. When nothing is selected, this is also the caret position inside of the input element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Size">
            <summary>
            Reflects the size HTML attribute, containing size of the control. This value is in pixels unless the value of type is text or password, in which case, it is an integer number of characters. HTML5 Applies only when type is set to text, search, tel, url, email, or password; otherwise it is ignored.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Src">
            <summary>
            Reflects the src HTML attribute, which specifies a URI for the location of an image to display on the graphical submit button, if the value of type is image; otherwise it is ignored.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Step">
            <summary>
            Reflects the step HTML attribute, which works with min and max to limit the increments at which a numeric or date-time value can be set. It can be the string any or a positive floating point number. If this is not set to any, the control accepts only values at multiples of the step value greater than the minimum.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.TabIndex">
            <summary>
            The position of the element in the tabbing navigation order for the current document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Type">
            <summary>
            Reflects the type HTML attribute, indicating the type of control to display.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.UseMap">
            <summary>
            A client-side image map.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.ValidationMessage">
            <summary>
            A localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (willvalidate is false), or it satisfies its constraints.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Validity">
            <summary>
            The validity state that this element is in.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Value">
            <summary>
            Current value in the control.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.ValueAsDate">
            <summary>
            The value of the element, interpreted as a date, or null if conversion is not possible.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.ValueAsNumber">
            <summary>
            The value of the element, interpreted as one of the following in order:
            a time value
            a number
            null if conversion is not possible
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.Width">
            <summary>
            Reflects the width HTML attribute, which defines the width of the image displayed for the button, if the value of type is image.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLInputElement.WillValidate">
            <summary>
            Indicates whether the element is a candidate for constraint validation. It is false if any conditions bar it from constraint validation.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLInputElement.Blur">
            <summary>
            Removes focus from input; keystrokes will subsequently go nowhere.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLInputElement.CheckValidity">
            <summary>
            Returns false if the element is a candidate for constraint validation, and it does not satisfy its constraints. In this case, it also fires an invalid event at the element. It returns true if the element is not a candidate for constraint validation, or if it satisfies its constraints.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.HTMLInputElement.Click">
            <summary>
            Simulates a click on the element.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLInputElement.Focus">
            <summary>
            Focus on input; keystrokes will subsequently go to this element.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLInputElement.Select">
            <summary>
            Selects the input text in the element, and focuses it so the user can subsequently replace the whole entry.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLInputElement.SetCustomValidity(System.String)">
            <summary>
            Sets a custom validity message for the element. If this message is not the empty string, then the element is suffering from a custom validity error, and does not validate.
            </summary>
            <param name="error">The custom validity message</param>
        </member>
        <member name="M:Bridge.Html5.HTMLInputElement.SetSelectionRange(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the element (but does not focus it). The optional selectionDirection parameter may be "forward" or "backward" to establish the direction in which selection was set, or "none" if the direction is unknown or not relevant. The default is "none". Specifying a selectionDirection parameter sets the value of the selectionDirection property.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:Bridge.Html5.HTMLInputElement.SetSelectionRange(System.Int32,System.Int32,System.String)">
            <summary>
            Selects a range of text in the element (but does not focus it). The optional selectionDirection parameter may be "forward" or "backward" to establish the direction in which selection was set, or "none" if the direction is unknown or not relevant. The default is "none". Specifying a selectionDirection parameter sets the value of the selectionDirection property.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="direction"></param>
        </member>
        <member name="M:Bridge.Html5.HTMLInputElement.SetRangeText(System.String)">
            <summary>
            Replaces a range of text with the new text. Supported input types: text, search, url, tel, password.
            </summary>
            <param name="replacement"></param>
        </member>
        <member name="M:Bridge.Html5.HTMLInputElement.SetRangeText(System.String,System.Int32,System.Int32)">
            <summary>
            Replaces a range of text with the new text. Supported input types: text, search, url, tel, password.
            </summary>
            <param name="replacement"></param>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:Bridge.Html5.HTMLInputElement.SetRangeText(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Replaces a range of text with the new text. Supported input types: text, search, url, tel, password.
            </summary>
            <param name="replacement"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="selectMode"></param>
        </member>
        <member name="M:Bridge.Html5.HTMLInputElement.StepDown">
            <summary>
            Decrements the value by (step * n), where n defaults to 1 if not specified. Throws an INVALID_STATE_ERR exception:
            if the method is not applicable to for the current type value.
            if the element has no step value.
            if the value cannot be converted to a number.
            if the resulting value is above the max or below the min.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLInputElement.StepDown(System.Int32)">
            <summary>
            Decrements the value by (step * n), where n defaults to 1 if not specified. Throws an INVALID_STATE_ERR exception:
            if the method is not applicable to for the current type value.
            if the element has no step value.
            if the value cannot be converted to a number.
            if the resulting value is above the max or below the min.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLInputElement.StepUp">
            <summary>
            Increments the value by (step * n), where n defaults to 1 if not specified. Throws an INVALID_STATE_ERR exception:
            if the method is not applicable to for the current type value.
            if the element has no step value.
            if the value cannot be converted to a number.
            if the resulting value is above the max or below the min.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLInputElement.StepUp(System.Int32)">
            <summary>
            Increments the value by (step * n), where n defaults to 1 if not specified. Throws an INVALID_STATE_ERR exception:
            if the method is not applicable to for the current type value.
            if the element has no step value.
            if the value cannot be converted to a number.
            if the resulting value is above the max or below the min.
            </summary>
        </member>
        <member name="T:Bridge.Html5.AutoComplete">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.AutoComplete.Off">
            <summary>
            The user must explicitly enter a value into this field for every use, or the document provides its own auto-completion method; the browser does not automatically complete the entry.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AutoComplete.On">
            <summary>
            The browser can automatically complete the value based on values that the user has entered during previous uses.
            </summary>
        </member>
        <member name="T:Bridge.Html5.ButtonType">
            <summary>
            Indicates the behavior of the button.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ButtonType.Submit">
            <summary>
            The button submits the form. This is the default value if the attribute is not specified, HTML5 or if it is dynamically changed to an empty or invalid value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ButtonType.Reset">
            <summary>
            The button resets the form.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ButtonType.Button">
            <summary>
            The button does nothing.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ButtonType.Menu">
            <summary>
            The button displays a menu.
            </summary>
        </member>
        <member name="T:Bridge.Html5.InputType">
            <summary>
            The type of control to display.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Button">
            <summary>
             A push button with no default behavior.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Checkbox">
            <summary>
             A check box. You must use the value attribute to define the value submitted by this item. Use the checked attribute to indicate whether this item is selected. You can also use the indeterminate attribute to indicate that the checkbox is in an indeterminate state (on most platforms, this draws a horizontal line across the checkbox).
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Color">
            <summary>
             HTML5 A control for specifying a color. A color picker's UI has no required features other than accepting simple colors as text (more info).
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Date">
            <summary>
             HTML5 A control for entering a date (year, month, and day, with no time).
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.DateTime">
            <summary>
             HTML5 A control for entering a date and time (hour, minute, second, and fraction of a second) based on UTC time zone.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.DateTimeLocal">
            <summary>
             HTML5 A control for entering a date and time, with no time zone.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Email">
            <summary>
             HTML5 A field for editing an e-mail address. The input value is validated to contain either the empty string or a single valid e-mail address before submitting. The :valid and :invalid CSS pseudo-classes are applied as appropriate.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.File">
            <summary>
             A control that lets the user select a file. Use the accept attribute to define the types of files that the control can select.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Hidden">
            <summary>
             A control that is not displayed, but whose value is submitted to the server.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Image">
            <summary>
             A graphical submit button. You must use the src attribute to define the source of the image and the alt attribute to define alternative text. You can use the height and width attributes to define the size of the image in pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Month">
            <summary>
             HTML5 A control for entering a month and year, with no time zone.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Number">
            <summary>
             HTML5 A control for entering a floating point number.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Password">
            <summary>
             A single-line text field whose value is obscured. Use the maxlength attribute to specify the maximum length of the value that can be entered.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Radio">
            <summary>
             A radio button. You must use the value attribute to define the value submitted by this item. Use the checked attribute to indicate whether this item is selected by default. Radio buttons that have the same value for the name attribute are in the same "radio button group"; only one radio button in a group can be selected at one time.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Range">
            <summary>
             HTML5 A control for entering a number whose exact value is not important.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Reset">
            <summary>
             A button that resets the contents of the form to default values.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Search">
            <summary>
             HTML5 A single-line text field for entering search strings; line-breaks are automatically removed from the input value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Submit">
            <summary>
             A button that submits the form.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Tel">
            <summary>
             HTML5 A control for entering a telephone number; line-breaks are automatically removed from the input value, but no other syntax is enforced. You can use attributes such as pattern and maxlength to restrict values entered in the control. The :valid and :invalid CSS pseudo-classes are applied as appropriate.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Text">
            <summary>
             A single-line text field; line-breaks are automatically removed from the input value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Time">
            <summary>
             HTML5 A control for entering a time value with no time zone.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Url">
            <summary>
             HTML5 A field for editing a URL. The input value is validated to contain either the empty string or a valid absolute URL before submitting. Line-breaks and leading or trailing whitespace are automatically removed from the input value. You can use attributes such as pattern and maxlength to restrict values entered in the control. The :valid and :invalid CSS pseudo-classes are applied as appropriate.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InputType.Week">
            <summary>
             HTML5 A control for entering a date consisting of a week-year number and a week number with no time zone.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLTitleElement">
            <summary>
            The HTMLTitleElement interface contains the title for a document. This element inherits all of the properties and methods of the HTMLElement interface.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTitleElement.Text">
            <summary>
            The string representing the text of the document's title.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TextTrack">
            <summary>
            Represents a text track.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrack.Kind">
            <summary>
            Get the type of the text track
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrack.Label">
            <summary>
            Get the label of the text track
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrack.Language">
            <summary>
            Get the language of the text track
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrack.Mode">
            <summary>
            get or set if the track is active
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrack.Cues">
            <summary>
            Get a list of cues as a TextTrackCueList object
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrack.ActiveCues">
            <summary>
            Get the currently active text track cues as a TextTrackCueList object
            </summary>
        </member>
        <member name="M:Bridge.Html5.TextTrack.AddCue(Bridge.Html5.TextTrackCue)">
            <summary>
            Add a cue to the list of cues
            </summary>
            <param name="cue">The cue to add</param>
        </member>
        <member name="M:Bridge.Html5.TextTrack.RemoveCue(Bridge.Html5.TextTrackCue)">
            <summary>
            Remove a cue from the list of cues
            </summary>
            <param name="cue"></param>
        </member>
        <member name="T:Bridge.Html5.TextTrackList">
            <summary>
            Represents the available text tracks for the the audio/video.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackList.Length">
            <summary>
            Get the number of text tracks available in the audio/video
            </summary>
        </member>
        <member name="P:Bridge.Html5.TextTrackList.Item(System.Int32)">
            <summary>
            Get a TextTrack object by index
            </summary>
            <param name="index">The index of a TextTrack</param>
            <returns>The TextTrack instance</returns>
        </member>
        <member name="T:Bridge.Html5.TextTrackKind">
            <summary>
            The possible types of a text track
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackKind.Subtitles">
            <summary>
            Subtitles
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackKind.Caption">
            <summary>
            Caption
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackKind.Descriptions">
            <summary>
            descriptions
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackKind.Chapters">
            <summary>
            Chapters
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackKind.MetaData">
            <summary>
            MetaData
            </summary>
        </member>
        <member name="T:Bridge.Html5.TextTrackMode">
            <summary>
            The possible modes of a text track
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackMode.Disabled">
            <summary>
            Disabled
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackMode.Hidden">
            <summary>
            Hidden
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackMode.Showing">
            <summary>
            Showing
            </summary>
        </member>
        <member name="T:Bridge.Html5.TextTrackCue">
            <summary>
            The TextTrackCue object represents the individual cues, and provides methods and properties to access the data and events to act on changes to cue state.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackCue.EndTime">
            <summary>
            Returns the ending time, in seconds, for a text track cue.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackCue.Id">
            <summary>
            Returns the TextTrackCue identifier.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackCue.PauseOnExit">
            <summary>
            Returns the pause-on-exit flag on a TextTrackCue. When the flag is true, playback will pause when it reaches the cue's endTime.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackCue.StartTime">
            <summary>
            Returns the text track cue start time in seconds.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackCue.Text">
            <summary>
            Gets TextTrackCue text in un-parsed form.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackCue.Track">
            <summary>
            Returns the TextTrack object that the TextTrackCue belongs to, or null otherwise.
            </summary>
        </member>
        <member name="M:Bridge.Html5.TextTrackCue.GetCueAsHTML">
            <summary>
            Returns the TextTrackCue text (caption) as a document fragment consisting of HTML elements and other DOM nodes.
            </summary>
        </member>
        <member name="T:Bridge.Html5.TextTrackCueList">
            <summary>
            TextTrackCueList represents a dynamically updating list of text track cues.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextTrackCueList.Length">
            <summary>
            Returns the number of tracks in a TextTrackCueList
            </summary>
        </member>
        <member name="M:Bridge.Html5.TextTrackCueList.GetCueById(System.String)">
            <summary>
            Returns the TextTrackCue (in cue order) for a specified id.
            </summary>
            <param name="id">The id of the TextTrackCue</param>
            <returns>The TextTrackCue instance</returns>
        </member>
        <member name="M:Bridge.Html5.TextTrackCueList.GetItem(System.Int32)">
            <summary>
            Returns a track from a list that corresponds with the given index based on track order.
            </summary>
            <param name="index">The index of the TextTrackCue</param>
            <returns>The TextTrackCue instance</returns>
        </member>
        <member name="T:Bridge.Html5.HTMLTrackElement">
            <summary>
            The HTMLTrackElement interface provides access to the properties of &lt;track&gt; elements, as well as methods to manipulate them.
            The HTML &lt;track&gt; element is used as a child of the media elements — &lt;audio&gt; and &lt;video&gt;. It lets you specify timed text tracks (or time-based data), for example to automaticaly handle subtitles.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTrackElement.Kind">
            <summary>
            Reflects the kind HTML attribute, indicating how the text track is meant to be used. Possible values are: subtitles, captions, descriptions, chapters, metadata. See kind attribute documentation for details.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTrackElement.Src">
            <summary>
            Reflects the src HTML attribute, indicating the address of the text track data.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTrackElement.SrcLang">
            <summary>
            Reflects the srclang HTML attribute, indicating the language of the text track data.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTrackElement.Label">
            <summary>
            Reflects the label HTML attribute, indicating a user-readable title for the track.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTrackElement.Default">
            <summary>
            Reflects the default HTML attribute, indicating that the track is to be enabled if the user's preferences do not indicate that another track would be more appropriate.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTrackElement.ReadyState">
            <summary>
            The readiness state of the track.
            NONE 	    0 	Indicates that the text track's cues have not been obtained.
            LOADING 	1 	Indicates that the text track is loading and there have been no fatal errors encountered so far. Further cues might still be added to the track by the parser.
            LOADED 	    2 	Indicates that the text track has been loaded with no fatal errors.
            ERROR 	    3 	Indicates that the text track was enabled, but when the user agent attempted to obtain it, this failed in some way. Some or all of the cues are likely missing and will not be obtained.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLTrackElement.Track">
            <summary>
            The track element's text track data.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLUListElement">
            <summary>
            The HTMLUListElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating unordered list elements.
            The HTML unordered list element (&lt;ul&gt;) represents an unordered list of items, namely a collection of items that do not have a numerical ordering, and their order in the list is meaningless. Typically, unordered-list items are displayed with a bullet, which can be of several forms, like a dot, a circle or a squared. The bullet style is not defined in the HTML description of the page, but in its associated CSS, using the list-style-type property.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLUnknownElement">
            <summary>
            The HTMLUnknownElement interface represents an invalid HTML element and derives from the HTMLElement interface, but without implementing any additional properties or methods.
            Obsolete or non-standard HTML elements implementing this interface: &lt;bgsound&gt;, &lt;blink&gt;, &lt;isindex&gt;, &lt;multicol&gt;, &lt;nextid&gt;, &lt;rb&gt;, &lt;spacer&gt;
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLCanvasElement">
            <summary>
            The HTMLCanvasElement interface provides properties and methods for manipulating the layout and presentation of canvas elements. The HTMLCanvasElement interface also inherits the properties and methods of the HTMLElement interface.
            The HTML &lt;canvas&gt; Element can be used to draw graphics via scripting (usually JavaScript). For example, it can be used to draw graphs, make photo compositions or even perform animations. You may (and should) provide alternate content inside the &lt;canvas&gt; block. That content will be rendered both on older browsers that don't support canvas and in browsers with JavaScript disabled.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLCanvasElement.Height">
            <summary>
            Reflects the height HTML attribute, specifying the height of the coordinate space in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLCanvasElement.Width">
            <summary>
            Reflects the width HTML attribute, specifying the width of the coordinate space in CSS pixels.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLCanvasElement.GetContext(System.String)">
            <summary>
            Returns a drawing context on the canvas, or null if the context ID is not supported. A drawing context lets you draw on the canvas. Calling getContext with "2d" returns a CanvasRenderingContext2D object, whereas calling it with "experimental-webgl" (or "webgl") returns a WebGLRenderingContext object. This context is only available on browsers that implement WebGL.
            </summary>
            <param name="contextId">The context's id</param>
            <returns>A drawing context. A CanvasRenderingContext2D, IWebGLRenderingContext or IWebGL2RenderingContext object.</returns>
        </member>
        <member name="M:Bridge.Html5.HTMLCanvasElement.GetContext(Bridge.Html5.CanvasTypes.CanvasContext2DType)">
            <summary>
            Returns CanvasRenderingContext2D drawing context on the canvas, or null if the context ID is not supported.
            A drawing context lets you draw on the canvas.
            </summary>
            <param name="contextId">The context's id</param>
            <returns>A CanvasRenderingContext2D drawing context object.</returns>
        </member>
        <member name="M:Bridge.Html5.HTMLCanvasElement.GetContext(Bridge.Html5.CanvasTypes.CanvasContextWebGLType)">
            <summary>
            Returns WebGLRenderingContext drawing context on the canvas, or null if the context ID is not supported.
            A drawing context lets you draw on the canvas. This context is only available on browsers that implement
            WebGL (OpenGL ES 2.0).
            </summary>
            <param name="contextId">The context's id</param>
            <returns>A WebGLRenderingContext drawing context object.</returns>
        </member>
        <member name="M:Bridge.Html5.HTMLCanvasElement.ToDataURL">
            <summary>
            Returns a data: URL containing a representation of the image in the format specified by type (defaults to PNG). The returned image is 96dpi.
            If the height or width of the canvas is 0, "data:," representing the empty string, is returned.
            If the type requested is not image/png, and the returned value starts with data:image/png, then the requested type is not supported.
            Chrome supports the image/webp type.
            If the requested type is image/jpeg or image/webp, then the second argument, if it is between 0.0 and 1.0, is treated as indicating image quality; if the second argument is anything else, the default value for image quality is used. Other arguments are ignored.
            </summary>
            <returns>URL containing a representation of the image</returns>
        </member>
        <member name="M:Bridge.Html5.HTMLCanvasElement.ToDataURL(System.String)">
            <summary>
            Returns a data: URL containing a representation of the image in the format specified by type (defaults to PNG). The returned image is 96dpi.
            If the height or width of the canvas is 0, "data:," representing the empty string, is returned.
            If the type requested is not image/png, and the returned value starts with data:image/png, then the requested type is not supported.
            Chrome supports the image/webp type.
            If the requested type is image/jpeg or image/webp, then the second argument, if it is between 0.0 and 1.0, is treated as indicating image quality; if the second argument is anything else, the default value for image quality is used. Other arguments are ignored.
            </summary>
            <param name="type">The format. Defaults to PNG.</param>
            <returns>URL containing a representation of the image</returns>
        </member>
        <member name="M:Bridge.Html5.HTMLCanvasElement.ToDataURL(System.String,System.Object[])">
            <summary>
            Returns a data: URL containing a representation of the image in the format specified by type (defaults to PNG). The returned image is 96dpi.
            If the height or width of the canvas is 0, "data:," representing the empty string, is returned.
            If the type requested is not image/png, and the returned value starts with data:image/png, then the requested type is not supported.
            Chrome supports the image/webp type.
            If the requested type is image/jpeg or image/webp, then the second argument, if it is between 0.0 and 1.0, is treated as indicating image quality; if the second argument is anything else, the default value for image quality is used. Other arguments are ignored.
            </summary>
            <param name="type">The format. Defaults to PNG.</param>
            /// <param name="args">Any additional parameters</param>
            <returns>URL containing a representation of the image</returns>
        </member>
        <member name="T:Bridge.Html5.IWebGLRenderingContext">
            <summary>
            Implement this interface to use it with canvas.GetContext()
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLVideoElement">
            <summary>
            The HTMLVideoElement interface provides special properties and methods for manipulating video objects. It also inherits properties and methods of HTMLMediaElement and HTMLElement.
            The HTML &lt;video&gt; element is used to embed video content. It may contain several video sources, represented using the src attribute or the &lt;source&gt; element; the browser will choose the most suitable one.
            The list of supported media formats vary from one browser to the other.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLVideoElement.Height">
            <summary>
            Reflects the height HTML attribute, which specifies the height of the display area, in CSS pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLVideoElement.Poster">
            <summary>
            Reflects the poster HTML attribute, which specifies an image to show while no video data is available.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLVideoElement.VideoHeight">
            <summary>
            Returns an unsigned long containing the intrinsic height of the resource in CSS pixels, taking into account the dimensions, aspect ratio, clean aperture, resolution, and so forth, as defined for the format used by the resource. If the element's ready state is HAVE_NOTHING, the value is 0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLVideoElement.VideoWidth">
            <summary>
            Returns an unsigned long containing the intrinsic width of the resource in CSS pixels, taking into account the dimensions, aspect ratio, clean aperture, resolution, and so forth, as defined for the format used by the resource. If the element's ready state is HAVE_NOTHING, the value is 0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLVideoElement.Width">
            <summary>
            Reflects the width HTML attribute, which specifies the width of the display area, in CSS pixels.
            </summary>
        </member>
        <member name="T:Bridge.Html5.AnimationEvent">
            <summary>
            The AnimationEvent interface represents events providing information related to animations.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationEvent.AnimationName">
            <summary>
            Is a DOMString containing the value of the animation-name CSS property associated with the transition.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationEvent.ElapsedTime">
            <summary>
            Is a float giving the amount of time the animation has been running, in seconds, when this event fired, excluding any time the animation was paused. For an "animationstart" event, elapsedTime is 0.0 unless there was a negative value for animation-delay, in which case the event will be fired with elapsedTime containing  (-1 * delay).
            </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationEvent.PseudoElement">
            <summary>
            Is a DOMString, starting with '::', containing the name of the pseudo-element the animation runs on. If the animation doesn't run on a pseudo-element but on the element, an empty string: ''.
            </summary>
        </member>
        <member name="T:Bridge.Html5.AnimationEvent`1">
            <summary>
            A generic version of the AnimationEvent class. The type parameter is a type of CurrentTarget.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type</typeparam>
        </member>
        <member name="F:Bridge.Html5.AnimationEvent`1.CurrentTarget">
            <summary>
            Identifies the current target for the event, as the event traverses the DOM. It always refers to the element the event handler has been attached to as opposed to event.target which identifies the element on which the event occurred.
            On Internet Explorer 6 through 8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, there is no equivalent to event.currentTarget and this is the global object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.AnimationEvent`1.Target">
            <summary>
            This property of event objects is the object the event was dispatched on. It is different than event.currentTarget when the event handler is called in bubbling or capturing phase of the event.
            On IE6-8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, the event object is not passed as an argument to the event handler function but is the window.event object. This object has an srcElement property which has the same semantics than event.target.
            </summary>
        </member>
        <member name="T:Bridge.Html5.CompositionEvent">
            <summary>
            The DOM CompositionEvent represents events that occur due to the user indirectly entering text.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CompositionEvent.Data">
            <summary>
            For compositionstart events, this is the currently selected text that will be replaced by the string being composed. This value doesn't change even if content changes the selection range; rather, it indicates the string that was selected when composition started.
            For compositionupdate, this is the string as it stands currently as editing is ongoing.
            For compositionend events, this is the string as committed to the editor.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CompositionEvent.Locale">
            <summary>
            The locale of current input method (for example, the keyboard layout locale if the composition is associated with IME).
            </summary>
        </member>
        <member name="T:Bridge.Html5.CompositionEvent`1">
            <summary>
            A generic version of the CompositionEvent class. The type parameter is a type of CurrentTarget.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type</typeparam>
        </member>
        <member name="F:Bridge.Html5.CompositionEvent`1.CurrentTarget">
            <summary>
            Identifies the current target for the event, as the event traverses the DOM. It always refers to the element the event handler has been attached to as opposed to event.target which identifies the element on which the event occurred.
            On Internet Explorer 6 through 8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, there is no equivalent to event.currentTarget and this is the global object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CompositionEvent`1.Target">
            <summary>
            This property of event objects is the object the event was dispatched on. It is different than event.currentTarget when the event handler is called in bubbling or capturing phase of the event.
            On IE6-8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, the event object is not passed as an argument to the event handler function but is the window.event object. This object has an srcElement property which has the same semantics than event.target.
            </summary>
        </member>
        <member name="T:Bridge.Html5.CustomEvent">
            <summary>
            The DOM CustomEvent are events initialized by an application for any purpose.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CustomEvent.Detail">
            <summary>
            The data passed when initializing the event.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CustomEvent.InitCustomEvent(System.String,System.Boolean,System.Boolean,System.Object)">
             <summary>
            
             </summary>
             <param name="type"></param>
             <param name="canBubble"></param>
             <param name="cancelable"></param>
             <param name="detail"></param>
        </member>
        <member name="F:Bridge.Html5.CustomEventInit.Detail">
            <summary>
            The data passed when initializing the event.
            </summary>
        </member>
        <member name="T:Bridge.Html5.CustomEvent`1">
            <summary>
            A generic version of the CustomEvent class. The type parameter is a type of CurrentTarget.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type</typeparam>
        </member>
        <member name="F:Bridge.Html5.CustomEvent`1.CurrentTarget">
            <summary>
            Identifies the current target for the event, as the event traverses the DOM. It always refers to the element the event handler has been attached to as opposed to event.target which identifies the element on which the event occurred.
            On Internet Explorer 6 through 8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, there is no equivalent to event.currentTarget and this is the global object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CustomEvent`1.Target">
            <summary>
            This property of event objects is the object the event was dispatched on. It is different than event.currentTarget when the event handler is called in bubbling or capturing phase of the event.
            On IE6-8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, the event object is not passed as an argument to the event handler function but is the window.event object. This object has an srcElement property which has the same semantics than event.target.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Event">
            <summary>
            The Event interface represents any event of the DOM. It contains common properties and methods to any event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Event.Bubbles">
            <summary>
            Indicates whether the given event bubbles up through the DOM or not.
            Only certain events can bubble. Events that do bubble have this property set to true. You can use this property to check if an event is allowed to bubble or not.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Event.Cancelable">
            <summary>
            Indicates whether the event is cancelable or not.
            Whether an event can be canceled or not is something that's determined when that event is initialized.
            To cancel an event, call the preventDefault() method on the event. This keeps the implementation from executing the default action that is associated with the event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Event.CurrentTarget">
            <summary>
            Identifies the current target for the event, as the event traverses the DOM. It always refers to the element the event handler has been attached to as opposed to event.target which identifies the element on which the event occurred.
            On Internet Explorer 6 through 8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, there is no equivalent to event.currentTarget and this is the global object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Event.DefaultPrevented">
            <summary>
            Returns a boolean indicating whether or not event.preventDefault() was called on the event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Event.EventPhase">
            <summary>
            Indicates which phase of the event flow is currently being evaluated.
            Returns an integer value represented by 4 constants:
            Event.NONE = 0
            Event.CAPTURING_PHASE = 1
            Event.AT_TARGET = 2
            Event.BUBBLING_PHASE = 3
            </summary>
        </member>
        <member name="F:Bridge.Html5.Event.Target">
            <summary>
            This property of event objects is the object the event was dispatched on. It is different than event.currentTarget when the event handler is called in bubbling or capturing phase of the event.
            On IE6-8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, the event object is not passed as an argument to the event handler function but is the window.event object. This object has an srcElement property which has the same semantics than event.target.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Event.TimeStamp">
            <summary>
            Returns the time (in milliseconds since the epoch) at which the event was created.
            This property only works if the event system supports it for the particular event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Event.Type">
            <summary>
            Returns a string containing the type of event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Event.IsTrusted">
            <summary>
            Indicates whether or not the event was initiated by the browser (after a user click for instance) or by a script (using an event creation method, like event.initEvent)
            </summary>
        </member>
        <member name="M:Bridge.Html5.Event.PreventDefault">
            <summary>
            Cancels the event if it is cancelable, without stopping further propagation of the event.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Event.StopImmediatePropagation">
            <summary>
            Prevents other listeners of the same event to be called.
            If several listeners are attached to the same element for the same event type, they are called in order in which they have been added. If during one such call, event.stopImmediatePropagation() is called, no remaining listeners will be called.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Event.StopPropagation">
            <summary>
            Prevents further propagation of the current event.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Event`1">
            <summary>
            A generic version of the Event class. The type parameter is a type of CurrentTarget.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type</typeparam>
        </member>
        <member name="F:Bridge.Html5.Event`1.CurrentTarget">
            <summary>
            Identifies the current target for the event, as the event traverses the DOM. It always refers to the element the event handler has been attached to as opposed to event.target which identifies the element on which the event occurred.
            On Internet Explorer 6 through 8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, there is no equivalent to event.currentTarget and this is the global object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventInit.Bubbles">
            <summary>
            Indicates whether the given event bubbles up through the DOM or not.
            Only certain events can bubble. Events that do bubble have this property set to true. You can use this property to check if an event is allowed to bubble or not.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventInit.Cancelable">
            <summary>
            Indicates whether the event is cancelable or not.
            Whether an event can be canceled or not is something that's determined when that event is initialized.
            To cancel an event, call the preventDefault() method on the event. This keeps the implementation from executing the default action that is associated with the event.
            </summary>
        </member>
        <member name="T:Bridge.Html5.EventType">
            <summary>
            These events are defined in official Web specifications, and should be common across browsers. Each event is listed along with the interface representing the object sent to recipients of the event (so you can find information about what data is provided with each event) as well as a link to the specification or specifications that define the event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Abort">
            <summary>
            UIEvent - DOM L3
            The loading of a resource has been aborted.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.AfterPrint">
            <summary>
            Event - HTML5
            The associated document has started printing or the print preview has been closed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.AnimationEnd">
            <summary>
            AnimationEvent - CSS Animations
            A CSS animation has completed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.AnimationIteration">
            <summary>
            AnimationEvent - CSS Animations
            A CSS animation is repeated.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.AnimationStart">
            <summary>
            AnimationEvent - CSS Animations
            A CSS animation has started.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.BeforePrint">
            <summary>
            Event - HTML5
            The associated document is about to be printed or previewed for printing.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.BeforeUnload">
            <summary>
            BeforeUnloadEvent - HTML5
            The beforeunload event is fired when the window, the document and its resources are about to be unloaded.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Blocked">
            <summary>
            IndexedDB
            An open connection to a database is blocking a versionchange transaction on the same database.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Blur">
            <summary>
            FocusEvent - DOM L3
            An element has lost focus (does not bubble).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Cached">
            <summary>
            Event - Offline
            The resources listed in the manifest have been downloaded, and the application is now cached.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.CanPlay">
            <summary>
            Event - HTML5
            The user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.CanPlayThrough">
            <summary>
            Event - HTML5
            The user agent can play the media, and estimates that enough data has been loaded to play the media up to its end without having to stop for further buffering of content.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Change">
            <summary>
            Event - DOM L2, HTML5
            An element loses focus and its value changed since gaining focus.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Checking">
            <summary>
            Event - Offline
            The user agent is checking for an update, or attempting to download the cache manifest for the first time.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Click">
            <summary>
            MouseEvent - DOM L3
            A pointing device button has been pressed and released on an element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Close">
            <summary>
            Event - WebSocket
            A WebSocket connection has been closed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Complete">
            <summary>
            IndexedDB
            The complete handler is executed when a transaction successfully completed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.CompositionEnd">
            <summary>
            CompositionEven - DOM L3
            The composition of a passage of text has been completed or canceled.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.CompositionStart">
            <summary>
            CompositionEven - DOM L3
            The composition of a passage of text is prepared (similar to keydown for a keyboard input, but works with other inputs such as speech recognition).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.CompositionUpdate">
            <summary>
            CompositionEven - DOM L3
            A character is added to a passage of text being composed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.ContextMenu">
            <summary>
            MouseEvent - HTML5
            The right button of the mouse is clicked (before the context menu is displayed).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Copy">
            <summary>
            ClipboardEvent - Clipboard
            The text selection has been added to the clipboard.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Cut">
            <summary>
            ClipboardEvent - Clipboard
            The text selection has been removed from the document and added to the clipboard.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.DblClick">
            <summary>
            MouseEvent - DOM L3
            A pointing device button is clicked twice on an element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.DeviceLight">
            <summary>
            DeviceLightEvent - Ambient Light Events
            Fresh data is available from a light sensor.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.DeviceMotion">
            <summary>
            DeviceMotionEvent -	Device Orientation Events
            Fresh data is available from a motion sensor.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.DeviceOrientation">
            <summary>
            DeviceOrientationEvent - Device Orientation Events
            Fresh data is available from an orientation sensor.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.DeviceProximity">
            <summary>
            DeviceProximityEvent - Proximity Events
            Fresh data is available from a proximity sensor (indicates an approximated distance between the device and a nearby object).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.DischargingTimeChange">
            <summary>
            Event - Battery status
            The dischargingTime attribute has been updated.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.DOMContentLoaded">
            <summary>
            Event - HTML5
            The document has finished loading (but not its dependent resources).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Downloading">
            <summary>
            Event - Offline
            The user agent has found an update and is fetching it, or is downloading the resources listed by the cache manifest for the first time.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Drag">
            <summary>
            DragEvent - HTML5
            An element or text selection is being dragged (every 350ms).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.DragEnd">
            <summary>
            DragEvent - HTML5
            A drag operation is being ended (by releasing a mouse button or hitting the escape key).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.DragEnter">
            <summary>
            DragEvent - HTML5
            A dragged element or text selection enters a valid drop target.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.DragLeave">
            <summary>
            DragEvent - HTML5
            A dragged element or text selection leaves a valid drop target
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.DragOver">
            <summary>
            DragEvent - HTML5
            An element or text selection is being dragged over a valid drop target (every 350ms).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.DragStart">
            <summary>
            DragEvent - HTML5
            The user starts dragging an element or text selection.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Drop">
            <summary>
            DragEvent - HTML5
            An element is dropped on a valid drop target.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.DurationChange">
            <summary>
            Event - HTML5 media
            The duration attribute has been updated.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Emptied">
            <summary>
            Event - HTML5 media
            The media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Ended">
            <summary>
            Event - HTML5 media
            Playback has stopped because the end of the media was reached.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.EndEvent">
            <summary>
            TimeEvent - SVG
            A SMIL animation element ends.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Error">
             <summary>
             UIEvent - DOM L3
             A resource failed to load.
            
             ProgressEvent - Progress and XMLHttpRequest
             Progression has failed.
            
             Event - Offline
             An error occurred while downloading the cache manifest or updating the content of the application.
            
             Event - WebSocket
             A WebSocket connection has been closed with prejudice (some data couldn't be sent for example).
            
             Event - Server Sent Events
             An event source connection has been failed.
            
             Event - IndexedDB
             A request caused an error and failed.
             </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Focus">
            <summary>
            FocusEvent - DOM L3
            An element has received focus (does not bubble).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.FocusIn">
            <summary>
            FocusEvent - DOM L3
            An element is about to receive focus (bubbles).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.FocusOut">
            <summary>
            FocusEvent - DOM L3
            An element is about to lose focus (bubbles).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.FullScreenChange">
            <summary>
            Event - Full Screen
            An element was turned to fullscreen mode or back to normal mode.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.FullScreenError">
            <summary>
            Event - Full Screen
            It was impossible to switch to fullscreen mode for technical reasons or because the permission was denied.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.GamepadConnected">
            <summary>
            GamepadEvent - Gamepad
            A gamepad has been connected.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.GamepadDisconnected">
            <summary>
            GamepadEvent - Gamepad
            A gamepad has been disconnected.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.HashChange">
            <summary>
            HashChangeEvent - HTML5
            The fragment identifier of the URL has changed (the part of the URL after the #).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Input">
            <summary>
            Event - HTML5
            The value of an element changes or the content of an element with the attribute contenteditable is modified.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Invalid">
            <summary>
            Event - HTML5
            A submittable element has been checked and doesn't satisfy its constraints.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.KeyDown">
            <summary>
            KeyboardEvent - DOM L3
            A key is pressed down.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.KeyPress">
            <summary>
            KeyboardEvent - DOM L3
            A key is pressed down and that key normally produces a character value (use input instead).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.KeyUp">
            <summary>
            KeyboardEvent - DOM L3
            A key is released.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.LevelChange">
            <summary>
            Event - Battery status
            The level attribute has been updated.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Load">
             <summary>
             UIEvent - DOM L3
             A resource and its dependent resources have finished loading.
            
             ProgressEvent - Progress and XMLHttpRequest
             Progression has been successful.
             </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.LoadedData">
            <summary>
            Event - HTML5 media
            The first frame of the media has finished loading.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.LoadedMetaData">
            <summary>
            Event - HTML5 media
            The metadata has been loaded.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.LoadEnd">
            <summary>
            ProgressEvent - Progress and XMLHttpRequest
            Progress has stopped (after "error", "abort" or "load" have been dispatched).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.LoadStart">
            <summary>
            ProgressEvent - Progress and XMLHttpRequest
            Progress has begun.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Message">
             <summary>
             MessageEvent - WebSocket
             A message is received through a WebSocket.
            
             MessageEvent - Web Workers
             A message is received from a Web Worker.
            
             MessageEvent - Web Messaging
             A message is received from a child (i)frame or a parent window.
            
             MessageEvent - Server Sent Events
             A message is received through an event source.
             </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.MouseDown">
            <summary>
            MouseEvent - DOM L3
            A pointing device button (usually a mouse) is pressed on an element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.MouseEnter">
            <summary>
            MouseEvent - DOM L3
            A pointing device is moved onto the element that has the listener attached.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.MouseLeave">
            <summary>
            MouseEvent - DOM L3
            A pointing device is moved off the element that has the listener attached.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.MouseMove">
            <summary>
            MouseEvent - DOM L3
            A pointing device is moved over an element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.MouseOut">
            <summary>
            MouseEvent - DOM L3
            A pointing device is moved off the element that has the listener attached or off one of its children.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.MouseOver">
            <summary>
            MouseEvent - DOM L3
            A pointing device is moved onto the element that has the listener attached or onto one of its children.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.MouseUp">
            <summary>
            MouseEvent - DOM L3
            A pointing device button is released over an element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.NoUpdate">
            <summary>
            Event - Offline
            The manifest hadn't changed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Obsolete">
            <summary>
            Event - Offline
            The manifest was found to have become a 404 or 410 page, so the application cache is being deleted.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Offline">
            <summary>
            Event - HTML5 offline
            The browser has lost access to the network.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Online">
            <summary>
            Event - HTML5 offline
            The browser has gained access to the network (but particular websites might be unreachable).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Open">
             <summary>
             Event - WebSocket
             A WebSocket connection has been established.
            
             Event - Server Sent Events
             An event source connection has been established.
             </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.OrientationChange">
            <summary>
            Event - Screen Orientation
            The orientation of the device (portrait/landscape) has changed
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.PageHide">
            <summary>
            PageTransitionEvent - HTML5
            A session history entry is being traversed from.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.PageShow">
            <summary>
            PageTransitionEvent - HTML5
            A session history entry is being traversed to.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Paste">
            <summary>
            ClipboardEvent - Clipboard
            Data has been transfered from the system clipboard to the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Pause">
            <summary>
            Event - HTML5 media
            Playback has been paused.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.PointerLockChange">
            <summary>
            Event - Pointer Lock
            The pointer was locked or released.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.PointerLockError">
            <summary>
            Event - Pointer Lock
            It was impossible to lock the pointer for technical reasons or because the permission was denied.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Play">
            <summary>
            Event - HTML5 media
            Playback has begun.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Playing">
            <summary>
            Event - HTML5 media
            Playback is ready to start after having been paused or delayed due to lack of data.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.PopState">
            <summary>
            PopStateEvent - HTML5
            A session history entry is being navigated to (in certain cases).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Progress">
             <summary>
             ProgressEvent - Progress and XMLHttpRequest
             In progress.
            
             ProgressEvent - Offline
             The user agent is downloading resources listed by the manifest.
             </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.RateChange">
            <summary>
            Event - HTML5 media
            The playback rate has changed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.ReadyStateChange">
            <summary>
            Event - HTML5 and XMLHttpRequest
            The readyState attribute of a document has changed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.RepeatEvent">
            <summary>
            TimeEvent - SVG
            A SMIL animation element is repeated.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Reset">
            <summary>
            Event - DOM L2, HTML5
            A form is reset.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Resize">
            <summary>
            UIEvent - DOM L3
            The document view has been resized.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Scroll">
            <summary>
            UIEvent - DOM L3
            The document view or an element has been scrolled.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Seeked">
            <summary>
            Event - HTML5 media
            A seek operation completed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Seeking">
            <summary>
            Event - HTML5 media
            A seek operation began.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Select">
            <summary>
            UIEvent - DOM L3
            Some text is being selected.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Show">
            <summary>
            MouseEvent - HTML5
            A contextmenu event was fired on/bubbled to an element that has a contextmenu attribute
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Stalled">
            <summary>
            Event - HTML5 media
            The user agent is trying to fetch media data, but data is unexpectedly not forthcoming.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Storage">
            <summary>
            StorageEvent - Web Storage
            A storage area (localStorage or sessionStorage) has changed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Submit">
            <summary>
            Event - DOM L2, HTML5
            A form is submitted.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Success">
            <summary>
            Event - IndexedDB
            A request successfully completed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Suspend">
            <summary>
            Event - HTML5 media
            Media data loading has been suspended.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.SVGAbort">
            <summary>
            SVGEvent - SVG
            Page loading has been stopped before the SVG was loaded.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.SVGError">
            <summary>
            SVGEvent - SVG
            An error has occurred before the SVG was loaded.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.SVGLoad">
            <summary>
            SVGEvent - SVG
            An SVG document has been loaded and parsed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.SVGResize">
            <summary>
            SVGEvent - SVG
            An SVG document is being resized.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.SVGScroll">
            <summary>
            SVGEvent - SVG
            An SVG document is being scrolled.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.SVGUnload">
            <summary>
            SVGEvent - SVG
            An SVG document has been removed from a window or frame.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.SVGZoom">
            <summary>
            SVGZoomEvent - SVG
            An SVG document is being zoomed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Timeout">
             <summary>
             ProgressEvent - XMLHttpRequest
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.TimeUpdate">
            <summary>
            Event - HTML5 media
            The time indicated by the currentTime attribute has been updated.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.TouchCancel">
            <summary>
            TouchEvent - Touch Events
            A touch point has been disrupted in an implementation-specific manners (too many touch points for example).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.TouchEnd">
            <summary>
            TouchEvent - Touch Events
            A touch point is removed from the touch surface.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.TouchEnter">
            <summary>
            TouchEvent - Touch Events
            A touch point is moved onto the interactive area of an element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.TouchLeave">
            <summary>
            TouchEvent - Touch Events
            A touch point is moved off the interactive area of an element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.TouchMove">
            <summary>
            TouchEvent - Touch Events
            A touch point is moved along the touch surface.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.TouchStart">
            <summary>
            TouchEvent - Touch Events
            A touch point is placed on the touch surface.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.TransitionEnd">
            <summary>
            TransitionEvent - CSS Transitions
            A CSS transition has completed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Unload">
            <summary>
            UIEvent - DOM L3
            The document or a dependent resource is being unloaded.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.UpdateReady">
            <summary>
            Event - Offline
            The resources listed in the manifest have been newly redownloaded, and the script can use swapCache() to switch to the new cache.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.UpgradeNeeded">
            <summary>
             - IndexedDB
            An attempt was made to open a database with a version number higher than its current version. A versionchange transaction has been created.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.UserProximity">
            <summary>
            SensorEvent - Sensor
            Fresh data is available from a proximity sensor (indicates whether the nearby object is near the device or not).
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.VersionChange">
            <summary>
            Event - IndexedDB
            A versionchange transaction completed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.VisibilityChange">
            <summary>
            Event - Page visibility
            The content of a tab has become visible or has been hidden.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.VolumeChange">
            <summary>
            Event - HTML5 media
            The volume has changed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Waiting">
            <summary>
            Event - HTML5 media
            Playback has stopped because of a temporary lack of data.
            </summary>
        </member>
        <member name="F:Bridge.Html5.EventType.Wheel">
            <summary>
            WheelEvent - DOM L3
            A wheel button of a pointing device is rotated in any direction.
            </summary>
        </member>
        <member name="T:Bridge.Html5.FocusEvent">
            <summary>
            The FocusEvent interface represents focus-related events like focus, blur, focusin, or focusout.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FocusEvent.RelatedTarget">
            <summary>
            The FocusEvent.relatedTarget read-only property represents a secondary target for this event, which will depend of the event itself. As in some cases (like when tabbing in or out a page), this property may be set to null for security reasons.
            </summary>
        </member>
        <member name="T:Bridge.Html5.FocusEvent`1">
            <summary>
            A generic version of the FocusEvent class. The type parameter is a type of CurrentTarget.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type</typeparam>
        </member>
        <member name="F:Bridge.Html5.FocusEvent`1.CurrentTarget">
            <summary>
            Identifies the current target for the event, as the event traverses the DOM. It always refers to the element the event handler has been attached to as opposed to event.target which identifies the element on which the event occurred.
            On Internet Explorer 6 through 8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, there is no equivalent to event.currentTarget and this is the global object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.FocusEvent`1.Target">
            <summary>
            This property of event objects is the object the event was dispatched on. It is different than event.currentTarget when the event handler is called in bubbling or capturing phase of the event.
            On IE6-8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, the event object is not passed as an argument to the event handler function but is the window.event object. This object has an srcElement property which has the same semantics than event.target.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HashChangeEvent">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.HashChangeEvent.NewURL">
            <summary>
            The new URL to which the window is navigating.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HashChangeEvent.OldURL">
            <summary>
            The previous URL from which the window was navigated.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HashChangeEvent`1">
            <summary>
            A generic version of the HashChangeEvent class. The type parameter is a type of CurrentTarget.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type</typeparam>
        </member>
        <member name="F:Bridge.Html5.HashChangeEvent`1.CurrentTarget">
            <summary>
            Identifies the current target for the event, as the event traverses the DOM. It always refers to the element the event handler has been attached to as opposed to event.target which identifies the element on which the event occurred.
            On Internet Explorer 6 through 8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, there is no equivalent to event.currentTarget and this is the global object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HashChangeEvent`1.Target">
            <summary>
            This property of event objects is the object the event was dispatched on. It is different than event.currentTarget when the event handler is called in bubbling or capturing phase of the event.
            On IE6-8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, the event object is not passed as an argument to the event handler function but is the window.event object. This object has an srcElement property which has the same semantics than event.target.
            </summary>
        </member>
        <member name="M:Bridge.Html5.IEventListener.HandleEvent(Bridge.Html5.Event)">
            <summary>
            This method is called whenever an event occurs of the type for which the EventListener interface was registered.
            </summary>
            <param name="e">The DOM Event to register.</param>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.AltKey">
            <summary>
            Indicates whether the ALT key was pressed when the event fired.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.CharCode">
            <summary>
            The Unicode reference number of the key; this attribute is used only by the 'keypress' event. For keys whose char attribute contains multiple characters, this is the Unicode value of the first character in that attribute. In Firefox 26 this returns codes for printable characters.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.CtrlKey">
            <summary>
            Indicates whether the CTRL key was pressed when the event fired.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.IsComposing">
            <summary>
            true if the event is fired between after compositionstart and before compositionend.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.KeyCode">
             <summary>
             Returns the Unicode value of a non-character key in a keypress event or any key in any other type of keyboard event.
            
             In a keypress event, the Unicode value of the key pressed is stored in either the keyCode or charCode property, never both. If the key pressed generates a character (e.g. 'a'), charCode is set to the code of that character, respecting the letter case. (i.e. charCode takes into account whether the shift key is held down). Otherwise, the code of the pressed key is stored in keyCode.
            
             keyCode is always set in the keydown and keyup events. In these cases, charCode is never set.
            
             To get the code of the key regardless of whether it was stored in keyCode or charCode, query the which property.
            
             Characters entered through an IME do not register through keyCode or charCode.
             </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.Key">
            <summary>
            The key value of the key represented by the event. If the value has a printed representation, this attribute's value is the same as the char attribute. Otherwise, it's one of the key value strings specified in {{anch("Key values")}}. If the key can't be identified, this is the string "Unidentified". See key names for the detail. In Firefox 26 this has a valid string for non-printable characters, and some printable characters (e.g. Tab, Enter). For regular characters it returns only "MozPrintableKey". charCode works and returns the character code.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.Locale">
            <summary>
            A locale string indicating the locale the keyboard is configured for. This may be the empty string if the browser or device doesn't know the keyboard's locale.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.Location">
            <summary>
            The location of the key on the keyboard or other input device
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.MetaKey">
            <summary>
            Indicates whether the "meta" key was pressed when the event fired.
            Note: On the Macintosh, this is the Command key. On Microsoft Windows, this is the Windows key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.ShiftKey">
            <summary>
            Indicates whether the SHIFT key was pressed when the event fired.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.Which">
            <summary>
            Returns the numeric keyCode of the key pressed, or the character code (charCode) for an alphanumeric key pressed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.Repeat">
            <summary>
            true if the key is being held down such that it is automatically repeating.
            </summary>
        </member>
        <member name="M:Bridge.Html5.KeyboardEvent.GetModifierState(System.String)">
            <summary>
            Returns the current state of the specified modifier key.
            </summary>
            <param name="keyArg">A string identifying the modifier key whose value you wish to determine. This may be an implementation-defined value or one of: "Alt", "AltGraph", "CapsLock", "Control", "Fn", "Meta", "NumLock", "ScrollLock", "Shift", "SymbolLock", or "OS". Note that IE9 uses "Scroll" for "ScrollLock" and "Win" for "OS". If you use these older draft's name, Gecko's getModifierState() always returns false.</param>
            <returns>true if the specified modifier key is engaged; otherwise false.</returns>
        </member>
        <member name="M:Bridge.Html5.KeyboardEvent.InitKeyEvent(System.String,System.Boolean,System.Boolean,Bridge.Html5.WindowInstance,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            The initKeyEvent method is used to initialize the value of an event created using document.createEvent("KeyboardEvent")
            </summary>
            <param name="type">The type of event.</param>
            <param name="bubbles">A boolean indicating whether the event should bubble up through the event chain or not (see bubbles).</param>
            <param name="cancelable">A boolean indicating whether the event can be canceled.</param>
            <param name="view">Specifies UIEvent.view. This value may be null.</param>
            <param name="ctrlKey">bool True if the Virtual Key to be generated is a combination of the Ctrl key and other keys</param>
            <param name="altKey">bool True if the Virtual Key to be generated is a combination of the Alt key and other keys</param>
            <param name="shiftKey">bool True if the Virtual Key to be generated is a combination of the Shift key and other keys</param>
            <param name="metaKey">bool True if the Virtual Key to be generated is a combination of the Meta key and other keys</param>
            <param name="keyCode">unsigned long the virtual key code value of the key which was depressed, otherwise zero</param>
            <param name="charCode">unsigned long the Unicode character associated with the depressed key otherwise zero</param>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_CANCEL">
            <summary>
            Cancel key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_HELP">
            <summary>
            Help key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_BACK_SPACE">
            <summary>
            Backspace key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_TAB">
            <summary>
            Tab key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_CLEAR">
            <summary>
            "5" key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_RETURN">
            <summary>
            Return/enter key on the main keyboard.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_ENTER">
            <summary>
            Reserved, but not used. Obsolete since Gecko 30 (Dropped, see bug 969247.)
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_SHIFT">
            <summary>
            Shift key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_CONTROL">
            <summary>
            Control key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_ALT">
            <summary>
            Alt (Option on Mac) key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_PAUSE">
            <summary>
            Pause key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_CAPS_LOCK">
            <summary>
            Caps lock.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_KANA">
            <summary>
            Linux support for this keycode was added in Gecko 4.0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_HANGUL">
            <summary>
            Linux support for this keycode was added in Gecko 4.0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_EISU">
            <summary>
            "英数" key on Japanese Mac keyboard.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_JUNJA">
            <summary>
            Linux support for this keycode was added in Gecko 4.0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_FINAL">
            <summary>
            Linux support for this keycode was added in Gecko 4.0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_HANJA">
            <summary>
            Linux support for this keycode was added in Gecko 4.0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_KANJI">
            <summary>
            Linux support for this keycode was added in Gecko 4.0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_ESCAPE">
            <summary>
            Escape key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_CONVERT">
            <summary>
            Linux support for this keycode was added in Gecko 4.0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_NONCONVERT">
            <summary>
            Linux support for this keycode was added in Gecko 4.0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_ACCEPT">
            <summary>
            Linux support for this keycode was added in Gecko 4.0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_MODECHANGE">
            <summary>
            Linux support for this keycode was added in Gecko 4.0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_SPACE">
            <summary>
            Space bar.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_PAGE_UP">
            <summary>
            Page Up key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_PAGE_DOWN">
            <summary>
            Page Down key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_END">
            <summary>
            End key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_HOME">
            <summary>
            Home key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_LEFT">
            <summary>
            Left arrow.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_UP">
            <summary>
            Up arrow.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_RIGHT">
            <summary>
            Right arrow.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_DOWN">
            <summary>
            Down arrow.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_SELECT">
            <summary>
            Linux support for this keycode was added in Gecko 4.0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_PRINT">
            <summary>
            Linux support for this keycode was added in Gecko 4.0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_EXECUTE">
            <summary>
            Linux support for this keycode was added in Gecko 4.0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_PRINTSCREEN">
            <summary>
            Print Screen key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_INSERT">
            <summary>
            Ins(ert) key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_DELETE">
            <summary>
            Del(ete) key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_0">
            <summary>
            "0" key in standard key location.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_1">
            <summary>
            "1" key in standard key location.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_2">
            <summary>
            "2" key in standard key location.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_3">
            <summary>
            "3" key in standard key location.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_4">
            <summary>
            "4" key in standard key location.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_5">
            <summary>
            "5" key in standard key location.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_6">
            <summary>
            "6" key in standard key location.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_7">
            <summary>
            "7" key in standard key location.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_8">
            <summary>
            "8" key in standard key location.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_9">
            <summary>
            "9" key in standard key location.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_COLON">
            <summary>
            Colon (":") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_SEMICOLON">
            <summary>
            Semicolon (";") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_LESS_THAN">
            <summary>
            Less-than ("&lt;") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_EQUALS">
            <summary>
            Equals ("=") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_GREATER_THAN">
            <summary>
            Greater-than (">") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_QUESTION_MARK">
            <summary>
            Question mark ("?") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_AT">
            <summary>
            Atmark ("@") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_A">
            <summary>
            "A" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_B">
            <summary>
            "B" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_C">
            <summary>
            "C" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_D">
            <summary>
            "D" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_E">
            <summary>
            "E" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F">
            <summary>
            "F" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_G">
            <summary>
            "G" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_H">
            <summary>
            "H" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_I">
            <summary>
            "I" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_J">
            <summary>
            "J" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_K">
            <summary>
            "K" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_L">
            <summary>
            "L" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_M">
            <summary>
            "M" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_N">
            <summary>
            "N" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_O">
            <summary>
            "O" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_P">
            <summary>
            "P" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_Q">
            <summary>
            "Q" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_R">
            <summary>
            "R" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_S">
            <summary>
            "S" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_T">
            <summary>
            "T" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_U">
            <summary>
            "U" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_V">
            <summary>
            "V" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_W">
            <summary>
            "W" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_X">
            <summary>
            "X" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_Y">
            <summary>
            "Y" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_Z">
            <summary>
            "Z" key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN">
            <summary>
            Windows logo key on Windows. Or Super or Hyper key on Linux.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_CONTEXT_MENU">
            <summary>
            Opening context menu key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_SLEEP">
            <summary>
            Linux support for this keycode was added in Gecko 4.0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_NUMPAD0">
            <summary>
            "0" on the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_NUMPAD1">
            <summary>
            "1" on the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_NUMPAD2">
            <summary>
            "2" on the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_NUMPAD3">
            <summary>
            "3" on the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_NUMPAD4">
            <summary>
            "4" on the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_NUMPAD5">
            <summary>
            "5" on the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_NUMPAD6">
            <summary>
            "6" on the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_NUMPAD7">
            <summary>
            "7" on the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_NUMPAD8">
            <summary>
            "8" on the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_NUMPAD9">
            <summary>
            "9" on the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_MULTIPLY">
            <summary>
            "*" on the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_ADD">
            <summary>
            "+" on the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_SEPARATOR">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_SUBTRACT">
            <summary>
            "-" on the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_DECIMAL">
            <summary>
            Decimal point on the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_DIVIDE">
            <summary>
            "/" on the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F1">
            <summary>
            F1 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F2">
            <summary>
            F2 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F3">
            <summary>
            F3 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F4">
            <summary>
            F4 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F5">
            <summary>
            F5 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F6">
            <summary>
            F6 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F7">
            <summary>
            F7 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F8">
            <summary>
            F8 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F9">
            <summary>
            F9 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F10">
            <summary>
            F10 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F11">
            <summary>
            F11 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F12">
            <summary>
            F12 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F13">
            <summary>
            F13 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F14">
            <summary>
            F14 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F15">
            <summary>
            F15 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F16">
            <summary>
            F16 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F17">
            <summary>
            F17 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F18">
            <summary>
            F18 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F19">
            <summary>
            F19 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F20">
            <summary>
            F20 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F21">
            <summary>
            F21 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F22">
            <summary>
            F22 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F23">
            <summary>
            F23 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_F24">
            <summary>
            F24 key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_NUM_LOCK">
            <summary>
            Num Lock key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_SCROLL_LOCK">
            <summary>
            Scroll Lock key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_FJ_JISHO">
            <summary>
            An OEM specific key on Windows. This was used for "Dictionary" key on Fujitsu OASYS. Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_FJ_MASSHOU">
            <summary>
            An OEM specific key on Windows. This was used for "Unregister word" key on Fujitsu OASYS. Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_FJ_TOUROKU">
            <summary>
            An OEM specific key on Windows. This was used for "Register word" key on Fujitsu OASYS. Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_FJ_LOYA">
            <summary>
            An OEM specific key on Windows. This was used for "Left OYAYUBI" key on Fujitsu OASYS. Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_FJ_ROYA">
            <summary>
            An OEM specific key on Windows. This was used for "Right OYAYUBI" key on Fujitsu OASYS. Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_CIRCUMFLEX">
            <summary>
            Circumflex ("^") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_EXCLAMATION">
            <summary>
            Exclamation ("!") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_DOUBLE_QUOTE">
            <summary>
            Double quote (""") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_HASH">
            <summary>
            Hash ("#") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_DOLLAR">
            <summary>
            Dollar sign ("$") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_PERCENT">
            <summary>
            Percent ("%") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_AMPERSAND">
            <summary>
            Ampersand ("&amp;") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_UNDERSCORE">
            <summary>
            Underscore ("_") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_OPEN_PAREN">
            <summary>
            Open parenthesis ("(") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_CLOSE_PAREN">
            <summary>
            Close parenthesis (")") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_ASTERISK">
            <summary>
            Asterisk ("*") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_PLUS">
            <summary>
            Plus ("+") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_PIPE">
            <summary>
            Pipe ("|") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_HYPHEN_MINUS">
            <summary>
            Hyphen-US/docs/Minus ("-") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_OPEN_CURLY_BRACKET">
            <summary>
            Open curly bracket ("{") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_CLOSE_CURLY_BRACKET">
            <summary>
            Close curly bracket ("}") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_TILDE">
            <summary>
            Tilde ("~") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_VOLUME_MUTE">
            <summary>
            Audio mute key. Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_VOLUME_DOWN">
            <summary>
            Audio volume down key Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_VOLUME_UP">
            <summary>
            Audio volume up key Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_COMMA">
            <summary>
            Comma (",") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_PERIOD">
            <summary>
            Period (".") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_SLASH">
            <summary>
            Slash ("/") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_BACK_QUOTE">
            <summary>
            Back tick ("`") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_OPEN_BRACKET">
            <summary>
            Open square bracket ("[") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_BACK_SLASH">
            <summary>
            Back slash ("\") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_CLOSE_BRACKET">
            <summary>
            Close square bracket ("]") key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_QUOTE">
            <summary>
            Quote (''') key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_META">
            <summary>
            Meta key on Linux, Command key on Mac.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_ALTGR">
            <summary>
            AltGr key (Level 3 Shift key or Level 5 Shift key) on Linux.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_ICO_HELP">
            <summary>
            An OEM specific key on Windows. This is (was?) used for Olivetti ICO keyboard.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_ICO_00">
            <summary>
            An OEM specific key on Windows. This is (was?) used for Olivetti ICO keyboard.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_ICO_CLEAR">
            <summary>
            An OEM specific key on Windows. This is (was?) used for Olivetti ICO keyboard.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_RESET">
            <summary>
            An OEM specific key on Windows. This was used for Nokia/Ericsson's device.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_JUMP">
            <summary>
            An OEM specific key on Windows. This was used for Nokia/Ericsson's device.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_PA1">
            <summary>
            An OEM specific key on Windows. This was used for Nokia/Ericsson's device.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_PA2">
            <summary>
            An OEM specific key on Windows. This was used for Nokia/Ericsson's device.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_PA3">
            <summary>
            An OEM specific key on Windows. This was used for Nokia/Ericsson's device.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_WSCTRL">
            <summary>
            An OEM specific key on Windows. This was used for Nokia/Ericsson's device.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_CUSEL">
            <summary>
            An OEM specific key on Windows. This was used for Nokia/Ericsson's device.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_ATTN">
            <summary>
            An OEM specific key on Windows. This was used for Nokia/Ericsson's device.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_FINISH">
            <summary>
            An OEM specific key on Windows. This was used for Nokia/Ericsson's device.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_COPY">
            <summary>
            An OEM specific key on Windows. This was used for Nokia/Ericsson's device.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_AUTO">
            <summary>
            An OEM specific key on Windows. This was used for Nokia/Ericsson's device.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_ENLW">
            <summary>
            An OEM specific key on Windows. This was used for Nokia/Ericsson's device.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_BACKTAB">
            <summary>
            An OEM specific key on Windows. This was used for Nokia/Ericsson's device.Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_ATTN">
            <summary>
            Attn (Attension) key of IBM midrange computers, e.g., AS/400. Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_CRSEL">
            <summary>
            CrSel (Cursor Selection) key of IBM 3270 keyboard layout. Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_EXSEL">
            <summary>
            ExSel (Extend Selection) key of IBM 3270 keyboard layout. Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_EREOF">
            <summary>
            Erase EOF key of IBM 3270 keyboard layout. Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_PLAY">
            <summary>
            Play key of IBM 3270 keyboard layout. Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_ZOOM">
            <summary>
            Zoom key. Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_PA1">
            <summary>
            PA1 key of IBM 3270 keyboard layout. Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent.DOM_VK_WIN_OEM_CLEAR">
            <summary>
            Clear key, but we're not sure the meaning difference from DOM_VK_CLEAR. Requires Gecko 21.0
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEventInit.Key">
            <summary>
            Optional and defaulting to "", of type DOMString, that sets the value of KeyboardEvent.Key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEventInit.Code">
            <summary>
            Optional and defaulting to "", of type DOMString, that sets the value of KeyboardEvent.Code.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEventInit.Location">
            <summary>
            The location of the key on the keyboard or other input device.
            Optional and defaulting to Standard (0), of type unsigned long, that sets the value of KeyboardEvent.Location.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEventInit.Repeat">
            <summary>
            Optional and defaulting to false, of type Boolean, that sets the value of KeyboardEvent.Repeat.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEventInit.IsComposing">
            <summary>
            Optional and defaulting to false, of type Boolean, that sets the value of KeyboardEvent.IsComposing.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEventInit.Which">
            <summary>
            Optional and defaulting to 0, of type unsigned long, that sets the value of the deprecated KeyboardEvent.Which.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEventInit.AltKey">
            <summary>
            Indicates whether the ALT key was pressed when the event fired.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEventInit.CtrlKey">
            <summary>
            Indicates whether the CTRL key was pressed when the event fired.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEventInit.MetaKey">
            <summary>
            Indicates whether the "meta" key was pressed when the event fired.
            Note: On the Macintosh, this is the Command key. On Microsoft Windows, this is the Windows key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEventInit.ShiftKey">
            <summary>
            Indicates whether the SHIFT key was pressed when the event fired.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEventInit.KeyCode">
             <summary>
             Returns the Unicode value of a non-character key in a keypress event or any key in any other type of keyboard event.
            
             In a keypress event, the Unicode value of the key pressed is stored in either the keyCode or charCode property, never both. If the key pressed generates a character (e.g. 'a'), charCode is set to the code of that character, respecting the letter case. (i.e. charCode takes into account whether the shift key is held down). Otherwise, the code of the pressed key is stored in keyCode.
            
             keyCode is always set in the keydown and keyup events. In these cases, charCode is never set.
            
             To get the code of the key regardless of whether it was stored in keyCode or charCode, query the which property.
            
             Characters entered through an IME do not register through keyCode or charCode.
             </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEventInit.CharCode">
            <summary>
            The Unicode reference number of the key; this attribute is used only by the 'keypress' event. For keys whose char attribute contains multiple characters, this is the Unicode value of the first character in that attribute. In Firefox 26 this returns codes for printable characters.
            </summary>
        </member>
        <member name="T:Bridge.Html5.KeyLocation">
            <summary>
            These constants describe the location on the keyboard of key events.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyLocation.Standard">
            <summary>
            The key must not be distinguished between the left and right versions of the key, and was not pressed on the numeric keypad or a key that is considered to be part of the keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyLocation.Left">
            <summary>
            The key was the left-hand version of the key; for example, this is the value of the location attribute when the left-hand Control key is pressed on a standard 101 key US keyboard. This value is only used for keys that have more that one possible location on the keyboard.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyLocation.Right">
            <summary>
            The key was the right-hand version of the key; for example, this is the value of the location attribute when the right-hand Control key is pressed on a standard 101 key US keyboard. This value is only used for keys that have more that one possible location on the keyboard.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyLocation.Numpad">
            <summary>
            The key was on the numeric keypad, or has a virtual key code that corresponds to the numeric keypad.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyLocation.Mobile">
            <summary>
            The key was on a mobile device; this can be on either a physical keypad or a virtual keyboard.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyLocation.Joystick">
            <summary>
            The key was a button on a game controller or a joystick on a mobile device.
            </summary>
        </member>
        <member name="T:Bridge.Html5.KeyboardEvent`1">
            <summary>
            A generic version of the KeyboardEvent class. The type parameter is a type of CurrentTarget.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type</typeparam>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent`1.CurrentTarget">
            <summary>
            Identifies the current target for the event, as the event traverses the DOM. It always refers to the element the event handler has been attached to as opposed to event.target which identifies the element on which the event occurred.
            On Internet Explorer 6 through 8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, there is no equivalent to event.currentTarget and this is the global object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.KeyboardEvent`1.Target">
            <summary>
            This property of event objects is the object the event was dispatched on. It is different than event.currentTarget when the event handler is called in bubbling or capturing phase of the event.
            On IE6-8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, the event object is not passed as an argument to the event handler function but is the window.event object. This object has an srcElement property which has the same semantics than event.target.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEvent.AltKey">
            <summary>
            Indicates whether the ALT key was pressed when the event fired.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEvent.Button">
             <summary>
             Indicates which mouse button caused the event.
             This property returns an integer value indicating the button that changed state.
            
                    0 for standard "click"; this is usually the left button for a right-handed mouse and right button for a left-handed mouse.
                    1 for middle button; this is usually a click on the scroll wheel's button.
                    2 for right button; this is usually a right-click on a right-handed mouse and left-click on a left-handed mouse.
            
             Note: This convention is not followed in Internet Explorer prior to version 9: See QuirksMode for details (http://www.quirksmode.org/js/events_properties.html#button).
            
             Notes
            
             Because mouse clicks are frequently intercepted by the user interface, it may be difficult to detect buttons other than those for a standard mouse click (usually the left button) in some circumstances.
            
             Users may change the configuration of buttons on their pointing device so that if an event's button property is zero, it may not have been caused by the button that is physically left–most on the pointing device; however, it should behave as if the left button was clicked in the standard button layout.
             </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEvent.Buttons">
             <summary>
             The buttons being pressed when the mouse event was fired
             Each button that can be pressed is representd by a given number (see below). If more than one button is pressed, the value of the buttons is combined to produce a new number. For example, if the right button (2) and the wheel button (4) are pressed, the value is equal to 2|4, which is 6.
             A number representing one or more buttons. For more than one button pressed, the values are combined.
            
             1  : Left button
             2  : Right button
             4  : Wheel button
             8  : 4th button (typically the "Browser Back" button)
             16 : 5th button (typically the "Browser Forward" button)
             </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEvent.ClientX">
            <summary>
            Returns the horizontal coordinate within the application's client area at which the event occurred (as opposed to the coordinates within the page). For example, clicking in the top-left corner of the client area will always result in a mouse event with a clientX value of 0, regardless of whether the page is scrolled horizontally.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEvent.ClientY">
            <summary>
            Returns the vertical coordinate within the application's client area at which the event occurred (as opposed to the coordinates within the page). For example, clicking in the top-left corner of the client area will always result in a mouse event with a clientY value of 0, regardless of whether the page is scrolled vertically.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEvent.CtrlKey">
            <summary>
            Indicates whether the CTRL key was pressed when the event fired.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEvent.Detail">
            <summary>
            Returns additional numerical information about the event, depending on the type of event.
            For mouse events, such as click, dblclick, mousedown, or mouseup, the detail property indicates how many times the mouse has been clicked in the same location for this event.
            For a dblclick event the value of detail is always 2.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEvent.MetaKey">
            <summary>
            Indicates whether the "meta" key was pressed when the event fired.
            Note: On the Macintosh, this is the Command key. On Microsoft Windows, this is the Windows key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEvent.ScreenX">
            <summary>
            Returns the horizontal coordinate of the event within the screen as a whole.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEvent.ScreenY">
            <summary>
            Returns the vertical coordinate of the event within the screen as a whole.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEvent.ShiftKey">
            <summary>
            Indicates whether the SHIFT key was pressed when the event fired.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEvent.RelatedTarget">
            <summary>
            The secondary target for the event, if there is one.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEvent.MovementX">
            <summary>
            The X coordinate of the mouse pointer relative to the position of the last mousemove event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEvent.MovementY">
            <summary>
            The Y coordinate of the mouse pointer relative to the position of the last mousemove event.
            </summary>
        </member>
        <member name="M:Bridge.Html5.MouseEvent.GetModifierState(System.String)">
            <summary>
            Returns the current state of the specified modifier key.
            </summary>
            <param name="keyArg">A string identifying the modifier key whose value you wish to determine. This may be an implementation-defined value or one of: "Alt", "AltGraph", "CapsLock", "Control", "Fn", "Meta", "NumLock", "ScrollLock", "Shift", "SymbolLock", or "OS". Note that IE9 uses "Scroll" for "ScrollLock" and "Win" for "OS". If you use these older draft's name, Gecko's getModifierState() always returns false.</param>
            <returns>true if the specified modifier key is engaged; otherwise false.</returns>
        </member>
        <member name="M:Bridge.Html5.MouseEvent.InitMouseEvent(System.String,System.Boolean,System.Boolean,Bridge.Html5.WindowInstance,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int16,Bridge.Html5.HTMLElement)">
            <summary>
            Intializes the value of a mouse event once it's been created (normally using document.createEvent method).
            </summary>
            <param name="type">the string to set the event's type to. Possible types for mouse events include: click, mousedown, mouseup, mouseover, mousemove, mouseout.</param>
            <param name="canBubble">whether or not the event can bubble.</param>
            <param name="cancelable">whether or not the event's default action can be prevented.</param>
            <param name="view">the Event's AbstractView. You should pass the window object here. </param>
            <param name="detail">the Event's mouse click count.</param>
            <param name="screenX">the Event's screen x coordinate.</param>
            <param name="screenY">the Event's screen y coordinate. </param>
            <param name="clientX">the Event's client x coordinate.</param>
            <param name="clientY">the Event's client y coordinate. </param>
            <param name="ctrlKey">whether or not control key was depressed during the Event. </param>
            <param name="altKey">whether or not alt key was depressed during the Event.</param>
            <param name="shiftKey">whether or not shift key was depressed during the Event.</param>
            <param name="metaKey">whether or not meta key was depressed during the Event.</param>
            <param name="button">the Event's mouse event.button.</param>
            <param name="relatedTarget">the Event's related EventTarget. Only used with some event types (e.g. mouseover and mouseout). In other cases, pass null.</param>
        </member>
        <member name="F:Bridge.Html5.MouseEventInit.Button">
            <summary>
            Indicates which mouse button caused the event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEventInit.Buttons">
            <summary>
            The buttons being pressed when the mouse event was fired
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEventInit.ClientX">
            <summary>
            Returns the horizontal coordinate within the application's client area at which the event occurred (as opposed to the coordinates within the page). For example, clicking in the top-left corner of the client area will always result in a mouse event with a clientX value of 0, regardless of whether the page is scrolled horizontally.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEventInit.ClientY">
            <summary>
            Returns the vertical coordinate within the application's client area at which the event occurred (as opposed to the coordinates within the page). For example, clicking in the top-left corner of the client area will always result in a mouse event with a clientY value of 0, regardless of whether the page is scrolled vertically.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEventInit.Detail">
            <summary>
            Returns additional numerical information about the event, depending on the type of event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEventInit.RelatedTarget">
            <summary>
            The secondary target for the event, if there is one.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEventInit.ScreenX">
            <summary>
            Returns the horizontal coordinate of the event within the screen as a whole.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEventInit.ScreenY">
            <summary>
            Returns the vertical coordinate of the event within the screen as a whole.
            </summary>
        </member>
        <member name="T:Bridge.Html5.MouseEvent`1">
            <summary>
            A generic version of the MouseEvent class. The type parameter is a type of CurrentTarget.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type</typeparam>
        </member>
        <member name="F:Bridge.Html5.MouseEvent`1.CurrentTarget">
            <summary>
            Identifies the current target for the event, as the event traverses the DOM. It always refers to the element the event handler has been attached to as opposed to event.target which identifies the element on which the event occurred.
            On Internet Explorer 6 through 8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, there is no equivalent to event.currentTarget and this is the global object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MouseEvent`1.Target">
            <summary>
            This property of event objects is the object the event was dispatched on. It is different than event.currentTarget when the event handler is called in bubbling or capturing phase of the event.
            On IE6-8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, the event object is not passed as an argument to the event handler function but is the window.event object. This object has an srcElement property which has the same semantics than event.target.
            </summary>
        </member>
        <member name="T:Bridge.Html5.ProgressEvent">
            <summary>
            The ProgressEvent interface represents events measuring progress of an underlying process, like an HTTP request (for an XMLHttpRequest, or the loading of the underlying resource of an &lt;img&gt;, &lt;audio&gt;, &lt;video&gt;, &lt;style&gt; or &lt;link&gt;).
            </summary>
        </member>
        <member name="F:Bridge.Html5.ProgressEvent.LengthComputable">
            <summary>
            Is a Boolean flag indicating if the total work to be done, and the amount of work already done, by the underlying process is calculable. In other words, it tells if the progress is measurable or not.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ProgressEvent.Loaded">
            <summary>
            Is an unsigned long long representing the amount of work already performed by the underlying process. The ratio of work done can be calculated with the property and ProgressEvent.total. When downloading a resource using HTTP, this only represent the part of the content itself, not headers and other overhead.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ProgressEvent.Total">
            <summary>
            Is an unsigned long long representing the total amount of work that the underlying process is in the progress of performing. When downloading a resource using HTTP, this only represent the content itself, not headers and other overhead.
            </summary>
        </member>
        <member name="T:Bridge.Html5.ProgressEvent`1">
            <summary>
            A generic version of the ProgressEvent class. The type parameter is a type of CurrentTarget.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type</typeparam>
        </member>
        <member name="F:Bridge.Html5.ProgressEvent`1.CurrentTarget">
            <summary>
            Identifies the current target for the event, as the event traverses the DOM. It always refers to the element the event handler has been attached to as opposed to event.target which identifies the element on which the event occurred.
            On Internet Explorer 6 through 8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, there is no equivalent to event.currentTarget and this is the global object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ProgressEvent`1.Target">
            <summary>
            This property of event objects is the object the event was dispatched on. It is different than event.currentTarget when the event handler is called in bubbling or capturing phase of the event.
            On IE6-8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, the event object is not passed as an argument to the event handler function but is the window.event object. This object has an srcElement property which has the same semantics than event.target.
            </summary>
        </member>
        <member name="F:Bridge.Html5.UIEvent.Detail">
            <summary>
            Returns additional numerical information about the event, depending on the type of event.
            For mouse events, such as click, dblclick, mousedown, or mouseup, the detail property indicates how many times the mouse has been clicked in the same location for this event.
            For a dblclick event the value of detail is always 2.
            </summary>
        </member>
        <member name="F:Bridge.Html5.UIEvent.EventPhase">
            <summary>
            Indicates which phase of the event flow is currently being evaluated.
            Returns an integer value represented by 4 constants:
            Event.NONE = 0
            Event.CAPTURING_PHASE = 1
            Event.AT_TARGET = 2
            Event.BUBBLING_PHASE = 3
            </summary>
        </member>
        <member name="F:Bridge.Html5.UIEvent.LayerX">
            <summary>
            Returns the horizontal coordinate of the event relative to the current layer.
            LayerX takes scrolling of the page into account, and returns a value relative to the whole of the document, unless the event occurs inside a positioned element, where the returned value is relative to the top left of the positioned element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.UIEvent.LayerY">
            <summary>
            Returns the vertical coordinate of the event relative to the current layer.
            LayerY takes scrolling of the page into account, and returns a value relative to the whole of the document, unless the event occurs inside a positioned element, where the returned value is relative to the top left of the positioned element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.UIEvent.PageX">
            <summary>
            Returns the horizontal coordinate of the event relative to whole document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.UIEvent.PageY">
            <summary>
            Returns the vertical coordinate of the event relative to the whole document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.UIEvent.View">
            <summary>
            A view which generated the event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.UIEvent.ReturnValue">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.UIEventInit.Detail">
            <summary>
            Detail about the event, depending on the type of event
            </summary>
        </member>
        <member name="F:Bridge.Html5.UIEventInit.View">
            <summary>
            A view which generated the event.
            </summary>
        </member>
        <member name="T:Bridge.Html5.UIEvent`1">
            <summary>
            A generic version of the UIEvent class. The type parameter is a type of CurrentTarget.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type</typeparam>
        </member>
        <member name="T:Bridge.Html5.WheelEvent">
            <summary>
            The DOM WheelEvent represents events that occur due to the user moving a mouse wheel or similar input device.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WheelEvent.DeltaX">
            <summary>
            Horizontal scroll amount. Read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WheelEvent.DeltaY">
            <summary>
            Vertical scroll amount. Read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WheelEvent.DeltaZ">
            <summary>
            Scroll amount for the z-axis. Read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WheelEvent.DeltaMode">
            <summary>
            Unit of delta values.
            </summary>
        </member>
        <member name="T:Bridge.Html5.DeltaMode">
            <summary>
            Unit of delta values.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DeltaMode.Pixel">
            <summary>
            The delta values are specified in pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DeltaMode.Line">
            <summary>
            The delta values are specified in lines.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DeltaMode.Page">
            <summary>
            The delta values are specified in pages.
            </summary>
        </member>
        <member name="T:Bridge.Html5.WheelEvent`1">
            <summary>
            A generic version of the WheelEvent class. The type parameter is a type of CurrentTarget.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type</typeparam>
        </member>
        <member name="F:Bridge.Html5.WheelEvent`1.CurrentTarget">
            <summary>
            Identifies the current target for the event, as the event traverses the DOM. It always refers to the element the event handler has been attached to as opposed to event.target which identifies the element on which the event occurred.
            On Internet Explorer 6 through 8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, there is no equivalent to event.currentTarget and this is the global object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WheelEvent`1.Target">
            <summary>
            This property of event objects is the object the event was dispatched on. It is different than event.currentTarget when the event handler is called in bubbling or capturing phase of the event.
            On IE6-8, the event model is different. Event listeners are attached with the non-standard element.attachEvent method. In this model, the event object is not passed as an argument to the event handler function but is the window.event object. This object has an srcElement property which has the same semantics than event.target.
            </summary>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(System.String,System.Delegate)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(System.String,System.Action)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(Bridge.Html5.EventType,System.Delegate)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(Bridge.Html5.EventType,System.Action)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(System.String,System.Action{Bridge.Html5.Event})">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event})">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(System.String,System.Delegate,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(System.String,System.Action,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(Bridge.Html5.EventType,System.Delegate,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(Bridge.Html5.EventType,System.Action,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(System.String,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(System.String,Bridge.Html5.IEventListener)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(System.String,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.AddEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.DispatchEvent(Bridge.Html5.Event)">
            <summary>
            Dispatches the specified event to the current element.
            To create an event object use the createEvent method in Firefox, Opera, Google Chrome, Safari and Internet Explorer from version 9. After the new event is created, initialize it first (for details, see the page for the createEvent method). When the event is initialized, it is ready for dispatching.
            </summary>
            <param name="e">Required. Reference to an event object to be dispatched.</param>
            <returns>Boolean that indicates whether the default action of the event was not canceled.</returns>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(System.String,Bridge.Html5.IEventListener)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(System.String,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(Bridge.Html5.EventType,System.Delegate)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(Bridge.Html5.EventType,System.Action)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(Bridge.Html5.EventType,System.Delegate,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(Bridge.Html5.EventType,System.Action,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(System.String,System.Delegate)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(System.String,System.Action)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(System.String,System.Delegate,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(System.String,System.Action,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event})">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(System.String,System.Action{Bridge.Html5.Event})">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.EventTarget.RemoveEventListener(System.String,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="T:Bridge.Html5.Blob">
            <summary>
            A Blob object represents a file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system.
            An easy way to construct a Blob is by invoking the Blob constuctor. Another way is to use the slice() method to create a blob that contains a subset of another blob's data.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Blob.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:Bridge.Html5.Blob.#ctor(Bridge.Html5.BlobDataObject[])">
             <summary>
            
             </summary>
             <param name="parts">An Array of data objects to put into the new Blob object. This can be any number of ArrayBuffer, ArrayBufferView (typed array), Blob, or strings, in any order.</param>
        </member>
        <member name="M:Bridge.Html5.Blob.#ctor(Bridge.Html5.BlobDataObject[],Bridge.Html5.BlobPropertyBag)">
             <summary>
            
             </summary>
             <param name="parts">An Array of data objects to put into the new Blob object. This can be any number of ArrayBuffer, ArrayBufferView (typed array), Blob, or strings, in any order.</param>
             <param name="properties">A BlobPropertyBag object that provides the properties for the new Blob object.</param>
        </member>
        <member name="F:Bridge.Html5.Blob.Size">
            <summary>
            The size, in bytes, of the data contained in the Blob object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Blob.Type">
            <summary>
            A string indicating the MIME type of the data contained in the Blob. If the type is unknown, this string is empty.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Blob.Slice">
            <summary>
            Returns a new Blob object containing the data in the specified range of bytes of the source Blob.
            </summary>
            <returns>A new Blob object containing the specified data from the source Blob.</returns>
        </member>
        <member name="M:Bridge.Html5.Blob.Slice(System.Int32)">
            <summary>
            Returns a new Blob object containing the data in the specified range of bytes of the source Blob.
            </summary>
            <param name="start">An index into the Blob indicating the first byte to copy into the new Blob. If you specify a negative value, it's treated as an offset from the end of the string toward the beginning. For example, -10 would be the 10th from last byte in the Blob. The default value is 0. If you specify a value for start that is larger than the size of the source Blob, the returned Blob has size 0 and contains no data.</param>
            <returns>A new Blob object containing the specified data from the source Blob.</returns>
        </member>
        <member name="M:Bridge.Html5.Blob.Slice(System.Int32,System.Int32)">
            <summary>
            Returns a new Blob object containing the data in the specified range of bytes of the source Blob.
            </summary>
            <param name="start">An index into the Blob indicating the first byte to copy into the new Blob. If you specify a negative value, it's treated as an offset from the end of the string toward the beginning. For example, -10 would be the 10th from last byte in the Blob. The default value is 0. If you specify a value for start that is larger than the size of the source Blob, the returned Blob has size 0 and contains no data.</param>
            <param name="end">An index into the Blob indicating the last byte to copy into the new Blob. If you specify a negative value, it's treated as an offset from the end of the string toward the beginning. For example, -10 would be the 10th from last byte in the Blob. The default value is size.</param>
            <returns>A new Blob object containing the specified data from the source Blob.</returns>
        </member>
        <member name="M:Bridge.Html5.Blob.Slice(System.Int32,System.Int32,System.String)">
            <summary>
            Returns a new Blob object containing the data in the specified range of bytes of the source Blob.
            </summary>
            <param name="start">An index into the Blob indicating the first byte to copy into the new Blob. If you specify a negative value, it's treated as an offset from the end of the string toward the beginning. For example, -10 would be the 10th from last byte in the Blob. The default value is 0. If you specify a value for start that is larger than the size of the source Blob, the returned Blob has size 0 and contains no data.</param>
            <param name="end">An index into the Blob indicating the last byte to copy into the new Blob. If you specify a negative value, it's treated as an offset from the end of the string toward the beginning. For example, -10 would be the 10th from last byte in the Blob. The default value is size.</param>
            <param name="contentType">The content type to assign to the new Blob; this will be the value of its type property. The default value is an empty string.</param>
            <returns>A new Blob object containing the specified data from the source Blob.</returns>
        </member>
        <member name="T:Bridge.Html5.BlobPropertyBag">
            <summary>
            A BlobPropertyBag object that provides the properties for the new Blob object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BlobPropertyBag.Type">
            <summary>
            A string representing the MIME type of the Blob object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.BlobPropertyBag.Endings">
            <summary>
            Specifies how strings containing \n are to be written out. This can be "transparent" (endings unchanged) or "native" (endings changed to match host OS filesystem convention). The default value is "transparent". It corresponds to the endings parameter of the deprecated BlobBuilder.append().
            </summary>
        </member>
        <member name="T:Bridge.Html5.Endings">
            <summary>
            Specifies how strings containing \n are to be written out.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Endings.Transparent">
            <summary>
            Endings unchanged
            </summary>
        </member>
        <member name="F:Bridge.Html5.Endings.Native">
            <summary>
            Endings changed to match host OS filesystem convention
            </summary>
        </member>
        <member name="T:Bridge.Html5.File">
            <summary>
            The File interface provides information about -- and access to the contents of -- files.
            These are generally retrieved from a FileList object returned as a result of a user selecting files using the &lt;input&gt; element, from a drag and drop operation's DataTransfer object, or from the mozGetAsFile() API on an HTMLCanvasElement.
            The file reference can be saved when the form is submitted while the user is offline, so that the data can be retrieved and uploaded when the Internet connection is restored.
            </summary>
        </member>
        <member name="F:Bridge.Html5.File.Name">
            <summary>
            The name of the file referenced by the File object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.File.LastModifiedDate">
            <summary>
            The last modified Date of the file referenced by the File object.
            </summary>
        </member>
        <member name="T:Bridge.Html5.FileList">
            <summary>
            An object of this type is returned by the files property of the HTML input element; this lets you access the list of files selected with the &lt;input type="file"&gt; element. It's also used for a list of files dropped into web content when using the drag and drop API; see the DataTransfer object for details on this usage.
            </summary>
        </member>
        <member name="P:Bridge.Html5.FileList.Item(System.Int32)">
            <summary>
            Returns a File object representing the file at the specified index in the file list.
            </summary>
            <param name="index">The zero-based index of the file to retrieve from the list.</param>
            <returns>The File representing the requested file.</returns>
        </member>
        <member name="M:Bridge.Html5.FileList.GetItem(System.Int32)">
            <summary>
            Returns a File object representing the file at the specified index in the file list.
            </summary>
            <param name="index">The zero-based index of the file to retrieve from the list.</param>
            <returns>The File representing the requested file.</returns>
        </member>
        <member name="F:Bridge.Html5.FileList.Length">
            <summary>
            A read-only value indicating the number of files in the list.
            </summary>
        </member>
        <member name="T:Bridge.Html5.FormControlsCollection">
            <summary>
            The HTMLFormControlsCollection interface represents a collection of HTML form control elements. It provides one additional method besides the properties and methods inherited from HTMLCollection.
            This interface is used by the HTMLFormElement interface's elements property, and the HTMLFieldSetElement interface's elements property.
            </summary>
        </member>
        <member name="P:Bridge.Html5.FormControlsCollection.Item(System.String)">
            <summary>
            Gets the node or list of nodes in the collection whose name or id match the specified name, or null if no nodes match.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.FormControlsCollection.NamedItem(System.String)">
            <summary>
            Gets the node or list of nodes in the collection whose name or id match the specified name, or null if no nodes match.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.Geolocation">
             <summary>
             The Geolocation interface represents an object able to programmatically obtain the position of the device. It gives Web content access to the location of the device. This allows a Web site or app offer customized results based on the user's location.
             An object with this interface is obtained using the NavigatorGeolocation.geolocation property implemented by the Navigator object.
            
             Note: For security reasons, when a web page tries to access location information, the user is notified and asked to grant permission. Be aware that each browser has its own policies and methods for requesting this permission.
             </summary>
        </member>
        <member name="M:Bridge.Html5.Geolocation.GetCurrentPosition(System.Delegate)">
            <summary>
            Determines the device's current location and gives back a Position object with the data.
            </summary>
            <param name="success">A callback function that takes a Position object as its sole input parameter.</param>
        </member>
        <member name="M:Bridge.Html5.Geolocation.GetCurrentPosition(System.Action{Bridge.Html5.GeolocationPosition})">
            <summary>
            Determines the device's current location and gives back a Position object with the data.
            </summary>
            <param name="success">A callback function that takes a Position object as its sole input parameter.</param>
        </member>
        <member name="M:Bridge.Html5.Geolocation.GetCurrentPosition(System.Delegate,System.Delegate)">
            <summary>
            Determines the device's current location and gives back a Position object with the data.
            </summary>
            <param name="success">A callback function that takes a Position object as its sole input parameter.</param>
            <param name="error">An optional callback function that takes a PositionError object as its sole input parameter.</param>
        </member>
        <member name="M:Bridge.Html5.Geolocation.GetCurrentPosition(System.Action{Bridge.Html5.GeolocationPosition},System.Action{Bridge.Html5.GeolocationPositionError})">
            <summary>
            Determines the device's current location and gives back a Position object with the data.
            </summary>
            <param name="success">A callback function that takes a Position object as its sole input parameter.</param>
            <param name="error">An optional callback function that takes a PositionError object as its sole input parameter.</param>
        </member>
        <member name="M:Bridge.Html5.Geolocation.GetCurrentPosition(System.Delegate,System.Delegate,Bridge.Html5.GeolocationPositionOptions)">
            <summary>
            Determines the device's current location and gives back a Position object with the data.
            </summary>
            <param name="success">A callback function that takes a Position object as its sole input parameter.</param>
            <param name="error">An optional callback function that takes a PositionError object as its sole input parameter.</param>
            <param name="options">An optional PositionOptions object.</param>
        </member>
        <member name="M:Bridge.Html5.Geolocation.GetCurrentPosition(System.Action{Bridge.Html5.GeolocationPosition},System.Action{Bridge.Html5.GeolocationPositionError},Bridge.Html5.GeolocationPositionOptions)">
            <summary>
            Determines the device's current location and gives back a Position object with the data.
            </summary>
            <param name="success">A callback function that takes a Position object as its sole input parameter.</param>
            <param name="error">An optional callback function that takes a PositionError object as its sole input parameter.</param>
            <param name="options">An optional PositionOptions object.</param>
        </member>
        <member name="M:Bridge.Html5.Geolocation.WatchPosition(System.Delegate)">
            <summary>
            The Geolocation.watchPosition() method is used to register a handler function that will be called automatically each time the position of the device changes. You can also, optionally, specify an error handling callback function.
            </summary>
            <param name="success">A callback function that takes a Position object as an input parameter.</param>
            <returns>This method returns a watch ID value than can be used to unregister the handler by passing it to the Geolocation.clearWatch() method.</returns>
        </member>
        <member name="M:Bridge.Html5.Geolocation.WatchPosition(System.Action{Bridge.Html5.GeolocationPosition})">
            <summary>
            The Geolocation.watchPosition() method is used to register a handler function that will be called automatically each time the position of the device changes. You can also, optionally, specify an error handling callback function.
            </summary>
            <param name="success">A callback function that takes a Position object as an input parameter.</param>
            <returns>This method returns a watch ID value than can be used to unregister the handler by passing it to the Geolocation.clearWatch() method.</returns>
        </member>
        <member name="M:Bridge.Html5.Geolocation.WatchPosition(System.Delegate,System.Delegate)">
            <summary>
            The Geolocation.watchPosition() method is used to register a handler function that will be called automatically each time the position of the device changes. You can also, optionally, specify an error handling callback function.
            </summary>
            <param name="success">A callback function that takes a Position object as an input parameter.</param>
            <param name="error">An optional callback function that takes a PositionError object as an input parameter.</param>
            <returns>This method returns a watch ID value than can be used to unregister the handler by passing it to the Geolocation.clearWatch() method.</returns>
        </member>
        <member name="M:Bridge.Html5.Geolocation.WatchPosition(System.Action{Bridge.Html5.GeolocationPosition},System.Action{Bridge.Html5.GeolocationPositionError})">
            <summary>
            The Geolocation.watchPosition() method is used to register a handler function that will be called automatically each time the position of the device changes. You can also, optionally, specify an error handling callback function.
            </summary>
            <param name="success">A callback function that takes a Position object as an input parameter.</param>
            <param name="error">An optional callback function that takes a PositionError object as an input parameter.</param>
            <returns>This method returns a watch ID value than can be used to unregister the handler by passing it to the Geolocation.clearWatch() method.</returns>
        </member>
        <member name="M:Bridge.Html5.Geolocation.WatchPosition(System.Delegate,System.Delegate,Bridge.Html5.GeolocationPositionOptions)">
            <summary>
            The Geolocation.watchPosition() method is used to register a handler function that will be called automatically each time the position of the device changes. You can also, optionally, specify an error handling callback function.
            </summary>
            <param name="success">A callback function that takes a Position object as an input parameter.</param>
            <param name="error">An optional callback function that takes a PositionError object as an input parameter.</param>
            <param name="options">An optional PositionOptions object.</param>
            <returns>This method returns a watch ID value than can be used to unregister the handler by passing it to the Geolocation.clearWatch() method.</returns>
        </member>
        <member name="M:Bridge.Html5.Geolocation.WatchPosition(System.Action{Bridge.Html5.GeolocationPosition},System.Action{Bridge.Html5.GeolocationPositionError},Bridge.Html5.GeolocationPositionOptions)">
            <summary>
            The Geolocation.watchPosition() method is used to register a handler function that will be called automatically each time the position of the device changes. You can also, optionally, specify an error handling callback function.
            </summary>
            <param name="success">A callback function that takes a Position object as an input parameter.</param>
            <param name="error">An optional callback function that takes a PositionError object as an input parameter.</param>
            <param name="options">An optional PositionOptions object.</param>
            <returns>This method returns a watch ID value than can be used to unregister the handler by passing it to the Geolocation.clearWatch() method.</returns>
        </member>
        <member name="M:Bridge.Html5.Geolocation.ClearWatch(System.Object)">
            <summary>
            Removes the particular handler previously installed using watchPosition().
            </summary>
            <param name="id">The ID number returned by the Geolocation.watchPosition() method when installing the handler you wish to remove.</param>
        </member>
        <member name="T:Bridge.Html5.GeolocationCoordinates">
            <summary>
            The Coordinates interface represents the position and attitude of the device on Earth, as well as the accuracy with which these data are computed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationCoordinates.Latitude">
            <summary>
            Returns a double representing the latitude of the position in decimal degrees.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationCoordinates.Longitude">
            <summary>
            Returns a double representing the longitude of the position in decimal degrees.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationCoordinates.Altitude">
            <summary>
            Returns a double representing the altitude of the position in meters, relative to sea level. This value can be null.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationCoordinates.Accuracy">
            <summary>
            Returns a double representing the accuracy of the latitude and longitude properties expressed in meters.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationCoordinates.AltitudeAccuracy">
            <summary>
            Returns a double representing the accuracy of the altitude expressed in meters. This value can be null.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationCoordinates.Heading">
            <summary>
            Returns a double representing the direction in which the device is traveling. This value, specified in degrees, indicates how far off from heading due north the device is. 0 degrees represents true true north, and the direction is determined clockwise (which means that east is 90 degrees and west is 270 degrees). If speed is 0, heading is NaN. If the device is not able to provide heading information, this value is null.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationCoordinates.Speed">
            <summary>
            Returns a double representing the velocity of the device in meters per second. This value can be null.
            </summary>
        </member>
        <member name="T:Bridge.Html5.GeolocationPosition">
            <summary>
            The Position interface represents the position of the concerned device at a given time. The position, represented by a Coordinates object, comprehends the 2D position of the device, on a spheroid representing the Earth, but also its altitude and its speed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationPosition.Coords">
            <summary>
            Returns a GeolocationCoordinates object defining the current location.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationPosition.Timestamp">
            <summary>
            Returns a DOMTimeStamp representing the time at which the location was retrieved.
            </summary>
        </member>
        <member name="T:Bridge.Html5.GeolocationPositionError">
            <summary>
            The PositionError interface represents the reason of an error occuring when using the geolocating device.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationPositionError.Code">
            <summary>
            Returns an unsigned short representing the error code.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationPositionError.Message">
            <summary>
            Returns a human-readable DOMString describing the details of the error.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationErrorCode.PermissionDenied">
            <summary>
            The acquisition of the geolocation information failed because the page didn't have the permission to do it.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationErrorCode.PositionUnavailable">
            <summary>
            The acquisition of the geolocation failed because one or several internal source of position returned an internal error.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationErrorCode.Timeout">
            <summary>
            The time allowed to acquire the geolocation, defined by PositionOptions.timeout information was reached before the information was obtained.
            </summary>
        </member>
        <member name="T:Bridge.Html5.GeolocationPositionOptions">
            <summary>
            The PositionOptions interface describes the options to use when calling the geolocation backend. The user agent itself doesn't create such an object itself: it is the calling script that create it and use it as a parameter of Geolocation.getCurrentPosition() and Geolocation.watchPosition().
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationPositionOptions.EnableHighAccuracy">
            <summary>
            Boolean property that indicates the application would like to receive the best possible results. If true and if the device is able to provide a more accurate position, it will do so. Note that this can result in slower response times or increased power consumption (with a GPS chip on a mobile device for example). On the other hand, if false (the default value), the device can take the liberty to save resources by responding more quickly and/or using less power.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationPositionOptions.Timeout">
            <summary>
            Positive long value representing the maximum length of time (in milliseconds) the device is allowed to take in order to return a position. The default value is Infinity, meaning that getCurrentPosition() won't return until the position is available.
            </summary>
        </member>
        <member name="F:Bridge.Html5.GeolocationPositionOptions.MaximumAge">
            <summary>
            Positive long value indicating the maximum age in milliseconds of a possible cached position that is acceptable to return. If set to 0, it means that the device cannot use a cached position and must attempt to retrieve the real current position. If set to Infinity the device must return a cached position regardless of its age.
            </summary>
        </member>
        <member name="F:Bridge.Html5.History.Length">
            <summary>
            Returns an Integer representing the number of elements in the session history, including the currently loaded page. For example, for a page loaded in a new tab this property returns 1.
            </summary>
        </member>
        <member name="F:Bridge.Html5.History.State">
            <summary>
            Returns an any value representing the state at the top of the history stack. This is a way to look at the state without having to wait for a popstate event.
            </summary>
        </member>
        <member name="M:Bridge.Html5.History.Back">
            <summary>
            Goes to the previous page in session history, the same action as when the user clicks the browser's Back button. Equivalent to history.go(-1).
            Note: Calling this method to go back beyond the first page in the session history has no effect and doesn't raise an exception.
            </summary>
        </member>
        <member name="M:Bridge.Html5.History.Forward">
            <summary>
            Goes to the next page in session history, the same action as when the user clicks the browser's Forward button; this is equivalent to history.go(1).
            Note: Calling this method to go back beyond the last page in the session history has no effect and doesn't raise an exception.
            </summary>
        </member>
        <member name="M:Bridge.Html5.History.Go(System.Int32)">
            <summary>
            Loads a page from the session history, identified by its relative location to the current page, for example -1 for the previous page or 1 for the next page. When integerDelta is out of bounds (e.g. -1 when there are no previously visited pages in the session history), the method doesn't do anything and doesn't raise an exception. Calling go() without parameters or with a non-integer argument has no effect (unlike Internet Explorer, which supports string URLs as the argument).
            </summary>
            <param name="delta"></param>
        </member>
        <member name="M:Bridge.Html5.History.PushState(System.Object,System.String)">
            <summary>
            Pushes the given data onto the session history stack with the specified title and, if provided, URL. The data is treated as opaque by the DOM; you may specify any JavaScript object that can be serialized.
            </summary>
            <param name="state">The state object is a JavaScript object which is associated with the new history entry created by pushState(). Whenever the user navigates to the new state, a popstate event is fired, and the state property of the event contains a copy of the history entry's state object.</param>
            <param name="title">Firefox currently ignores this parameter, although it may use it in the future. Passing the empty string here should be safe against future changes to the method. Alternatively, you could pass a short title for the state to which you're moving.</param>
        </member>
        <member name="M:Bridge.Html5.History.PushState(System.Object,System.String,System.String)">
            <summary>
            Pushes the given data onto the session history stack with the specified title and, if provided, URL. The data is treated as opaque by the DOM; you may specify any JavaScript object that can be serialized.
            </summary>
            <param name="state">The state object is a JavaScript object which is associated with the new history entry created by pushState(). Whenever the user navigates to the new state, a popstate event is fired, and the state property of the event contains a copy of the history entry's state object.</param>
            <param name="title">Firefox currently ignores this parameter, although it may use it in the future. Passing the empty string here should be safe against future changes to the method. Alternatively, you could pass a short title for the state to which you're moving.</param>
            <param name="url">The new history entry's URL is given by this parameter. Note that the browser won't attempt to load this URL after a call to pushState(), but it might attempt to load the URL later, for instance after the user restarts the browser. The new URL does not need to be absolute; if it's relative, it's resolved relative to the current URL. The new URL must be of the same origin as the current URL; otherwise, pushState() will throw an exception. This parameter is optional; if it isn't specified, it's set to the document's current URL.</param>
        </member>
        <member name="M:Bridge.Html5.History.ReplaceState(System.Object,System.String)">
            <summary>
            Updates the most recent entry on the history stack to have the specified data, title, and, if provided, URL. The data is treated as opaque by the DOM; you may specify any JavaScript object that can be serialized.
            </summary>
            <param name="state">The state object is a JavaScript object which is associated with the new history entry created by pushState(). Whenever the user navigates to the new state, a popstate event is fired, and the state property of the event contains a copy of the history entry's state object.</param>
            <param name="title">Firefox currently ignores this parameter, although it may use it in the future. Passing the empty string here should be safe against future changes to the method. Alternatively, you could pass a short title for the state to which you're moving.</param>
        </member>
        <member name="M:Bridge.Html5.History.ReplaceState(System.Object,System.String,System.String)">
            <summary>
            Updates the most recent entry on the history stack to have the specified data, title, and, if provided, URL. The data is treated as opaque by the DOM; you may specify any JavaScript object that can be serialized.
            </summary>
            <param name="state">The state object is a JavaScript object which is associated with the new history entry created by pushState(). Whenever the user navigates to the new state, a popstate event is fired, and the state property of the event contains a copy of the history entry's state object.</param>
            <param name="title">Firefox currently ignores this parameter, although it may use it in the future. Passing the empty string here should be safe against future changes to the method. Alternatively, you could pass a short title for the state to which you're moving.</param>
            <param name="url">The new history entry's URL is given by this parameter. Note that the browser won't attempt to load this URL after a call to pushState(), but it might attempt to load the URL later, for instance after the user restarts the browser. The new URL does not need to be absolute; if it's relative, it's resolved relative to the current URL. The new URL must be of the same origin as the current URL; otherwise, pushState() will throw an exception. This parameter is optional; if it isn't specified, it's set to the document's current URL.</param>
        </member>
        <member name="M:Bridge.Html5.INodeFilter.AcceptNode(Bridge.Html5.Node)">
            <summary>
            Returns an unsigned short that will be used to tell if a given Node must be accepted or not by the NodeIterator or TreeWalker iteration algorithm. This method is expected to be written by the user of a NodeFilter.
            </summary>
            <param name="node">Node being the object to check against the filter.</param>
            <returns></returns>
        </member>
        <member name="F:Bridge.Html5.NodeFilterResult.Accept">
            <summary>
            Value returned by the NodeFilter.acceptNode() method when a node should be accepted.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeFilterResult.Reject">
            <summary>
            Value to be returned by the NodeFilter.acceptNode() method when a node should be rejected. The children of rejected nodes are not visited by the NodeIterator or TreeWalker object; this value is treated as "skip this node and all its children".
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeFilterResult.Skip">
            <summary>
            Value to be returned by NodeFilter.acceptNode() for nodes to be skipped by the NodeIterator or TreeWalker object. The children of skipped nodes are still considered. This is treated as "skip this node but not its children".
            </summary>
        </member>
        <member name="F:Bridge.Html5.Location.Href">
            <summary>
            String containing the whole URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Location.Protocol">
            <summary>
            String containing the protocol scheme of the URL, including the final ':'.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Location.Host">
            <summary>
            String containing the host, that is the hostname, a ':', and the port of the URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Location.HostName">
            <summary>
            String containing the domain of the URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Location.Port">
            <summary>
            String containing the port number of the URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Location.PathName">
            <summary>
            String containing an initial '/' followed by the path of the URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Location.Search">
            <summary>
            String containing a '?' followed by the parameters of the URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Location.Hash">
            <summary>
            String containing a '#' followed by the fragment identifier of the URL.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Location.Username">
            <summary>
            String containing the username specified before the domain name.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Location.Password">
            <summary>
            String containing the password specified before the domain name.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Location.Origin">
            <summary>
            String containing the canonical form of the origin of the specific location.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Location.Assign(System.String)">
            <summary>
            The Location.assign()method causes the window to load and display the document at the URL specified.
            If the assignment can't happen because of a security violation, a DOMException of the SECURITY_ERROR type is thrown. This happens if the origin of the script calling the method is different from the origin of the page originally described by the Location object, mostly when the script is hosted on a different domain.
            If the provided URL is not valid, a DOMException of the SYNTAX_ERROR type is thrown.
            </summary>
            <param name="url">String containing the URL of the page to navigate to.</param>
        </member>
        <member name="M:Bridge.Html5.Location.Reload">
            <summary>
            The Location.reload()method Reloads the resource from the current URL. Its optional unique parameter is a Boolean, which, when it is true, causes the page to always be reloaded from the server. If it is false or not specified, the browser may reload the page from its cache.
            If the assignment can't happen because of a security violation, a DOMException of the SECURITY_ERROR type is thrown. This happens if the origin of the script calling the method is different from the origin of the page originally described by the Location object, mostly when the script is hosted on a different domain.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Location.Reload(System.Boolean)">
            <summary>
            The Location.reload()method Reloads the resource from the current URL. Its optional unique parameter is a Boolean, which, when it is true, causes the page to always be reloaded from the server. If it is false or not specified, the browser may reload the page from its cache.
            If the assignment can't happen because of a security violation, a DOMException of the SECURITY_ERROR type is thrown. This happens if the origin of the script calling the method is different from the origin of the page originally described by the Location object, mostly when the script is hosted on a different domain.
            </summary>
            <param name="forcedReload">Boolean flag, which, when it is true, causes the page to always be reloaded from the server. If it is false or not specified, the browser may reload the page from its cache.</param>
        </member>
        <member name="M:Bridge.Html5.Location.Replace(System.String)">
            <summary>
            The Location.replace()method replaces the current resource with the one at the provided URL. The difference from the assign() method is that after using replace() the current page will not be saved in session History, meaning the user won't be able to use the back button to navigate to it.
            </summary>
            <param name="url">String containing the URL of the page to navigate to.</param>
        </member>
        <member name="T:Bridge.Html5.MediaList">
            <summary>
            MediaList representing the intended destination medium for style information.
            </summary>
        </member>
        <member name="T:Bridge.Html5.MediaQueryList">
            <summary>
            A MediaQueryList object maintains a list of media queries on a document, and handles sending notifications to listeners when the media queries on the document change.
            This makes it possible to observe a document to detect when its media queries change, instead of polling the values periodically, if you need to programmatically detect changes to the values of media queries on a document.
            </summary>
        </member>
        <member name="M:Bridge.Html5.MediaQueryList.AddListener(System.Delegate)">
            <summary>
            Adds a new listener to the media query list. If the specified listener is already in the list, this method has no effect.
            </summary>
            <param name="listener">The MediaQueryListListener to invoke when the media query's evaluated result changes.</param>
        </member>
        <member name="M:Bridge.Html5.MediaQueryList.AddListener(System.Action{Bridge.Html5.MediaQueryList})">
            <summary>
            Adds a new listener to the media query list. If the specified listener is already in the list, this method has no effect.
            </summary>
            <param name="listener">The MediaQueryListListener to invoke when the media query's evaluated result changes.</param>
        </member>
        <member name="M:Bridge.Html5.MediaQueryList.RemoveListener(System.Delegate)">
            <summary>
            Removes a listener from the media query list. Does nothing if the specified listener isn't already in the list.
            </summary>
            <param name="listener">The MediaQueryListListener to stop calling on changes to the media query's evaluated result.</param>
        </member>
        <member name="M:Bridge.Html5.MediaQueryList.RemoveListener(System.Action{Bridge.Html5.MediaQueryList})">
            <summary>
            Removes a listener from the media query list. Does nothing if the specified listener isn't already in the list.
            </summary>
            <param name="listener">The MediaQueryListListener to stop calling on changes to the media query's evaluated result.</param>
        </member>
        <member name="F:Bridge.Html5.MediaQueryList.Matches">
            <summary>
            true if the document currently matches the media query list; otherwise false. Read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.MediaQueryList.Media">
            <summary>
            The serialized media query list.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Navigator">
            <summary>
             The Navigator interface represents the state and the identity of the user agent. It allows scripts to query it and to register themselves to carry on some activities.
            A Navigator object can be retrieved using the read-only Window.navigator property.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Navigator.AppName">
            <summary>
            Returns a DOMString with the official name of the browser. Do not rely on this property to return the correct value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Navigator.AppVersion">
            <summary>
            Returns the version of the browser as a DOMString. Do not rely on this property to return the correct value.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Navigator.Geolocation">
            <summary>
            Returns a Geolocation object allowing accessing the location of the device.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Navigator.Language">
            <summary>
            Returns a DOMString representing the language version of the browser.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Navigator.OnLine">
            <summary>
            Returns a Boolean indicating whether the browser is working online.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Navigator.Oscpu">
            <summary>
            Returns a string that represents the current operating system.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Navigator.Platform">
            <summary>
            Returns a string representing the platform of the browser.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Navigator.Product">
            <summary>
            Returns the product name of the current browser (e.g., "Gecko").
            </summary>
        </member>
        <member name="F:Bridge.Html5.Navigator.UserAgent">
            <summary>
            Returns the user agent string for the current browser.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Navigator.GetGamepads">
            <summary>
            Returns an array: the first value is null, and the others are all Gamepad objects, one for each gamepad connected to the device. So if no gamepads are connected, the method will just return null.
            </summary>
        </member>
        <member name="T:Bridge.Html5.NodeFilter">
            <summary>
            types of Node that must to be presented
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeFilter.ShowAll">
            <summary>
            Shows all nodes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeFilter.ShowAttribute">
            <summary>
            Shows attribute Attr nodes. This is meaningful only when creating a NodeIterator with an Attr node as its root; in this case, it means that the attribute node will appear in the first position of the iteration or traversal. Since attributes are never children of other nodes, they do not appear when traversing over the document tree.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeFilter.ShowCdataSection">
            <summary>
            Shows CDATASection nodes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeFilter.ShowComment">
            <summary>
            Shows Comment nodes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeFilter.ShowDocument">
            <summary>
            Shows Document nodes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeFilter.ShowDocumentFragment">
            <summary>
            Shows DocumentFragment nodes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeFilter.ShowDocumentType">
            <summary>
            Shows DocumentType nodes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeFilter.ShowElement">
            <summary>
            Shows Element nodes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeFilter.ShowEntity">
            <summary>
            Shows Entity nodes. This is meaningful only when creating a NodeIterator with an Entity node as its root; in this case, it means that the Entity node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeFilter.ShowEntityReference">
            <summary>
            Shows EntityReference nodes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeFilter.ShowNotation">
            <summary>
            Shows Notation nodes. This is meaningful only when creating a NodeIterator with a Notation node as its root; in this case, it means that the Notation node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeFilter.ShowProcessingInstruction">
            <summary>
            Shows ProcessingInstruction nodes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeFilter.ShowText">
            <summary>
            Shows Text nodes.
            </summary>
        </member>
        <member name="T:Bridge.Html5.NodeIterator">
            <summary>
            The NodeIterator interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order.
            A NodeIterator can be created using the Document.createNodeIterator() method
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeIterator.Root">
            <summary>
            Returns a Node representing the root node as specified when the NodeIterator was created.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeIterator.WhatToShow">
            <summary>
            Returns an unsigned long being a bitmask made of constants describing the types of Node that must to be presented. Non-matching nodes are skipped, but their children may be included, if relevant.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeIterator.ReferenceNode">
            <summary>
            Returns the Node to which the iterator is anchored.
            </summary>
        </member>
        <member name="F:Bridge.Html5.NodeIterator.PointerBeforeReferenceNode">
            <summary>
            Returns a Boolean flag that indicates whether the NodeFilter is anchored before, the flag being true, or after, the flag being false, the anchor node.
            </summary>
        </member>
        <member name="M:Bridge.Html5.NodeIterator.Detach">
            <summary>
            This operation is a no-op. It doesn't do anything. Previously it was telling the engine that the NodeIterator was no more used, but this is now useless.
            </summary>
        </member>
        <member name="M:Bridge.Html5.NodeIterator.PreviousNode">
            <summary>
            Returns the previous Node in the document, or null if there are none.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.NodeIterator.NextNode">
            <summary>
            Returns the next Node in the document, or null if there are none.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.Attr">
            <summary>
            This type represents a DOM element's attribute as an object. In most DOM methods, you will probably directly retrieve the attribute as a string (e.g., Element.getAttribute(), but certain functions (e.g., Element.getAttributeNode()) or means of iterating give Attr types.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Attr.IsId">
            <summary>
            Indicates whether the attribute is an "ID attribute". An "ID attribute" being an attribute which value is expected to be unique across a DOM Document. In HTML DOM, "id" is the only ID attribute, but XML documents could define others. Whether or not an attribute is unique is often determined by a DTD or other schema description.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Attr.Name">
            <summary>
            The attribute's name.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Attr.Value">
            <summary>
            The attribute's value.
            </summary>
        </member>
        <member name="T:Bridge.Html5.CDATASection">
            <summary>
            A CDATA Section can be used within XML to include extended portions of unescaped text, such that the symbols &lt; and &amp; do not need escaping as they normally do within XML when used as text.
            </summary>
        </member>
        <member name="T:Bridge.Html5.CharacterData">
            <summary>
            The CharacterData abstract interface represents a Node object that contains characters. This is an abstract interface, meaning there aren't any object of type CharacterData: it is implemented by other interfaces, like Text, Comment, or ProcessingInstruction which aren't abstract.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CharacterData.Data">
            <summary>
            Is a DOMString representing the textual data contained in this object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CharacterData.Length">
            <summary>
            Returns an unsigned long representing the size of the string contained in CharacterData.data.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CharacterData.PreviousElementSibling">
            <summary>
            Returns the Element immediately prior to this ChildNode in its parent's children list, or null if there is no Element in the list prior to this ChildNode.
            </summary>
        </member>
        <member name="F:Bridge.Html5.CharacterData.NextElementSibling">
            <summary>
            Returns the Element immediately following this ChildNode in its parent's children list, or null if there is no Element in the list following this ChildNode.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CharacterData.AppendData(System.String)">
            <summary>
            Appends the given DOMString to the CharacterData.data string; when this method returns, data contains the concatenated DOMString.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Bridge.Html5.CharacterData.DeleteData(System.Int32,System.Int32)">
            <summary>
            Removes the specified amount of characters, starting at the specified offset, from the CharacterData.data string; when this method returns, data contains the shortened DOMString.
            </summary>
            <param name="offset"></param>
            <param name="count"></param>
        </member>
        <member name="M:Bridge.Html5.CharacterData.InsertData(System.Int32,System.String)">
            <summary>
            Inserts the specified characters, at the specified offset, in the CharacterData.data string; when this method returns, data contains the modified DOMString.
            </summary>
            <param name="offset"></param>
            <param name="data"></param>
        </member>
        <member name="M:Bridge.Html5.CharacterData.Remove">
            <summary>
            Removes the object from its parent children list.
            </summary>
        </member>
        <member name="M:Bridge.Html5.CharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
            <summary>
            Replaces the specified amount of characters, starting at the specified offset, with the specified DOMString; when this method returns, data contains the modified DOMString.
            </summary>
            <param name="offset"></param>
            <param name="count"></param>
            <param name="data"></param>
        </member>
        <member name="M:Bridge.Html5.CharacterData.SubstringData(System.Int32,System.Int32)">
            <summary>
            Returns a DOMString containing the part of CharacterData.data of the specified length and starting at the specified offset.
            </summary>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.Comment">
            <summary>
            The Comment interface represents textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view. Comments are represented in HTML and XML as content between '<!--' and '-->'. In XML, the character sequence '--' cannot be used within a comment.
            </summary>
        </member>
        <member name="T:Bridge.Html5.ContentEditable">
            <summary>
            Indicate whether or not the element is editable.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ContentEditable.True">
            <summary>
            The empty string, indicates that the element is editable.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ContentEditable.False">
            <summary>
            Indicates that the element cannot be edited.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ContentEditable.Inherit">
            <summary>
            Indicates that the element inherits its parent's editable status.
            </summary>
        </member>
        <member name="T:Bridge.Html5.DocumentPosition">
            <summary>
            Relationship of nodes
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLElement">
            <summary>
            The HTMLElement interface represents any HTML element. Some elements directly implement this interface, others implement it via an interface that inherits it.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.AccessKey">
            <summary>
            The access key assigned to the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.AccessKeyLabel">
            <summary>
            A string that represents the element's assigned access key.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.ContentEditable">
            <summary>
            Gets/sets whether or not the element is editable.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.IsContentEditable">
            <summary>
            Indicates whether or not the content of the element can be edited.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.Dataset">
            <summary>
            Allows access to read and write custom data attributes (data-*) of the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.Dir">
            <summary>
            The HTMLElement.dir attribute gets or sets the text writing directionality of the content of the current element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.Lang">
            <summary>
            Gets/sets the language of an element's attributes, text, and element contents.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OffsetHeight">
            <summary>
            The height of an element, relative to the layout.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OffsetLeft">
            <summary>
            The distance from this element's left border to its offsetParent's left border.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OffsetParent">
            <summary>
            The element from which all offset calculations are currently computed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OffsetTop">
            <summary>
            The distance from this element's top border to its offsetParent's top border.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OffsetWidth">
            <summary>
            The width of an element, relative to the layout.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.Style">
            <summary>
            An object representing the declarations of an element's style attributes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.TabIndex">
            <summary>
            Gets/sets the position of the element in the tabbing order.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.Title">
            <summary>
            A string that appears in a popup box when mouse is over the element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnCopy">
            <summary>
            The oncopy property returns the onCopy event handler code on the current element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnCut">
            <summary>
            Returns the event handling code for the cut event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnPaste">
            <summary>
            Returns the event handling code for the paste event.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLElement.Blur">
            <summary>
            Removes keyboard focus from the currently focused element.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLElement.Click">
            <summary>
            Sends a mouse click event to the element.
            </summary>
        </member>
        <member name="M:Bridge.Html5.HTMLElement.Focus">
            <summary>
            Makes the element the current keyboard focus.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnAbort">
            <summary>
             EventHandler representing the code to be called when the abort event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnBlur">
            <summary>
            EventHandler representing the code to be called when the blur event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnError">
            <summary>
            OnErrorEventHandler representing the code to be called when the error event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnFocus">
            <summary>
            EventHandler representing the code to be called when the focus event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnCancel">
            <summary>
            EventHandler representing the code to be called when the cancel event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnCanPlay">
            <summary>
            EventHandler representing the code to be called when the canplay event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnCanPlayThrough">
            <summary>
            EventHandler representing the code to be called when the canplaythrough event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnChange">
            <summary>
            EventHandler representing the code to be called when the change event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnClick">
            <summary>
            EventHandler representing the code to be called when the click event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnClose">
            <summary>
            EventHandler representing the code to be called when the close event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnContextMenu">
            <summary>
            EventHandler representing the code to be called when the contextmenu event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnCueChange">
            <summary>
            EventHandler representing the code to be called when the cuechange event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnDblClick">
            <summary>
            EventHandler representing the code to be called when the dblclick event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnDrag">
            <summary>
            EventHandler representing the code to be called when the drag event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnDragEnd">
            <summary>
            Is an EventHandler representing the code to be called when the dragend event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnDragEnter">
            <summary>
            Is an EventHandler representing the code to be called when the dragenter event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnDragExit">
            <summary>
            Is an EventHandler representing the code to be called when the dragexit event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnDragLeave">
            <summary>
            Is an EventHandler representing the code to be called when the dragleave event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnDragOver">
            <summary>
            Is an EventHandler representing the code to be called when the dragover event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnDragStart">
            <summary>
            Is an EventHandler representing the code to be called when the dragstart event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnDrop">
            <summary>
            Is an EventHandler representing the code to be called when the drop event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnDurationChange">
            <summary>
            Is an EventHandler representing the code to be called when the durationchange event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnEmptied">
            <summary>
            Is an EventHandler representing the code to be called when the emptied event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnEnded">
            <summary>
            Is an EventHandler representing the code to be called when the ended event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnInput">
            <summary>
            Is an EventHandler representing the code to be called when the input event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnInvalid">
            <summary>
            Is an EventHandler representing the code to be called when the invalid event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnKeyDown">
            <summary>
            Is an EventHandler representing the code to be called when the keydown event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnKeyPress">
            <summary>
            Is an EventHandler representing the code to be called when the keypress event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnKeyUp">
            <summary>
            Is an EventHandler representing the code to be called when the keyup event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnLoad">
            <summary>
            Is an EventHandler representing the code to be called when the load event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnLoadedData">
            <summary>
            Is an EventHandler representing the code to be called when the loadeddata event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnLoadedMetaData">
            <summary>
            Is an EventHandler representing the code to be called when the loadedmetadata event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnLoadStart">
            <summary>
            Is an EventHandler representing the code to be called when the loadstart event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnMouseDown">
            <summary>
            Is an EventHandler representing the code to be called when the mousedown event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnMouseEnter">
            <summary>
            Is an EventHandler representing the code to be called when the mouseenter event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnMouseLeave">
            <summary>
            Is an EventHandler representing the code to be called when the mouseleave event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnMouseMove">
            <summary>
            Is an EventHandler representing the code to be called when the mousemove event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnMouseOut">
            <summary>
            Is an EventHandler representing the code to be called when the mouseout event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnMouseOver">
            <summary>
            Is an EventHandler representing the code to be called when the mouseover event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnMouseUp">
            <summary>
            Is an EventHandler representing the code to be called when the mouseup event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnMouseWheel">
            <summary>
            Is an EventHandler representing the code to be called when the mousewheel event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnPause">
            <summary>
            Is an EventHandler representing the code to be called when the pause event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnPlay">
            <summary>
            Is an EventHandler representing the code to be called when the play event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnPlaying">
            <summary>
            Is an EventHandler representing the code to be called when the playing event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnProgress">
            <summary>
            Is an EventHandler representing the code to be called when the progress event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnRateChange">
            <summary>
            Is an EventHandler representing the code to be called when the ratechange event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnReset">
            <summary>
            Is an EventHandler representing the code to be called when the reset event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnScroll">
            <summary>
            Is an EventHandler representing the code to be called when the scroll event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnSeeked">
            <summary>
            Is an EventHandler representing the code to be called when the seeked event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnSeeking">
            <summary>
            Is an EventHandler representing the code to be called when the seeking event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnSelect">
            <summary>
            Is an EventHandler representing the code to be called when the select event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnShow">
            <summary>
            Is an EventHandler representing the code to be called when the show event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnSort">
            <summary>
            Is an EventHandler representing the code to be called when the sort event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnStalled">
            <summary>
            Is an EventHandler representing the code to be called when the stalled event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnSubmit">
            <summary>
            Is an EventHandler representing the code to be called when the submit event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnSuspend">
            <summary>
            Is an EventHandler representing the code to be called when the suspend event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnTimeUpdate">
            <summary>
            Is an EventHandler representing the code to be called when the timeupdate event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnVolumeChange">
            <summary>
            Is an EventHandler representing the code to be called when the volumechange event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnWaiting">
            <summary>
            Is an EventHandler representing the code to be called when the waiting event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnTouchStart">
            <summary>
            Returns the event handling code for the touchstart event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnTouchEnd">
            <summary>
            Returns the event handling code for the touchend event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnTouchMove">
            <summary>
            Returns the event handling code for the touchmove event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnTouchEnter">
            <summary>
            Returns the event handling code for the touchenter event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnTouchLeave">
            <summary>
            Returns the event handling code for the touchleave event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement.OnTouchCancel">
            <summary>
            Returns the event handling code for the touchcancel event.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLElement`1">
            <summary>
            A generic version of the Element class. The type parameter is a type of Events' CurrentTarget.
            </summary>
            <typeparam name="TCurrentTarget">The CurrentTarget type of all Element's events</typeparam>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnAbort">
            <summary>
             EventHandler representing the code to be called when the abort event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnBlur">
            <summary>
            EventHandler representing the code to be called when the blur event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnFocus">
            <summary>
            EventHandler representing the code to be called when the focus event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnCancel">
            <summary>
            EventHandler representing the code to be called when the cancel event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnCanPlay">
            <summary>
            EventHandler representing the code to be called when the canplay event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnCanPlayThrough">
            <summary>
            EventHandler representing the code to be called when the canplaythrough event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnChange">
            <summary>
            EventHandler representing the code to be called when the change event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnClick">
            <summary>
            EventHandler representing the code to be called when the click event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnClose">
            <summary>
            EventHandler representing the code to be called when the close event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnContextMenu">
            <summary>
            EventHandler representing the code to be called when the contextmenu event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnCueChange">
            <summary>
            EventHandler representing the code to be called when the cuechange event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnDblClick">
            <summary>
            EventHandler representing the code to be called when the dblclick event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnDrag">
            <summary>
            EventHandler representing the code to be called when the drag event is raised.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnDragEnd">
            <summary>
            Is an EventHandler representing the code to be called when the dragend event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnDragEnter">
            <summary>
            Is an EventHandler representing the code to be called when the dragenter event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnDragExit">
            <summary>
            Is an EventHandler representing the code to be called when the dragexit event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnDragLeave">
            <summary>
            Is an EventHandler representing the code to be called when the dragleave event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnDragOver">
            <summary>
            Is an EventHandler representing the code to be called when the dragover event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnDragStart">
            <summary>
            Is an EventHandler representing the code to be called when the dragstart event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnDrop">
            <summary>
            Is an EventHandler representing the code to be called when the drop event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnDurationChange">
            <summary>
            Is an EventHandler representing the code to be called when the durationchange event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnEmptied">
            <summary>
            Is an EventHandler representing the code to be called when the emptied event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnEnded">
            <summary>
            Is an EventHandler representing the code to be called when the ended event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnInput">
            <summary>
            Is an EventHandler representing the code to be called when the input event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnInvalid">
            <summary>
            Is an EventHandler representing the code to be called when the invalid event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnKeyDown">
            <summary>
            Is an EventHandler representing the code to be called when the keydown event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnKeyPress">
            <summary>
            Is an EventHandler representing the code to be called when the keypress event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnKeyUp">
            <summary>
            Is an EventHandler representing the code to be called when the keyup event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnLoad">
            <summary>
            Is an EventHandler representing the code to be called when the load event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnLoadedData">
            <summary>
            Is an EventHandler representing the code to be called when the loadeddata event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnLoadedMetaData">
            <summary>
            Is an EventHandler representing the code to be called when the loadedmetadata event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnLoadStart">
            <summary>
            Is an EventHandler representing the code to be called when the loadstart event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnMouseDown">
            <summary>
            Is an EventHandler representing the code to be called when the mousedown event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnMouseEnter">
            <summary>
            Is an EventHandler representing the code to be called when the mouseenter event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnMouseLeave">
            <summary>
            Is an EventHandler representing the code to be called when the mouseleave event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnMouseMove">
            <summary>
            Is an EventHandler representing the code to be called when the mousemove event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnMouseOut">
            <summary>
            Is an EventHandler representing the code to be called when the mouseout event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnMouseOver">
            <summary>
            Is an EventHandler representing the code to be called when the mouseover event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnMouseUp">
            <summary>
            Is an EventHandler representing the code to be called when the mouseup event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnMouseWheel">
            <summary>
            Is an EventHandler representing the code to be called when the mousewheel event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnPause">
            <summary>
            Is an EventHandler representing the code to be called when the pause event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnPlay">
            <summary>
            Is an EventHandler representing the code to be called when the play event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnPlaying">
            <summary>
            Is an EventHandler representing the code to be called when the playing event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnProgress">
            <summary>
            Is an EventHandler representing the code to be called when the progress event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnRateChange">
            <summary>
            Is an EventHandler representing the code to be called when the ratechange event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnReset">
            <summary>
            Is an EventHandler representing the code to be called when the reset event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnScroll">
            <summary>
            Is an EventHandler representing the code to be called when the scroll event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnSeeked">
            <summary>
            Is an EventHandler representing the code to be called when the seeked event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnSeeking">
            <summary>
            Is an EventHandler representing the code to be called when the seeking event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnSelect">
            <summary>
            Is an EventHandler representing the code to be called when the select event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnShow">
            <summary>
            Is an EventHandler representing the code to be called when the show event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnSort">
            <summary>
            Is an EventHandler representing the code to be called when the sort event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnStalled">
            <summary>
            Is an EventHandler representing the code to be called when the stalled event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnSubmit">
            <summary>
            Is an EventHandler representing the code to be called when the submit event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnSuspend">
            <summary>
            Is an EventHandler representing the code to be called when the suspend event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnTimeUpdate">
            <summary>
            Is an EventHandler representing the code to be called when the timeupdate event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnVolumeChange">
            <summary>
            Is an EventHandler representing the code to be called when the volumechange event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnWaiting">
            <summary>
            Is an EventHandler representing the code to be called when the waiting event is raised
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnTouchStart">
            <summary>
            Returns the event handling code for the touchstart event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnTouchEnd">
            <summary>
            Returns the event handling code for the touchend event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnTouchMove">
            <summary>
            Returns the event handling code for the touchmove event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnTouchEnter">
            <summary>
            Returns the event handling code for the touchenter event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnTouchLeave">
            <summary>
            Returns the event handling code for the touchleave event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.HTMLElement`1.OnTouchCancel">
            <summary>
            Returns the event handling code for the touchcancel event.
            </summary>
        </member>
        <member name="T:Bridge.Html5.ElementList">
            <summary>
            NodeList objects are collections of nodes such as those returned by Node.childNodes and the querySelectorAll method.
            </summary>
        </member>
        <member name="P:Bridge.Html5.ElementList.Item(System.Int32)">
            <summary>
            Returns an item in the list by its index, or null if out-of-bounds.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.ElementList.GetItem(System.Int32)">
            <summary>
            Returns an item in the list by its index, or null if out-of-bounds. Equivalent to nodeList[idx].
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="F:Bridge.Html5.ElementList.Length">
            <summary>
            The number of nodes in the NodeList.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLCollection`1">
            <summary>
            The generic version of the HTMLCollection class.
            HTMLCollection is an class representing a generic collection (array) of elements (in document order) and offers methods and properties for selecting from the list.
            </summary>
        </member>
        <member name="P:Bridge.Html5.HTMLCollection`1.Item(System.Int32)">
            <summary>
            Returns the specific node at the given zero-based index into the list. Returns null if the index is out of range.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Bridge.Html5.HTMLCollection`1.Item(System.String)">
            <summary>
            Returns the specific node whose ID or, as a fallback, name matches the string specified by name. Matching by name is only done as a last resort, only in HTML, and only if the referenced element supports the name attribute. Returns null if no node exists by the given name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.HTMLCollection`1.GetItem(System.Int32)">
            <summary>
            Returns the specific node at the given zero-based index into the list. Returns null if the index is out of range.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.HTMLCollection`1.GetNamedItem(System.String)">
            <summary>
            Returns the specific node whose ID or, as a fallback, name matches the string specified by name. Matching by name is only done as a last resort, only in HTML, and only if the referenced element supports the name attribute. Returns null if no node exists by the given name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="F:Bridge.Html5.HTMLCollection`1.Length">
            <summary>
            The number of items in the collection.
            </summary>
        </member>
        <member name="T:Bridge.Html5.HTMLCollection">
            <summary>
            The non-generic version of the HTMLCollection class.
            HTMLCollection is an class representing a generic collection (array) of elements (in document order) and offers methods and properties for selecting from the list.
            </summary>
        </member>
        <member name="T:Bridge.Html5.InsertPosition">
            <summary>
            The position relative to the element
            </summary>
        </member>
        <member name="F:Bridge.Html5.InsertPosition.BeforeBegin">
            <summary>
            Before the element itself.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InsertPosition.AfterBegin">
            <summary>
            Just inside the element, before its first child.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InsertPosition.BeforeEnd">
            <summary>
            Just inside the element, after its last child.
            </summary>
        </member>
        <member name="F:Bridge.Html5.InsertPosition.AfterEnd">
            <summary>
            After the element itself.
            </summary>
        </member>
        <member name="T:Bridge.Html5.NamedNodeMap">
            <summary>
            A collection of nodes returned by Node.attributes
            </summary>
        </member>
        <member name="P:Bridge.Html5.NamedNodeMap.Item(System.Int32)">
            <summary>
            Returns the item at the given index (or null if the index is higher or equal to the number of nodes)
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Bridge.Html5.NamedNodeMap.Item(System.String)">
            <summary>
            Returns the item at the given index (or null if the index is higher or equal to the number of nodes)
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.NamedNodeMap.GetNamedItem(System.String)">
            <summary>
            Gets a node by name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.NamedNodeMap.SetNamedItem(Bridge.Html5.Node)">
            <summary>
            Adds (or replaces) a node by its nodeName
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.NamedNodeMap.RemoveNamedItem(System.String)">
            <summary>
            Removes a node (or if an attribute, may reveal a default if present)
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.NamedNodeMap.GetItem(System.Int32)">
            <summary>
            Returns the item at the given index (or null if the index is higher or equal to the number of nodes)
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.NamedNodeMap.GetNamedItemNS(System.String,System.String)">
            <summary>
            Gets a node by namespaceURI and localName
            </summary>
            <param name="namespaceURI"></param>
            <param name="localName"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.NamedNodeMap.SetNamedItemNS(Bridge.Html5.Node)">
            <summary>
            Adds (or replaces) a node by its localName and namespaceURI
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.NamedNodeMap.RemoveNamedItemNS(System.String,System.String)">
            <summary>
            Removes a node (or if an attribute, may reveal a default if present)
            </summary>
            <param name="namespaceURI"></param>
            <param name="localName"></param>
            <returns></returns>
        </member>
        <member name="F:Bridge.Html5.NamedNodeMap.Length">
            <summary>
            The number of attributes in the node.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Node">
            <summary>
            A Node is an interface from which a number of DOM types inherit, and allows these various types to be treated (or tested) similarly.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Node.BaseURI">
            <summary>
            Returns a DOMString representing the base URL. The concept of base URL changes from one language to another; in HTML, it corresponds to the protocol, the domain name and the directory structure, that is all until the last '/'.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Node.ChildNodes">
            <summary>
            Returns a live NodeList containing all the children of this node. NodeList being live means that if the children of the Node change, the NodeList object is automatically updated.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Node.FirstChild">
            <summary>
            Returns a Node representing the first direct child node of the node, or null if the node has no child.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Node.LastChild">
            <summary>
            Returns a Node representing the last direct child node of the node, or null if the node has no child.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Node.NextSibling">
            <summary>
            Returns a Node representing the next node in the tree, or null if there isn't such node.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Node.NodeName">
            <summary>
            Returns a DOMString containing the name of the Node. The structure of the name will differ with the name type. E.g. An HTMLElement will contain the name of the corresponding tag, like 'audio' for an HTMLAudioElement, a Text node will have the '#text' string, or a Document node will have the '#document' string.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Node.NodeType">
            <summary>
            Returns an unsigned short representing the type of the node.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Node.NodeValue">
            <summary>
            Is a DOMString representing the value of an object. For most Node type, this returns null and any set operation is ignored. For nodes of type TEXT_NODE (Text objects), COMMENT_NODE (Comment objects), and PROCESSING_INSTRUCTION_NODE (ProcessingInstruction objects), the value corresponds to the text data contained in the object.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Node.OwnerDocument">
            <summary>
            Returns the Document that this node belongs to. If no document is associated with it, returns null.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Node.ParentNode">
            <summary>
            Returns a Node that is the parent of this node. If there is no such node, like if this node is the top of the tree or if doesn't participate in a tree, this property returns null.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Node.ParentElement">
            <summary>
            Returns an Element that is the parent of this node. If the node has no parent, or if that parent is not an Element, this property returns null.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Node.PreviousSibling">
            <summary>
            Returns a Node representing the previous node in the tree, or null if there isn't such node.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Node.TextContent">
            <summary>
            Is a DOMString representing the textual content of an element and all its descendants.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Node.AppendChild(Bridge.Html5.Node)">
            <summary>
            Adds a node to the end of the list of children of a specified parent node. If the node already exists it is removed from current parent node, then added to new parent node.
            </summary>
            <param name="child">child is the node to append underneath element. Also returned.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Node.CloneNode">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <returns>The new node that will be a clone of this node</returns>
        </member>
        <member name="M:Bridge.Html5.Node.CloneNode(System.Boolean)">
            <summary>
            Returns a duplicate of the node on which this method was called.
            </summary>
            <param name="deep">true if the children of the node should also be cloned, or false to clone only the specified node.</param>
            <returns>The new node that will be a clone of this node</returns>
        </member>
        <member name="M:Bridge.Html5.Node.CompareDocumentPosition(Bridge.Html5.Node)">
            <summary>
            Compares the position of the current node against another node in any other document.
            </summary>
            <param name="node">is the node that's being compared against.</param>
            <returns>The return value is computed as the relationship that otherNode has with node.</returns>
        </member>
        <member name="M:Bridge.Html5.Node.Contains(Bridge.Html5.Node)">
            <summary>
            Indicates whether a node is a descendant of a given node.
            </summary>
            <param name="node">is the node that's being compared against.</param>
            <returns>The return value is true if otherNode is a descendant of node, or node itself. Otherwise the return value is false.</returns>
        </member>
        <member name="M:Bridge.Html5.Node.HasChildNodes">
            <summary>
             returns a Boolean value indicating whether the current Node has child nodes or not.
            </summary>
            <returns>Boolean value indicating whether the current Node has child nodes or not</returns>
        </member>
        <member name="M:Bridge.Html5.Node.InsertBefore(Bridge.Html5.Node,Bridge.Html5.Node)">
            <summary>
            Inserts the specified node before a reference element as a child of the current node.
            </summary>
            <param name="newElement">The node to insert.</param>
            <param name="referenceElement">The node before which newElement is inserted.</param>
            <returns>The node being inserted, that is newElement</returns>
        </member>
        <member name="M:Bridge.Html5.Node.IsDefaultNamespace(System.String)">
            <summary>
            Accepts a namespace URI as an argument and returns true if the namespace is the default namespace on the given node or false if not.
            </summary>
            <param name="namespaceURI">string representing the namespace against which the element will be checked.</param>
            <returns>holds the return value true or false.</returns>
        </member>
        <member name="M:Bridge.Html5.Node.IsEqualNode(Bridge.Html5.Node)">
            <summary>
            Tests whether two nodes are equal.
            </summary>
            <param name="node">The node to compare equality with.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Node.Normalize">
            <summary>
            Clean up all the text nodes under this element (merge adjacent, remove empty).
            </summary>
        </member>
        <member name="M:Bridge.Html5.Node.RemoveChild(Bridge.Html5.Node)">
            <summary>
            Removes a child node from the DOM. Returns removed node.
            </summary>
            <param name="child">child node to be removed from the DOM.</param>
            <returns>Reference to the removed child node</returns>
        </member>
        <member name="M:Bridge.Html5.Node.ReplaceChild(Bridge.Html5.Node,Bridge.Html5.Node)">
            <summary>
            Replaces one child node of the specified element with another.
            </summary>
            <param name="newChild">new node to replace oldChild. If it already exists in the DOM, it is first removed.</param>
            <param name="oldChild">the existing child to be replaced.</param>
            <returns>the replaced node. This is the same node as oldChild.</returns>
        </member>
        <member name="T:Bridge.Html5.NodeList">
            <summary>
            NodeList objects are collections of nodes such as those returned by Node.childNodes and the querySelectorAll method.
            </summary>
        </member>
        <member name="P:Bridge.Html5.NodeList.Item(System.Int32)">
            <summary>
            Returns an item in the list by its index, or null if out-of-bounds.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.NodeList.GetItem(System.Int32)">
            <summary>
            Returns an item in the list by its index, or null if out-of-bounds. Equivalent to nodeList[idx].
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="F:Bridge.Html5.NodeList.Length">
            <summary>
            The number of nodes in the NodeList.
            </summary>
        </member>
        <member name="T:Bridge.Html5.NodeType">
            <summary>
            returns an unsigned short integer representing the type of the node.
            </summary>
        </member>
        <member name="T:Bridge.Html5.OptionsCollection">
            <summary>
            HTMLOptionsCollection is an interface representing a collection of HTML option elements (in document order) and offers methods and properties for traversing the list as well as optionally altering its items.
            </summary>
        </member>
        <member name="T:Bridge.Html5.ProcessingInstruction">
            <summary>
            A processing instruction provides an opportunity for application-specific instructions to be embedded within XML and which can be ignored by XML processors which do not support processing their instructions (outside of their having a place in the DOM).
            </summary>
        </member>
        <member name="F:Bridge.Html5.ProcessingInstruction.Target">
            <summary>
            after the &lt;? and before whitespace delimiting it from data
            </summary>
        </member>
        <member name="F:Bridge.Html5.ProcessingInstruction.Data">
            <summary>
            first non-whitespace character after target and before ?&gt;
            </summary>
        </member>
        <member name="T:Bridge.Html5.Text">
            <summary>
            The Text interface represents the textual content of Element or Attr.  If an element has no markup within its content, it has a single child implementing Text that contains the element's text.  However, if the element contains markup, it is parsed into information items and Text nodes that form its children.
            New documents have a single Text node for each block of text. Over time, more Text nodes may be created as the document's content changes.  The Node.normalize() method merges adjacent Text objects back into a single node for each block of text.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Text.WholeText">
            <summary>
            Returns a DOMString containing the text of all Text nodes logically adjacent to this Node, concatenated in document order.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Text.SplitText(System.Int32)">
            <summary>
            Breaks the node into two nodes at a specified offset.
            </summary>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.TextDirection">
            <summary>
            The element attribute gets or sets the text writing directionality of the content of the current element.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDirection.Auto">
            <summary>
            direction of the element must be determined based on the contents of the element
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDirection.Ltr">
            <summary>
            left-to-right
            </summary>
        </member>
        <member name="F:Bridge.Html5.TextDirection.Rtl">
            <summary>
            right-to-left
            </summary>
        </member>
        <member name="M:Bridge.Html5.Performance.Now">
            <summary>
            Returns a DOMHighResTimeStamp representing the amount of miliseconds elapsed since the start of the navigation, as give by PerformanceTiming.navigationStart to the call of the method.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Bridge.Html5.Performance.Timing">
            <summary>
            Is a PerformanceTiming object containing latency-related performance information.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Performance.Navigation">
            <summary>
            Is a PerformanceNavigation object representing the type of navigation that occurs in the given browsing context, like the amount of redirections needed to fetch the resource.
            </summary>
        </member>
        <member name="T:Bridge.Html5.PerformanceTiming">
            <summary>
            The PerformanceTiming interface represents timing-related performance information for the given page.
            An object of this type can be obtained by calling the Performance.timing read-only attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.NavigationStart">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, right after the prompt for unload terminates on the previous document in the same browsing context. If there is no previous document, this value will be the same as PerformanceTiming.fetchStart.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.UnloadEventStart">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, the unload event has been thrown. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is 0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.UnloadEventEnd">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, the unload event handler finishes. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is 0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.RedirectStart">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, the first HTTP redirect starts. If there is no redirect, or if one of the redirect is not of the same origin, the value returned is 0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.RedirectEnd">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, the last HTTP redirect is completed, that is when the last byte of the HTTP response has been received. If there is no redirect, or if one of the redirect is not of the same origin, the value returned is 0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.FetchStart">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, the browser is ready to fetch the document using an HTTP request. This moment is before the check to any application cache.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.DomainLookupStart">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, where the domain lookup starts. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as PerformanceTiming.fetchStart.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.DomainLookupEnd">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, where the domain lookup is finished. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as PerformanceTiming.fetchStart.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.ConnectStart">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, where the request to open a connection is sent to the network. If the transport layer reports an error and the connection establishment is started again, the last connection establisment start time is given. If a persistent connection is used, the value will be the same as PerformanceTiming.fetchStart.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.ConnectEnd">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, where the connection is opened network. If the transport layer reports an error and the connection establishment is started again, the last connection establisment end time is given. If a persistent connection is used, the value will be the same as PerformanceTiming.fetchStart. A connection is considered as opened when all secure connection handshake, or SOCKS authentication, is terminated.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.SecureConnectionStart">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, where the secure connection handshake starts. If no such connection is requested, it returns 0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.RequestStart">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, when the browser sent the request to obtain the actual document, from the server or from a cache. If the transport layer fails after the start of the request and the connection is reopened, this property will be set to the time corresponding to the new request.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.ResponseStart">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, when the browser received the first byte of the response, from the server from a cache, of from a local resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.ResponseEnd">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, when the browser received the last byte of the response, or when the connection is closed if this happened first, from the server from a cache, of from a local resource.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.DomLoading">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, when the parser started its work, that is when its Document.readyState changes to 'loading' and the corresponding readystatechange event is thrown.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.DomInteractive">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, when the parser finished its work on the main document, that is when its Document.readyState changes to 'interactive' and the corresponding readystatechange event is thrown.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.DomContentLoadedEventStart">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, right before the parser sent the DOMContentLoaded event, that is right after all the scripts that need to be executed right after parsing has been executed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.DomContentLoadedEventEnd">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, right after all the scripts that need to be executed as soon as possible, in order or not, has been executed.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.DomComplete">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, when the parser finished its work on the main document, that is when its Document.readyState changes to 'complete' and the corresponding readystatechange event is thrown.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.LoadEventStart">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, when the load event was sent for the current document. If this event has not yet been sent, it returns 0.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceTiming.LoadEventEnd">
            <summary>
            Is an int representing the moment, in miliseconds since the UNIX epoch, when the load event handler terminated, that is when the load event is completed. If this event has not yet been sent, or is not yet completed, it returns 0.
            </summary>
        </member>
        <member name="T:Bridge.Html5.PerformanceNavigation">
            <summary>
            The PerformanceNavigation interface represents information about how the navigation to the current document was done.
            An object of this type can be obtained by calling the Performance.navigation read-only attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceNavigation.Type">
            <summary>
            Is an  short containing a constant describing how the navigation to this page was done.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceNavigation.RedirectCount">
            <summary>
            Is an  short representing the number of REDIRECTs done before reaching the page.
            </summary>
        </member>
        <member name="T:Bridge.Html5.PerformanceNavigationType">
            <summary>
            A constant describing how the navigation to this page was done.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceNavigationType.Navigate">
            <summary>
            The page was accessed by following a link, a bookmark, a form submission, a script, or typing the URL in the address bar.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceNavigationType.Reload">
            <summary>
            The page was accessed by clicking the Reload button or via the Location.reload() method.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceNavigationType.BackForward">
            <summary>
            The page was accessed by navigating into the history.
            </summary>
        </member>
        <member name="F:Bridge.Html5.PerformanceNavigationType.Reserved">
            <summary>
            Any other way.
            </summary>
        </member>
        <member name="T:Bridge.Html5.ReadyState">
            <summary>
            loading status of the document
            </summary>
        </member>
        <member name="F:Bridge.Html5.ReadyState.Loading">
            <summary>
            "loading" while the document is loading
            </summary>
        </member>
        <member name="F:Bridge.Html5.ReadyState.Interactive">
            <summary>
            "interactive" once the document is finished parsing but still loading sub-resources
            </summary>
        </member>
        <member name="F:Bridge.Html5.ReadyState.Complete">
            <summary>
            "complete" once the document has loaded
            </summary>
        </member>
        <member name="T:Bridge.Html5.Screen">
            <summary>
            The screen object is a special object for inspecting properties of the screen on which the current window is being rendered.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Screen.AvailTop">
            <summary>
            Specifies the y-coordinate of the first pixel that is not allocated to permanent or semipermanent user interface features.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Screen.AvailLeft">
            <summary>
            Returns the first available pixel available from the left side of the screen.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Screen.AvailHeight">
            <summary>
            Specifies the height of the screen, in pixels, minus permanent or semipermanent user interface features displayed by the operating system, such as the Taskbar on Windows.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Screen.AvailWidth">
            <summary>
            Returns the amount of horizontal space in pixels available to the window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Screen.ColotDepth">
            <summary>
            Returns the color depth of the screen.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Screen.Height">
            <summary>
            Returns the height of the screen in pixels.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Screen.Left">
            <summary>
            Returns the distance in pixels from the left side of the main screen to the left side of the current screen.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Screen.PixelDepth">
            <summary>
            Gets the bit depth of the screen.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Screen.Top">
            <summary>
            Returns the distance in pixels from the top side of the current screen.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Screen.Width">
            <summary>
            Returns the width of the screen.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Range">
            <summary>
            The Range interface represents a fragment of a document that can contain nodes and parts of text nodes in a given document.
            A range can be created using the createRange method of the Document object. Range objects can also be retrieved by using the getRangeAt method of the Selection object. There also is the Range() constructor available.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Range.Collapsed">
            <summary>
            Returns a Boolean indicating whether the range's start and end points are at the same position.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Range.CommonAncestorContainer">
            <summary>
            Returns the deepest Node that contains the startContainer and endContainer nodes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Range.EndContainer">
            <summary>
            Returns the Node within which the Range ends.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Range.EndOffset">
            <summary>
            Returns a number representing where in the endContainer the Range ends.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Range.StartContainer">
            <summary>
            Returns the Node within which the Range starts.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Range.StartOffset">
            <summary>
            Returns a number representing where in the startContainer the Range starts.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Range.SetStart(Bridge.Html5.Node,System.Int32)">
            <summary>
            Sets the start position of a Range.
            </summary>
            <param name="startNode">The Node where the Range should start.</param>
            <param name="startOffset">An integer greater than or equal to zero representing the offset for the start of the Range from the start of startNode.</param>
        </member>
        <member name="M:Bridge.Html5.Range.SetEnd(Bridge.Html5.Node,System.Int32)">
            <summary>
            Sets the end position of a Range.
            </summary>
            <param name="endNode">The Node where the Range should end.</param>
            <param name="endOffset">An integer greater than or equal to zero representing the offset for the end of the Range from the start of endNode.</param>
        </member>
        <member name="M:Bridge.Html5.Range.SetStartBefore(Bridge.Html5.Node)">
            <summary>
            Sets the start position of a Range relative to another Node.
            </summary>
            <param name="referenceNode">The Node before which the Range should start.</param>
        </member>
        <member name="M:Bridge.Html5.Range.SetStartAfter(Bridge.Html5.Node)">
            <summary>
            Sets the start position of a Range relative to another Node.
            </summary>
            <param name="referenceNode">The Node to start the Range after.</param>
        </member>
        <member name="M:Bridge.Html5.Range.SetEndBefore(Bridge.Html5.Node)">
            <summary>
            Sets the end position of a Range relative to another Node.
            </summary>
            <param name="referenceNode">The Node to end the Range before.</param>
        </member>
        <member name="M:Bridge.Html5.Range.SetEndAfter(Bridge.Html5.Node)">
            <summary>
            Sets the end position of a Range relative to another Node.
            </summary>
            <param name="referenceNode">The Node to end the Range after.</param>
        </member>
        <member name="M:Bridge.Html5.Range.SelectNode(Bridge.Html5.Node)">
            <summary>
            Sets the Range to contain the Node and its contents.
            </summary>
            <param name="referenceNode">The Node to select within a Range.</param>
        </member>
        <member name="M:Bridge.Html5.Range.SelectNodeContents(Bridge.Html5.Node)">
            <summary>
            Sets the Range to contain the contents of a Node.
            </summary>
            <param name="referenceNode">The Node whose contents will be selected within a Range.</param>
        </member>
        <member name="M:Bridge.Html5.Range.Collapse">
            <summary>
            Collapses the Range to one of its boundary points.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Range.Collapse(System.Boolean)">
            <summary>
            Collapses the Range to one of its boundary points.
            </summary>
            <param name="toStart">A boolean value: true collapses the Range to its start, false to its end. If omitted, it defaults to false .</param>
        </member>
        <member name="M:Bridge.Html5.Range.CloneContents">
            <summary>
            Returns a DocumentFragment copying the nodes of a Range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Range.DeleteContents">
            <summary>
            Removes the contents of a Range from the Document.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Range.ExtractContents">
            <summary>
            Moves contents of a Range from the document tree into a DocumentFragment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Range.InsertNode(Bridge.Html5.Node)">
            <summary>
            Insert a Node at the start of a Range.
            </summary>
            <param name="newNode">The Node to insert at the start of the range.</param>
        </member>
        <member name="M:Bridge.Html5.Range.SurroundContents(Bridge.Html5.Node)">
            <summary>
            Moves content of a Range into a new Node.
            </summary>
            <param name="newParent">A Node to split based on the range.</param>
        </member>
        <member name="M:Bridge.Html5.Range.CompareBoundaryPoints(Bridge.Html5.RangeComparison,Bridge.Html5.Range)">
            <summary>
            Compares the boundary points of the Range with another one.
            </summary>
            <param name="how">A constant describing the comparison method</param>
            <param name="sourceRange">A Range to compare boundary points with the range.</param>
            <returns>A number, -1, 0, or 1, indicating whether the corresponding boundary-point of the Range is respectively before, equal to, or after the corresponding boundary-point of sourceRange.</returns>
        </member>
        <member name="M:Bridge.Html5.Range.CloneRange">
            <summary>
            Returns a Range object with boundary points identical to the cloned Range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Range.Detach">
            <summary>
            Releases the Range from use to improve performance.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Range.ComparePoint(Bridge.Html5.Node,System.Int32)">
            <summary>
            Returns -1, 0, or 1 indicating whether the point occurs before, inside, or after the Range.
            </summary>
            <param name="referenceNode">The Node to compare with the Range.</param>
            <param name="offset">An integer greater than or equal to zero representing the offset inside the referenceNode.</param>
            <returns>returns -1, 0, or 1 depending on whether the referenceNode is before, the same as, or after the Range.</returns>
        </member>
        <member name="M:Bridge.Html5.Range.CreateContextualFragment(System.String)">
            <summary>
            Returns a DocumentFragment created from a given string of code.
            </summary>
            <param name="tagString">Text that contains text and tags to be converted to a document fragment.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Range.GetBoundingClientRect">
            <summary>
            Returns a ClientRect object which bounds the entire contents of the Range; this would be the union of all the rectangles returned by range.getClientRects().
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Range.GetClientRects">
            <summary>
            Returns a list of ClientRect objects that aggregates the results of Element.getClientRects() for all the elements in the Range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Range.IntersectsNode(Bridge.Html5.Node)">
            <summary>
            Returns a boolean indicating whether the given node intersects the Range.
            </summary>
            <param name="referenceNode">The Node to compare with the Range.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Range.IsPointInRange(Bridge.Html5.Node,System.Int32)">
            <summary>
            Returns a boolean indicating whether the given point is in the Range.
            </summary>
            <param name="referenceNode">The Node to compare with the Range.</param>
            <param name="offset">The offset into Node of the point to compare with the Range.</param>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.RangeComparison">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.RangeComparison.StartToStart">
            <summary>
            compares the start boundary-point of sourceRange to the start boundary-point of Range.
            </summary>
        </member>
        <member name="F:Bridge.Html5.RangeComparison.StartToEnd">
            <summary>
            compares the start boundary-point of sourceRange to the end boundary-point of Range.
            </summary>
        </member>
        <member name="F:Bridge.Html5.RangeComparison.EndToEnd">
            <summary>
            compares the end boundary-point of sourceRange to the end boundary-point of Range.
            </summary>
        </member>
        <member name="F:Bridge.Html5.RangeComparison.EndToStart">
            <summary>
             compares the end boundary-point of sourceRange to the start boundary-point of Range.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Selection">
            <summary>
            Selection is the class of the object returned by window.getSelection() and other methods. It represents the text selection in the greater page, possibly spanning multiple elements, when the user drags over static text and other parts of the page. For information about text selection in an individual text editing element, see Input, TextArea and document.activeElement which typically return the parent object returned from window.getSelection().
            </summary>
        </member>
        <member name="F:Bridge.Html5.Selection.AnchorNode">
            <summary>
            Returns the Node in which the selection begins.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Selection.AnchorOffset">
            <summary>
            Returns the number of characters that the selection's anchor is offset within the anchorNode.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Selection.FocusNode">
            <summary>
            Returns the Node in which the selection ends.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Selection.FocusOffset">
            <summary>
            Returns a number representing the offset of the selection's anchor within the focusNode. If focusNode is a text node, this is the number of characters within focusNode preceding the focus. If focusNode is an element, this is the number of child nodes of the focusNode preceding the focus.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Selection.IsCollapsed">
            <summary>
            Returns a Boolean indicating whether the selection's start and end points are at the same position.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Selection.RangeCount">
            <summary>
            Returns the number of ranges in the selection.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Selection.GetRangeAt(System.Int32)">
            <summary>
            Returns a range object representing one of the ranges currently selected.
            </summary>
            <param name="index">The zero-based index of the range to return. A negative number or a number greater than or equal to rangeCount will result in an error.</param>
            <returns>The range object that will be returned.</returns>
        </member>
        <member name="M:Bridge.Html5.Selection.Collapse(Bridge.Html5.Node,System.Byte)">
            <summary>
            Collapses the current selection to a single point. The document is not modified. If the content is focused and editable, the caret will blink there.
            </summary>
            <param name="parentNode">The caret location will be within this node.</param>
            <param name="offset">0 - Collapses the selection from the anchor to the beginning of parentNode's text. 1 - Collapses the selection from the anchor to the end of parentNode's text.</param>
        </member>
        <member name="M:Bridge.Html5.Selection.Extend(Bridge.Html5.Node,System.Byte)">
            <summary>
            Moves the focus of the selection to a specified point. The anchor of the selection does not move. The selection will be from the anchor to the new focus regardless of direction.
            </summary>
            <param name="parentNode">The node within which the focus will be moved.</param>
            <param name="offset">The offset position within parentNode where the focus will be moved to.</param>
        </member>
        <member name="M:Bridge.Html5.Selection.Modify(Bridge.Html5.SelectionAlter,Bridge.Html5.SelectionDirection,Bridge.Html5.SelectionGranularity)">
            <summary>
            Applies a change to the current selection or cursor position, using simple textual commands.
            </summary>
            <param name="alter">The type of change to apply. Specify "move" to move the current cursor position or "extend" to extend the current selection.</param>
            <param name="direction">The direction in which to adjust the current selection. You can specify "forward" or "backward" to adjust in the appropriate direction based on the language at the selection point. If you want to adjust in a specific direction, you can specify "left" or "right".</param>
            <param name="granularity">The distance to adjust the current selection or cursor position. </param>
        </member>
        <member name="M:Bridge.Html5.Selection.CollapseToStart">
            <summary>
            Collapses the selection to the start of the first range in the selection.  If the content of the selection is focused and editable, the caret will blink there.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Selection.CollapseToEnd">
            <summary>
            Collapses the selection to the end of the last range in the selection.  If the content the selection is in is focused and editable, the caret will blink there.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Selection.SelectAllChildren(Bridge.Html5.Node)">
            <summary>
            Adds all the children of the specified node to the selection. Previous selection is lost.
            </summary>
            <param name="parentNode">All children of parentNode will be selected. parentNode itself is not part of the selection.</param>
        </member>
        <member name="M:Bridge.Html5.Selection.AddRange(Bridge.Html5.Range)">
            <summary>
            Adds a Range to a Selection.
            </summary>
            <param name="range">A Range object that will be added to the Selection.</param>
        </member>
        <member name="M:Bridge.Html5.Selection.RemoveRange(Bridge.Html5.Range)">
            <summary>
            Removes a range from the selection.
            </summary>
            <param name="range">A range object that will be removed to the selection.</param>
        </member>
        <member name="M:Bridge.Html5.Selection.RemoveAllRanges">
            <summary>
            Removes all ranges from the selection, leaving the anchorNode and focusNode properties equal to null and leaving nothing selected.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Selection.DeleteFromDocument">
            <summary>
            Deletes the actual text being represented by a selection object from the document's DOM.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Selection.SelectionLanguageChange(System.Boolean)">
            <summary>
            Modifies the cursor Bidi level after a change in keyboard direction.
            </summary>
            <param name="langRTL">true if the new language is right-to-left or false if the new language is left-to-right.</param>
        </member>
        <member name="M:Bridge.Html5.Selection.ContainsNode(Bridge.Html5.Node,System.Boolean)">
            <summary>
            Indicates if the node is part of the selection.
            </summary>
            <param name="node">The node that is being looked for whether it is part of the selection</param>
            <param name="partlyContained">When true , containsNode returns true when a part of the node is part of the selection. When false , containsNode only returns true when the entire node is part of the selection.</param>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.SelectionAlter">
            <summary>
            The type of selection change.
            </summary>
        </member>
        <member name="F:Bridge.Html5.SelectionAlter.Move">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.SelectionAlter.Extend">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.SelectionDirection">
            <summary>
            The direction in which to adjust the current selection.
            </summary>
        </member>
        <member name="F:Bridge.Html5.SelectionDirection.Forward">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.SelectionDirection.Backward">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.SelectionDirection.Left">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.SelectionDirection.Right">
             <summary>
            
             </summary>
        </member>
        <member name="T:Bridge.Html5.SelectionGranularity">
            <summary>
            The distance to adjust the current selection or cursor position.
            </summary>
        </member>
        <member name="F:Bridge.Html5.SelectionGranularity.Character">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.SelectionGranularity.Word">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.SelectionGranularity.Sentence">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.SelectionGranularity.Line">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.SelectionGranularity.Paragraph">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.SelectionGranularity.LineBoundary">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.SelectionGranularity.SentenceBoundary">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.SelectionGranularity.ParagraphBoundary">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.SelectionGranularity.DocumentBoundary">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bridge.Html5.Storage.Length">
             <summary>
            
             </summary>
        </member>
        <member name="P:Bridge.Html5.Storage.Item(System.String)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Storage.Clear">
             <summary>
            
             </summary>
        </member>
        <member name="M:Bridge.Html5.Storage.GetItem(System.String)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Storage.Key(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Storage.RemoveItem(System.String)">
             <summary>
            
             </summary>
             <param name="key"></param>
        </member>
        <member name="M:Bridge.Html5.Storage.SetItem(System.String,System.Object)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <param name="value"></param>
        </member>
        <member name="T:Bridge.Html5.TreeWalker">
            <summary>
            The TreeWalker object represents the nodes of a document subtree and a position within them.
            A TreeWalker can be created using the Document.createTreeWalker() method.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TreeWalker.Root">
            <summary>
            Returns a Node representing the root node as specified when the TreeWalker was created.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TreeWalker.WhatToShow">
            <summary>
            Returns an unsigned long being a bitmask made of constants describing the types of Node that must to be presented. Non-matching nodes are skipped, but their children may be included, if relevant.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TreeWalker.Filter">
            <summary>
            Returns a NodeFilter used to select the relevant nodes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TreeWalker.CurrentNode">
            <summary>
            the Node on which the TreeWalker is currently pointing at.
            </summary>
        </member>
        <member name="M:Bridge.Html5.TreeWalker.ParentNode">
            <summary>
            Moves the current Node to the first visible ancestor node in the document order, and returns the found node. It also moves the current node to this one. If no such node exists, or if it is before that the root node defined at the object construction, returns null and the current node is not changed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.TreeWalker.FirstChild">
            <summary>
            Moves the current Node to the first visible child of the current node, and returns the found child. It also moves the current node to this child. If no such child exists, returns null and the current node is not changed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.TreeWalker.LastChild">
            <summary>
            Moves the current Node to the last visible child of the current node, and returns the found child. It also moves the current node to this child. If no such child exists, returns null and the current node is not changed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.TreeWalker.PreviousSibling">
            <summary>
            Moves the current Node to its previous sibling, if any, and returns the found sibling. I there is no such node, return null and the current node is not changed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.TreeWalker.NextSibling">
            <summary>
            Moves the current Node to its next sibling, if any, and returns the found sibling. I there is no such node, return null and the current node is not changed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.TreeWalker.PreviousNode">
            <summary>
            Moves the current Node to the previous visible node in the document order, and returns the found node. It also moves the current node to this one. If no such node exists,or if it is before that the root node defined at the object construction, returns null and the current node is not changed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.TreeWalker.NextNode">
            <summary>
            Moves the current Node to the next visible node in the document order, and returns the found node. It also moves the current node to this one. If no such node exists, returns null and the current node is not changed.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.ArrayBuffer">
            <summary>
            The ArrayBuffer is a data type that is used to represent a generic, fixed-length binary data buffer. You can't directly manipulate the contents of an ArrayBuffer; instead, you create an ArrayBufferView object which represents the buffer in a specific format, and use that to read and write the contents of the buffer.
            </summary>
        </member>
        <member name="M:Bridge.Html5.ArrayBuffer.#ctor">
            <summary>
             The empty constuctor
            </summary>
        </member>
        <member name="M:Bridge.Html5.ArrayBuffer.#ctor(System.Int32)">
            <summary>
            The constructor accepts as input a byte length for the new buffer, and returns the newly-created ArrayBuffer object.
            </summary>
            <param name="length">The size, in bytes, of the array buffer to create.</param>
        </member>
        <member name="F:Bridge.Html5.ArrayBuffer.ByteLength">
            <summary>
            The size, in bytes, of the array. This is established when the array is constructed and cannot be changed. Read only.
            </summary>
        </member>
        <member name="M:Bridge.Html5.ArrayBuffer.Slice(System.Int32)">
            <summary>
            Returns a new ArrayBuffer whose contents are a copy of this ArrayBuffer's bytes from begin, inclusive, up to end, exclusive. If either begin or end is negative, it refers to an index from the end of the array, as opposed to from the beginning.
            </summary>
            <param name="begin">Byte index to start slicing.</param>
            <returns>A new ArrayBuffer object.</returns>
        </member>
        <member name="M:Bridge.Html5.ArrayBuffer.Slice(System.Int32,System.Int32)">
            <summary>
            Returns a new ArrayBuffer whose contents are a copy of this ArrayBuffer's bytes from begin, inclusive, up to end, exclusive. If either begin or end is negative, it refers to an index from the end of the array, as opposed to from the beginning.
            </summary>
            <param name="begin">Byte index to start slicing.</param>
            <param name="end">Byte index to end slicing. If end is unspecified, the new ArrayBuffer contains all bytes from begin to the end of this ArrayBuffer.</param>
            <returns>A new ArrayBuffer object.</returns>
        </member>
        <member name="T:Bridge.Html5.ArrayBufferView">
             <summary>
             ArrayBufferView is a helper type representing any of the following JavaScript TypedArray types:
            
                 Int8Array,
                 Uint8Array,
                 Uint8ClampedArray,
                 Int16Array,
                 Uint16Array,
                 Int32Array,
                 Uint32Array,
                 Float32Array,
                 Float64Array or
                 DataView.
            
             This is a helper type to simplify the specification, it isn't an interface and there are no objects implementing it.
             </summary>
        </member>
        <member name="T:Bridge.Html5.DataView">
            <summary>
            An ArrayBuffer is a useful object for representing an arbitrary chunk of data. In many cases, such data will be read from disk or from the network, and will not follow the alignment restrictions that are imposed on the Typed Array Views described earlier. In addition, the data will often be heterogeneous in nature and have a defined byte order.
            The DataView view provides a low-level interface for reading such data from and writing it to an ArrayBuffer.
            </summary>
        </member>
        <member name="M:Bridge.Html5.DataView.#ctor(Bridge.Html5.ArrayBuffer)">
            <summary>
            Returns a new DataView object using the passed ArrayBuffer for its storage.
            </summary>
            <param name="buffer">An existing ArrayBuffer to use as the storage for the new DataView object.</param>
        </member>
        <member name="M:Bridge.Html5.DataView.#ctor(Bridge.Html5.ArrayBuffer,System.Int32)">
            <summary>
            Returns a new DataView object using the passed ArrayBuffer for its storage.
            </summary>
            <param name="buffer">An existing ArrayBuffer to use as the storage for the new DataView object.</param>
            <param name="byteOffset">The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the view of the buffer will start with the first byte.</param>
        </member>
        <member name="M:Bridge.Html5.DataView.#ctor(Bridge.Html5.ArrayBuffer,System.Int32,System.Int32)">
            <summary>
            Returns a new DataView object using the passed ArrayBuffer for its storage.
            </summary>
            <param name="buffer">An existing ArrayBuffer to use as the storage for the new DataView object.</param>
            <param name="byteOffset">The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the view of the buffer will start with the first byte.</param>
            <param name="byteLength">The number of elements in the byte array. If unspecified, length of the view will match the buffer's length.</param>
        </member>
        <member name="F:Bridge.Html5.DataView.Buffer">
            <summary>
            The buffer this view references. Read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DataView.ByteLength">
            <summary>
            The length, in bytes, of the view. Read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.DataView.ByteOffset">
            <summary>
            The offset, in bytes, to the first byte of the view within the ArrayBuffer. Read only.
            </summary>
        </member>
        <member name="M:Bridge.Html5.DataView.GetInt8(System.Int32)">
            <summary>
            Gets a signed 8-bit integer at the specified byte offset from the start of the view.
            </summary>
            <param name="byteOffset">The offset, in byte, from the start of the view where to read the data.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DataView.GetUint8(System.Int32)">
            <summary>
            Gets an unsigned 8-bit integer at the specified byte offset from the start of the view.
            </summary>
            <param name="byteOffset">The offset, in byte, from the start of the view where to read the data.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DataView.GetInt16(System.Int32)">
            <summary>
            Gets a signed 16-bit integer at the specified byte offset from the start of the view.
            </summary>
            <param name="byteOffset">The offset, in byte, from the start of the view where to read the data.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DataView.GetInt16(System.Int32,System.Boolean)">
            <summary>
            Gets a signed 16-bit integer at the specified byte offset from the start of the view.
            </summary>
            <param name="byteOffset">The offset, in byte, from the start of the view where to read the data.</param>
            <param name="littleEndian">Indicates whether the 16-bit int is stored in little- or big-endian format. If false or undefined, a big-endian value is read.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DataView.GetUint16(System.Int32)">
            <summary>
            Gets an unsigned 16-bit integer at the specified byte offset from the start of the view.
            </summary>
            <param name="byteOffset">The offset, in byte, from the start of the view where to read the data.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DataView.GetUint16(System.Int32,System.Boolean)">
            <summary>
            Gets an unsigned 16-bit integer at the specified byte offset from the start of the view.
            </summary>
            <param name="byteOffset">The offset, in byte, from the start of the view where to read the data.</param>
            <param name="littleEndian">Indicates whether the 16-bit int is stored in little- or big-endian format. If false or undefined, a big-endian value is read.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DataView.GetInt32(System.Int32)">
            <summary>
            Gets an signed 32-bit integer at the specified byte offset from the start of the view.
            </summary>
            <param name="byteOffset">The offset, in byte, from the start of the view where to read the data.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DataView.GetInt32(System.Int32,System.Boolean)">
            <summary>
            Gets an signed 32-bit integer at the specified byte offset from the start of the view.
            </summary>
            <param name="byteOffset">The offset, in byte, from the start of the view where to read the data.</param>
            <param name="littleEndian">Indicates whether the 32-bit int is stored in little- or big-endian format. If false or undefined, a big-endian value is read.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DataView.GetUint32(System.Int32)">
            <summary>
            Gets an unsigned 32-bit integer at the specified byte offset from the start of the view.
            </summary>
            <param name="byteOffset">The offset, in byte, from the start of the view where to read the data.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.DataView.GetUint32(System.Int32,System.Boolean)">
            <summary>
            Gets an unsigned 32-bit integer at the specified byte offset from the start of the view.
            </summary>
            <param name="byteOffset">The offset, in byte, from the start of the view where to read the data.</param>
            <param name="littleEndian">Indicates whether the 32-bit int is stored in little- or big-endian format. If false or undefined, a big-endian value is read.</param>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.TypedArray.Prototype`2">
            <summary>
            Represents the prototype for TypedArray constructors.
            TypedArray instances inherit from TypedArray.prototype. You can use the constructor's prototype
            object to add properties or methods to all TypedArray instances, where TypedArray is one of the
            typed array types.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TypedArray.Prototype`2.Buffer">
            <summary>
            Returns the ArrayBuffer referenced by the typed array. Fixed at construction time and thus
            read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TypedArray.Prototype`2.ByteLength">
            <summary>
            Returns the length (in bytes) of the typed array from the start of its ArrayBuffer.
            Fixed at construction time and thus read only
            </summary>
        </member>
        <member name="F:Bridge.Html5.TypedArray.Prototype`2.ByteOffset">
            <summary>
            Returns the offset (in bytes) of the typed array from the start of its ArrayBuffer.
            Fixed at construction time and thus read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.TypedArray.Prototype`2.Length">
            <summary>
            Returns the number of elements hold in the typed array. Fixed at construction time and thus
            read only.
            </summary>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.CopyWithin(Bridge.Union{System.Int32,System.UInt32},Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Copies a sequence of array elements within the array to the position starting at target.
            The copy is taken from the index positions of the second and third arguments start and end.
            The end argument is optional and defaults to the length of the array.
            </summary>
            <param name="target">Target start index position where to copy the elements to.</param>
            <param name="start">Source start index position where to start copying elements from.</param>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.CopyWithin(Bridge.Union{System.Int32,System.UInt32},Bridge.Union{System.Int32,System.UInt32},Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Copies a sequence of array elements within the array to the position starting at target.
            The copy is taken from the index positions of the second and third arguments start and end.
            The end argument is optional and defaults to the length of the array.
            </summary>
            <param name="target">Target start index position where to copy the elements to.</param>
            <param name="start">Source start index position where to start copying elements from.</param>
            <param name="end">Optional. Source end index position where to end copying elements from.</param>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Every(System.Func{`1,Bridge.Union{System.Int32,System.UInt32},`0,System.Boolean},`0)">
            <summary>
            Tests whether all elements in the array pass the test provided by a function.
            </summary>
            <param name="callback">
            Function to test for each element, taking three arguments:
            currentValue: The current element being processed in the typed array.
            index: The index of the current element being processed in the typed array.
            array: The typed array every was called upon.
            </param>
            <param name="thisArg">Optional. Value to use as this when executing callback.</param>
            <returns>True if callback returns true for all elements on array, false otherwise.</returns>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Fill(`1)">
            <summary>
            Fills all the elements of an array from a start index to an end index with a static value.
            </summary>
            <param name="value">Value to fill the typed array with.</param>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Fill(`1,Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Fills all the elements of an array from a start index to an end index with a static value.
            </summary>
            <param name="value">Value to fill the typed array with.</param>
            <param name="start">Optional. Start index. Defaults to 0.</param>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Fill(`1,Bridge.Union{System.Int32,System.UInt32},Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Fills all the elements of an array from a start index to an end index with a static value.
            </summary>
            <param name="value">Value to fill the typed array with.</param>
            <param name="start">Optional. Start index. Defaults to 0.</param>
            <param name="end">Optional. End index. Defaults to 0.</param>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Filter(System.Func{`1,Bridge.Union{System.Int32,System.UInt32},`0,System.Boolean},`0)">
            <summary>
            Creates a new array with all of the elements of this array for which the provided filtering
            function returns true.
            </summary>
            <param name="callback">
            Function to test each element of the typed array. Invoked with arguments
            (element, index, typedarray). Return true to keep the element, false otherwise.
            </param>
            <param name="thisArg">Value to use as this when executing callback.</param>
            <returns></returns>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.ForEach(System.Func{`1,Bridge.Union{System.Int32,System.UInt32},`0,`1},`0)">
            <summary>
            Calls a function for each element in the array.
            </summary>
            <param name="callback">
            Function that produces an element of the new typed array, taking three arguments:
            currentValue: The current element being processed in the typed array.
            index: The index of the current element being processed in the typed array.
            array: The array forEach() was called upon.
            </param>
            <param name="thisArg">Optional. Value to use as 'this' when executing callback.</param>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.IndexOf(`1,Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Returns the first (least) index of an element within the array equal to the specified
            value, or -1 if none is found.
            </summary>
            <param name="searchElement">Element to locate in the typed array.</param>
            <param name="fromIndex">
            The index to start the search at. If the index is greater than or equal to the typed array's
            length, -1 is returned, which means the typed array will not be searched. If the provided
            index value is a negative number, it is taken as the offset from the end of the typed array.
            Note: if the provided index is negative, the typed array is still searched from front to back.
            If the calculated index is less than 0, then the whole typed array will be searched.
            Default: 0 (entire typed array is searched).
            </param>
            <returns>
            The first index at which a given element can be found in the typed array, or -1 if it is
            not present.
            </returns>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Join(System.Char)">
            <summary>
            Joins all elements of an array into a string.
            </summary>
            <param name="separator">
            Optional. Specifies a string to separate each element. The separator is converted to a string
            if necessary. If omitted, the typed array elements are separated with a comma (",").
            </param>
            <returns>A string containing the elements, separated by "," or the specified separator.</returns>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Join(System.String)">
            <summary>
            Joins all elements of an array into a string.
            </summary>
            <param name="separator">
            Optional. Specifies a string to separate each element. The separator is converted to a string
            if necessary. If omitted, the typed array elements are separated with a comma (",").
            </param>
            <returns>A string containing the elements, separated by "," or the specified separator.</returns>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.LastIndexOf(`1)">
            <summary>
            Returns the last (greatest) index of an element within the array equal to the specified
            value, or -1 if none is found.
            </summary>
            <param name="searchElement">Element to locate in the typed array.</param>
            <returns>
            The last index at which a given element can be found in the typed array, or -1 if it is
            not present.
            </returns>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.LastIndexOf(`1,Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Returns the last (greatest) index of an element within the array equal to the specified
            value, or -1 if none is found.
            </summary>
            <param name="searchElement">Element to locate in the typed array.</param>
            <param name="fromIndex">
            The index at which to start searching backwards. Defaults to the typed array's length, i.e.
            the whole typed array will be searched. If the index is greater than or equal to the length
            of the typed array, the whole typed array will be searched. If negative, it is taken as the
            offset from the end of the typed array. Note that even when the index is negative, the typed
            array is still searched from back to front. If the calculated index is less than 0, -1 is
            returned, i.e. the typed array will not be searched.
            </param>
            <returns>
            The last index at which a given element can be found in the typed array, or -1 if it is
            not present.
            </returns>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Map(System.Func{`1,Bridge.Union{System.Int32,System.UInt32},`0,`1},`0)">
            <summary>
            Creates a new array with the results of calling a provided function on every element in this array.
            </summary>
            <param name="callback">
            Function that produces an element of the new typed array, taking three arguments:
            currentValue: The current element being processed in the typed array.
            index: The index of the current element being processed in the typed array.
            array: The array forEach() was called upon.
            </param>
            <param name="thisArg">Optional. Value to use as 'this' when executing callback.</param>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Reduce(System.Func{`1,`1,Bridge.Union{System.Int32,System.UInt32},`0,`1},`1)">
            <summary>
            Apply a function against an accumulator and each value of the array (from left-to-right)
            as to reduce it to a single value.
            </summary>
            <param name="callback">
            Function to execute on each value in the typed array, taking four arguments:
            previousValue: The value previously returned in the last invocation of the callback, or initialValue,
            if supplied (see below).
            currentValue: The current element being processed in the typed array.
            index: The index of the current element being processed in the typed array.
            array: The typed array reduce was called upon.
            </param>
            <param name="initialValue">
            Optional. Object to use as the first argument to the first call of the callback.
            </param>
            <returns></returns>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.ReduceRight(System.Func{`1,`1,Bridge.Union{System.Int32,System.UInt32},`0,`1},`1)">
            <summary>
            Apply a function against an accumulator and each value of the array (from right-to-left)
            as to reduce it to a single value.
            </summary>
            <param name="callback">
            Function to execute on each value in the typed array, taking four arguments:
            previousValue: The value previously returned in the last invocation of the callback, or initialValue,
            if supplied (see below).
            currentValue: The current element being processed in the typed array.
            index: The index of the current element being processed in the typed array.
            array: The typed array reduce was called upon.
            </param>
            <param name="initialValue">
            Optional. Object to use as the first argument to the first call of the callback.
            </param>
            <returns></returns>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Reverse">
            <summary>
            Reverses the order of the elements of an array — the first becomes the last,
            and the last becomes the first.
            </summary>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Set(System.Array)">
            <summary>
            Stores multiple values in the typed array, reading input values from a specified array.
            </summary>
            <param name="array">
            The array from which to copy values. All values from the source array are copied into the
            target array, unless the length of the source array plus the offset exceeds the length of
            the target array, in which case an exception is thrown.
            </param>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Set(System.Array,Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Stores multiple values in the typed array, reading input values from a specified array.
            </summary>
            <param name="array">
            The array from which to copy values. All values from the source array are copied into the
            target array, unless the length of the source array plus the offset exceeds the length of
            the target array, in which case an exception is thrown.
            </param>
            <param name="offset">
            The offset into the target array at which to begin writing values from the source array.
            If you omit this value, 0 is assumed (that is, the source array will overwrite values in
            the target array starting at index 0).
            </param>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Set(`0,Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Stores multiple values in the typed array, reading input values from a specified array.
            </summary>
            <param name="typedArray">
            If the source array is a typed array, the two arrays may share the same underlying
            ArrayBuffer; the browser will intelligently copy the source range of the buffer to the
            destination range.
            </param>
            <param name="offset">
            The offset into the target array at which to begin writing values from the source array.
            If you omit this value, 0 is assumed (that is, the source array will overwrite values in
            the target array starting at index 0).
            </param>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Slice">
            <summary>
            Extracts a section of an array and returns a new array.
            </summary>
            <returns>A shallow copy of elements from the original typed array</returns>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Slice(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Extracts a section of an array and returns a new array.
            </summary>
            <param name="begin">
            Zero-based index at which to begin extraction.
            As a negative index, begin indicates an offset from the end of the sequence.
            slice(-2) extracts the last two elements in the sequence.
            If begin is omitted, slice begins from index 0.
            </param>
            <returns>A shallow copy of elements from the original typed array</returns>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Slice(Bridge.Union{System.Int32,System.UInt32},Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Extracts a section of an array and returns a new array.
            </summary>
            <param name="begin">
            Zero-based index at which to begin extraction.
            As a negative index, begin indicates an offset from the end of the sequence.
            slice(-2) extracts the last two elements in the sequence.
            If begin is omitted, slice begins from index 0.
            </param>
            <param name="end">
            Zero-based index at which to end extraction.
            slice() extracts up to but not including end.slice(1,4) extracts the second element up to
            the fourth element (elements indexed 1, 2, and 3).
            As a negative index, end indicates an offset from the end of the sequence.
            slice(2,-1) extracts the third element through the second-to-last element in the sequence.
            If end is omitted, slice extracts to the end of the sequence (arr.length).
            </param>
            <returns>A shallow copy of elements from the original typed array</returns>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Some(System.Func{`1,Bridge.Union{System.Int32,System.UInt32},`0,`1},`0)">
            <summary>
            Returns true if at least one element in this array satisfies the provided testing function.
            </summary>
            <param name="callback">
            Function to test for each element, taking three arguments:
            currentValue: The current element being processed in the typed array.
            index: The index of the current element being processed in the typed array.
            array: The array some() was called upon.
            </param>
            <param name="thisArg">Optional. Value to use as 'this' when executing callback.</param>
            <returns>
            True if at least one element in this array satisfies the provided testing function.
            False otherwise.
            </returns>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Sort">
            <summary>
            Sorts the elements of an array in place and returns the array.
            </summary>
            <returns>Sorted TypedArray.</returns>
            <remarks>Most browsers do not support this yet.</remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.Sort(System.Func{`1,`1,System.Int32})">
             <summary>
             Sorts the elements of an array in place and returns the array.
             </summary>
             <param name="compareFunction">
             Specifies a function that defines the sort order. If omitted, the array is sorted according to
             each character's Unicode code point value, according to the string conversion of each element.
             Example: int compareFunction(a, b) { ... };
             </param>
             <remarks>
             Most browsers do not support this yet.
            
             If compareFunction is supplied, the array elements are sorted according to the return value of the
             compare function. If a and b are two elements being compared, then:
             • If compareFunction(a, b) is less than 0, sort a to a lower index than b, i.e. a comes first.
             • If compareFunction(a, b) returns 0, leave a and b unchanged with respect to each other, but sorted
               with respect to all different elements. Note: the ECMAscript standard does not guarantee this
               behaviour, and thus not all browsers (e.g. Mozilla versions dating back to at least 2003) respect
               this.
             • If compareFunction(a, b) is greater than 0, sort b to a lower index than a.
             • compareFunction(a, b) must always return the same value when given a specific pair of elements a
               and b as its two arguments. If inconsistent results are returned then the sort order is undefined.
             </remarks>
             <returns>Sorted TypedArray.</returns>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.SubArray">
            <summary>
            Returns a new TypedArray from the given start and end element index.
            </summary>
            <returns>
            A new TypedArray on the same ArrayBuffer store and with the same element types
            as for this TypedArray object.
            </returns>
            <remarks>
            Some browsers do not support this yet (may require begin and end parameters).
            </remarks>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.SubArray(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Returns a new TypedArray from the given start and end element index.
            </summary>
            <param name="begin">Element to begin at. The offset is inclusive.</param>
            <returns>
            A new TypedArray on the same ArrayBuffer store and with the same element types
            as for this TypedArray object.
            </returns>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.SubArray(Bridge.Union{System.Int32,System.UInt32},Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Returns a new TypedArray from the given start and end element index.
            </summary>
            <param name="begin">Element to begin at. The offset is inclusive.</param>
            <param name="end">
            Element to end at. The offset is exclusive. If not specified, all elements from the one
            specified by begin to the end of the array are included in the new view.
            </param>
            <returns>
            A new TypedArray on the same ArrayBuffer store and with the same element types
            as for this TypedArray object.
            </returns>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.ToLocaleString">
            <summary>
            The elements are converted to Strings using their toLocaleString methods and these Strings
            are separated by a locale-specific String (such as a comma “,”).
            </summary>
            <returns>A localized string representing the array and its elements.</returns>
        </member>
        <member name="M:Bridge.Html5.TypedArray.Prototype`2.ToString">
            <summary>
            Joins the array and returns one string containing each array element separated by commas.
            </summary>
            <returns>A string representing the array and its elements.</returns>
        </member>
        <member name="P:Bridge.Html5.TypedArray.Prototype`2.System#Collections#Generic#ICollection{TypedElement}#IsReadOnly">
            <summary>
            Gets a value indicating whether the TypedArray is read-only.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Uint16Array">
            <summary>
            Represents an array of 16-bit unsigned integers in the platform byte order.
            If control over byte order is needed, use DataView instead. The contents are initialized to 0.
            Once established, you can reference elements in the array using the object's methods, or using
            standard array index syntax (that is, using bracket notation).
            </summary>
        </member>
        <member name="M:Bridge.Html5.Uint16Array.#ctor(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Creates a new Uint16Array of the specified length.
            </summary>
            <param name="length">Length of array to create</param>
        </member>
        <member name="M:Bridge.Html5.Uint16Array.#ctor(Bridge.Html5.Uint16Array)">
            <summary>
            Creates a new Uint16Array out of the specified Uint16Array.
            </summary>
            <param name="typedArray">Uint16Array to use as initial contents to the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Uint16Array.#ctor(System.Object)">
            <summary>
            Creates a new Uint16Array out of the specified object.
            </summary>
            <param name="objectInstance">Object to be converted into the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Uint16Array.#ctor(Bridge.Html5.ArrayBuffer,System.UInt32,System.UInt32)">
            <summary>
            Creates a new Uint16Array out of the specified buffer and byteOffset with the specified length.
            </summary>
            <param name="buffer">Arraybuffer to use as base for contents.</param>
            <param name="byteOffset">Optional. Position in the buffer to start reading data from.</param>
            <param name="length">Optional. Number of elements to consider while creating the array.</param>
        </member>
        <member name="P:Bridge.Html5.Uint16Array.Item(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Allows index operations on the array.
            </summary>
            <param name="i">Index position in the array.</param>
            <returns>The element in the specified position.</returns>
        </member>
        <member name="F:Bridge.Html5.Uint16Array.BYTES_PER_ELEMENT">
            <summary>
            Returns a number value of the element size. 1 in the case of an Uint16Array.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Uint16Array.length">
            <summary>
            Length property whose value is 3.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Uint16Array.name">
            <summary>
            Returns the string value of the constructor name. In the case of the Uint16Array type: "Uint16Array".
            </summary>
        </member>
        <member name="T:Bridge.Html5.Uint32Array">
            <summary>
            Represents an array of 32-bit unsigned integers in the platform byte order.
            If control over byte order is needed, use DataView instead. The contents are initialized to 0.
            Once established, you can reference elements in the array using the object's methods, or using
            standard array index syntax (that is, using bracket notation).
            </summary>
        </member>
        <member name="M:Bridge.Html5.Uint32Array.#ctor(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Creates a new Uint32Array of the specified length.
            </summary>
            <param name="length">Length of array to create</param>
        </member>
        <member name="M:Bridge.Html5.Uint32Array.#ctor(Bridge.Html5.Uint32Array)">
            <summary>
            Creates a new Uint32Array out of the specified Uint32Array.
            </summary>
            <param name="typedArray">Uint32Array to use as initial contents to the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Uint32Array.#ctor(System.Object)">
            <summary>
            Creates a new Uint32Array out of the specified object.
            </summary>
            <param name="objectInstance">Object to be converted into the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Uint32Array.#ctor(Bridge.Html5.ArrayBuffer,System.UInt32,System.UInt32)">
            <summary>
            Creates a new Uint32Array out of the specified buffer and byteOffset with the specified length.
            </summary>
            <param name="buffer">Arraybuffer to use as base for contents.</param>
            <param name="byteOffset">Optional. Position in the buffer to start reading data from.</param>
            <param name="length">Optional. Number of elements to consider while creating the array.</param>
        </member>
        <member name="P:Bridge.Html5.Uint32Array.Item(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Allows index operations on the array.
            </summary>
            <param name="i">Index position in the array.</param>
            <returns>The element in the specified position.</returns>
        </member>
        <member name="F:Bridge.Html5.Uint32Array.BYTES_PER_ELEMENT">
            <summary>
            Returns a number value of the element size. 1 in the case of an Uint32Array.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Uint32Array.length">
            <summary>
            Length property whose value is 3.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Uint32Array.name">
            <summary>
            Returns the string value of the constructor name. In the case of the Uint32Array type: "Uint32Array".
            </summary>
        </member>
        <member name="T:Bridge.Html5.Uint8Array">
            <summary>
            Represents an array of twos-complement 8-bit unsigned integers. The contents are initialized to 0.
            Once established, you can reference elements in the array using the object's methods, or using standard
            array index syntax (that is, using bracket notation).
            </summary>
        </member>
        <member name="M:Bridge.Html5.Uint8Array.#ctor(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Creates a new Uint8Array of the specified length.
            </summary>
            <param name="length">Length of array to create</param>
        </member>
        <member name="M:Bridge.Html5.Uint8Array.#ctor(Bridge.Html5.Uint8Array)">
            <summary>
            Creates a new Uint8Array out of the specified Uint8Array.
            </summary>
            <param name="typedArray">Uint8Array to use as initial contents to the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Uint8Array.#ctor(System.Object)">
            <summary>
            Creates a new Uint8Array out of the specified object.
            </summary>
            <param name="objectInstance">Object to be converted into the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Uint8Array.#ctor(Bridge.Html5.ArrayBuffer,System.UInt32,System.UInt32)">
            <summary>
            Creates a new Uint8Array out of the specified buffer and byteOffset with the specified length.
            </summary>
            <param name="buffer">Arraybuffer to use as base for contents.</param>
            <param name="byteOffset">Optional. Position in the buffer to start reading data from.</param>
            <param name="length">Optional. Number of elements to consider while creating the array.</param>
        </member>
        <member name="P:Bridge.Html5.Uint8Array.Item(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Allows index operations on the array.
            </summary>
            <param name="i">Index position in the array.</param>
            <returns>The element in the specified position.</returns>
        </member>
        <member name="F:Bridge.Html5.Uint8Array.BYTES_PER_ELEMENT">
            <summary>
            Returns a number value of the element size. 1 in the case of an Uint8Array.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Uint8Array.length">
            <summary>
            Length property whose value is 3.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Uint8Array.name">
            <summary>
            Returns the string value of the constructor name. In the case of the Uint8Array type: "Uint8Array".
            </summary>
        </member>
        <member name="T:Bridge.Html5.Uint8ClampedArray">
            <summary>
            Represents an array of twos-complement 8-bit unsigned integers clamped to 0-255. The contents are
            initialized to 0. Once established, you can reference elements in the array using the object's
            methods, or using standard array index syntax (that is, using bracket notation).
            </summary>
        </member>
        <member name="M:Bridge.Html5.Uint8ClampedArray.#ctor(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Creates a new Uint8ClampedArray of the specified length.
            </summary>
            <param name="length">Length of array to create</param>
        </member>
        <member name="M:Bridge.Html5.Uint8ClampedArray.#ctor(Bridge.Html5.Uint8ClampedArray)">
            <summary>
            Creates a new Uint8ClampedArray out of the specified Uint8ClampedArray.
            </summary>
            <param name="typedArray">Uint8ClampedArray to use as initial contents to the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Uint8ClampedArray.#ctor(System.Object)">
            <summary>
            Creates a new Uint8ClampedArray out of the specified object.
            </summary>
            <param name="objectInstance">Object to be converted into the new array.</param>
        </member>
        <member name="M:Bridge.Html5.Uint8ClampedArray.#ctor(Bridge.Html5.ArrayBuffer,System.UInt32,System.UInt32)">
            <summary>
            Creates a new Uint8ClampedArray out of the specified buffer and byteOffset with the specified length.
            </summary>
            <param name="buffer">Arraybuffer to use as base for contents.</param>
            <param name="byteOffset">Optional. Position in the buffer to start reading data from.</param>
            <param name="length">Optional. Number of elements to consider while creating the array.</param>
        </member>
        <member name="P:Bridge.Html5.Uint8ClampedArray.Item(Bridge.Union{System.Int32,System.UInt32})">
            <summary>
            Allows index operations on the array.
            </summary>
            <param name="i">Index position in the array.</param>
            <returns>The element in the specified position.</returns>
        </member>
        <member name="F:Bridge.Html5.Uint8ClampedArray.BYTES_PER_ELEMENT">
            <summary>
            Returns a number value of the element size. 1 in the case of an Uint8ClampedArray.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Uint8ClampedArray.length">
            <summary>
            Length property whose value is 3.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Uint8ClampedArray.name">
            <summary>
            Returns the string value of the constructor name. In the case of the Uint8ClampedArray type: "Uint8ClampedArray".
            </summary>
        </member>
        <member name="T:Bridge.Html5.URLSearchParams">
            <summary>
            The URLSearchParams interface defines utility methods to work with the query string of a URL.
            </summary>
        </member>
        <member name="M:Bridge.Html5.URLSearchParams.#ctor(System.String)">
            <summary>
            Constructor returning a URLSearchParams object.
            </summary>
            <param name="init"></param>
        </member>
        <member name="M:Bridge.Html5.URLSearchParams.#ctor(Bridge.Html5.URLSearchParams)">
            <summary>
            Copy constructor returning a URLSearchParams object.
            </summary>
            <param name="init"></param>
        </member>
        <member name="T:Bridge.Html5.ValidityState">
            <summary>
            The ValidityState interface represents the validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element's value fails to validate, if it's not valid.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ValidityState.CustomError">
            <summary>
            The element's custom validity message has been set to a non-empty string by calling the element's setCustomValidity() method.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ValidityState.PatternMismatch">
            <summary>
            The value does not match the specified pattern.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ValidityState.RangeOverflow">
            <summary>
            The value is greater than the maximum specified by the max attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ValidityState.RangeUnderflow">
            <summary>
            The value is less than the minimum specified by the min attribute.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ValidityState.StepMismatch">
            <summary>
            The value does not fit the rules determined by the step attribute (that is, it's not evenly divisible by the step value).
            </summary>
        </member>
        <member name="F:Bridge.Html5.ValidityState.TooLong">
            <summary>
            The value exceeds the specified maxlength for HTMLInputElement or HTMLTextAreaElement objects.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ValidityState.TypeMismatch">
            <summary>
            The value is not in the required syntax (when type is email or url).
            </summary>
        </member>
        <member name="F:Bridge.Html5.ValidityState.Valid">
            <summary>
            The element meets all constraint validations, and is therefore considered to be valid.
            </summary>
        </member>
        <member name="F:Bridge.Html5.ValidityState.ValueMissing">
            <summary>
            The element has a required attribute, but no value.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Global">
            <summary>
            The global object represents an object ontaining a DOM document;
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Closed">
            <summary>
            This read-only property indicates whether the referenced window is closed or not.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.DialogArguments">
            <summary>
            Gets the arguments passed to the window (if it's a dialog box) at the time window.showModalDialog() was called.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Document">
            <summary>
            Returns a reference to the document that the window contains.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.FrameElement">
            <summary>
            Returns the element (such as &lt;iframe&gt; or &lt;object&gt;) in which the window is embedded, or null if the window is top-level.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Frames">
            <summary>
            Returns the window itself, which is an array-like object, listing the direct sub-frames of the current window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.History">
            <summary>
            Returns a reference to the history objectt, which provides an interface for manipulating the browser session history (pages visited in the tab or frame that the current page is loaded in).
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.InnerHeight">
            <summary>
            Height (in pixels) of the browser window viewport including, if rendered, the horizontal scrollbar.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.InnerWidth">
            <summary>
            Width (in pixels) of the browser window viewport including, if rendered, the vertical scrollbar.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Length">
            <summary>
            Returns the number of frames in the window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Location">
            <summary>
            The Window.location read-only property returns a Location object with information about the current location of the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Locationbar">
            <summary>
            Returns the locationbar object, whose visibility can be checked.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.LocalStorage">
            <summary>
            Returns a reference to the local storage object used to store data that may only be accessed by the origin that created it.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Menubar">
            <summary>
            Returns the menubar object, whose visibility can be toggled in the window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Name">
            <summary>
            Gets/sets the name of the window.
            The name of the window is used primarily for setting targets for hyperlinks and forms. Windows do not need to have names.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Navigator">
            <summary>
            The Window.navigator read-only property returns a reference to the Navigator object, which can be queried for information about the application running the script.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Opener">
            <summary>
            Returns a reference to the window that opened this current window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OuterHeight">
            <summary>
            Gets the height of the outside of the browser window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OuterWidth">
            <summary>
            Gets the width of the outside of the browser window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.PageXOffset">
            <summary>
            An alias for window.scrollX.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.PageYOffset">
            <summary>
            An alias for window.scrollY.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Parent">
            <summary>
            Returns a reference to the parent of the current window or subframe.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Performance">
            <summary>
            Provides a hosting area for performance related attributes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.ReturnValue">
            <summary>
            The return value to be returned to the function that called window.showModalDialog() to display the window as a modal dialog.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Screen">
            <summary>
            Returns a reference to the screen object associated with the window.
            The screen object is a special object for inspecting properties of the screen on which the current window is being rendered.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.ScreenX">
            <summary>
            Returns the horizontal distance of the left border of the user's browser from the left side of the screen.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.ScreenY">
            <summary>
            Returns the vertical distance of the top border of the user's browser from the top side of the screen.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Scrollbars">
            <summary>
            Returns the scrollbars object, whose visibility can be toggled in the window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.ScrollX">
            <summary>
            Returns the number of pixels that the document has already been scrolled horizontally.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.ScrollY">
            <summary>
            Returns the number of pixels that the document has already been scrolled vertically.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Self">
            <summary>
            Returns an object reference to the window object itself.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.SessionStorage">
            <summary>
            A storage object for storing data within a single page session.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Status">
            <summary>
            Gets/sets the text in the statusbar at the bottom of the browser.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Statusbar">
            <summary>
            Returns the statusbar object, whose visibility can be toggled in the window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Top">
            <summary>
            Returns a reference to the topmost window in the window hierarchy. This property is read only.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(System.String,System.Delegate)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(System.String,System.Action)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(Bridge.Html5.EventType,System.Delegate)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(Bridge.Html5.EventType,System.Action)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(System.String,System.Action{Bridge.Html5.Event})">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event})">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(System.String,System.Delegate,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(System.String,System.Action,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(Bridge.Html5.EventType,System.Delegate,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(Bridge.Html5.EventType,System.Action,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(System.String,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(System.String,Bridge.Html5.IEventListener)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(System.String,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Global.AddEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Global.Alert">
            <summary>
            The Window.alert() method displays an alert dialog with the optional specified content and an OK button.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Global.Alert(System.String)">
            <summary>
            The Window.alert() method displays an alert dialog with the optional specified content and an OK button.
            </summary>
            <param name="message">message is an optional string of text you want to display in the alert dialog, or, alternatively, an object that is converted into a string and displayed.</param>
        </member>
        <member name="M:Bridge.Html5.Global.Atob(System.String)">
            <summary>
            The Window.atob()decodes a string of data which has been encoded using base-64 encoding. You can use the window.btoa() method to encode and transmit data which may otherwise cause communication problems, then transmit it and use the window.atob() method to decode the data again. For example, you can encode, transmit, and decode control characters such as ASCII values 0 through 31.
            </summary>
            <param name="encodedData">encoded string</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Global.Back">
            <summary>
            Returns the window to the previous item in the history.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Global.Blur">
            <summary>
            Shifts focus away from the window.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Global.Btoa(System.String)">
            <summary>
            Creates a base-64 encoded ASCII string from a "string" of binary data.
            You can use this method to encode data which may otherwise cause communication problems, transmit it, then use the window.atob method to decode the data again. For example, you can encode control characters such as ASCII values 0 through 31.
            </summary>
            <param name="stringToEncode">String to encode</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Global.CancelAnimationFrame(System.Int32)">
            <summary>
            Cancels an animation frame request previously scheduled through a call to window.requestAnimationFrame().
            </summary>
            <param name="requestID">The ID value returned by the call to window.requestAnimationFrame() that requested the callback.</param>
        </member>
        <member name="M:Bridge.Html5.Global.ClearInterval(System.Int32)">
            <summary>
            Cancels repeated action which was set up using setInterval.
            </summary>
            <param name="intervalID">intervalID is the identifier of the repeated action you want to cancel. This ID is returned from setInterval().</param>
        </member>
        <member name="M:Bridge.Html5.Global.ClearTimeout(System.Int32)">
            <summary>
            Clears the delay set by window.setTimeout().
            </summary>
            <param name="timeoutID">timeoutID is the ID of the timeout you wish to clear, as returned by window.setTimeout().</param>
        </member>
        <member name="M:Bridge.Html5.Global.Close">
            <summary>
            Closes the current window, or a referenced window.
            This method is only allowed to be called for windows that were opened by a script using the window.open method. If the window was not opened by a script, the following error appears in the JavaScript Console: Scripts may not close windows that were not opened by script.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Global.Confirm">
            <summary>
            The Window.confirm() method displays a modal dialog with an optional message and two buttons, OK and Cancel.
            </summary>
            <returns>result is a boolean value indicating whether OK or Cancel was selected (true means OK).</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Confirm(System.String)">
            <summary>
            The Window.confirm() method displays a modal dialog with an optional message and two buttons, OK and Cancel.
            </summary>
            <param name="message">message is the optional string to be displayed in the dialog.</param>
            <returns>result is a boolean value indicating whether OK or Cancel was selected (true means OK).</returns>
        </member>
        <member name="M:Bridge.Html5.Global.DispatchEvent(Bridge.Html5.Event)">
            <summary>
            Dispatches the specified event to the current element.
            To create an event object use the createEvent method in Firefox, Opera, Google Chrome, Safari and Internet Explorer from version 9. After the new event is created, initialize it first (for details, see the page for the createEvent method). When the event is initialized, it is ready for dispatching.
            </summary>
            <param name="e">Required. Reference to an event object to be dispatched.</param>
            <returns>Boolean that indicates whether the default action of the event was not canceled.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Dump(System.String)">
            <summary>
            Prints messages to the (native) console.
            </summary>
            <param name="message">message is the string message to log.</param>
        </member>
        <member name="M:Bridge.Html5.Global.Find(System.String)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Find(System.String,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">Boolean value. If true, specifies a case-sensitive search.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Find(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">Boolean value. If true, specifies a case-sensitive search.</param>
            <param name="backwards">Boolean. If true, specifies a backward search.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Find(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">Boolean value. If true, specifies a case-sensitive search.</param>
            <param name="backwards">Boolean. If true, specifies a backward search.</param>
            <param name="wrapAround">Boolean. If true, specifies a wrap around search.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Find(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">The text string for which to search.</param>
            <param name="backwards">Boolean. If true, specifies a backward search.</param>
            <param name="wrapAround">Boolean. If true, specifies a wrap around search.</param>
            <param name="wholeWord">Boolean. If true, specifies a whole word search. </param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Find(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">Boolean value. If true, specifies a case-sensitive search.</param>
            <param name="backwards">Boolean. If true, specifies a backward search.</param>
            <param name="wrapAround">Boolean. If true, specifies a wrap around search.</param>
            <param name="wholeWord">Boolean. If true, specifies a whole word search. </param>
            <param name="searchInFrames">Boolean. If true, specifies a search in frames.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Find(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">Boolean value. If true, specifies a case-sensitive search.</param>
            <param name="backwards">Boolean. If true, specifies a backward search.</param>
            <param name="wrapAround">Boolean. If true, specifies a wrap around search.</param>
            <param name="wholeWord">Boolean. If true, specifies a whole word search. </param>
            <param name="searchInFrames">Boolean. If true, specifies a search in frames.</param>
            <param name="showDialog">Boolean. If true, specifies a show Dialog.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Focus">
            <summary>
            Makes a request to bring the window to the front. It may fail due to user settings and the window isn't guaranteed to be frontmost before this method returns.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Global.Forward">
            <summary>
            Moves the window one document forward in the history.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Global.GetComputedStyle(Bridge.Html5.HTMLElement)">
            <summary>
            The Window.getComputedStyle() method gives the values of all the CSS properties of an element after applying the active stylesheets and resolving any basic computation those values may contain
            </summary>
            <param name="el">The Element for which to get the computed style.</param>
            <returns>The returned style is a CSSStyleDeclaration object.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.GetComputedStyle(Bridge.Html5.HTMLElement,System.String)">
            <summary>
            The Window.getComputedStyle() method gives the values of all the CSS properties of an element after applying the active stylesheets and resolving any basic computation those values may contain
            </summary>
            <param name="el">The Element for which to get the computed style.</param>
            <param name="pseudoElt">A string specifying the pseudo-element to match. Must be omitted (or null) for regular elements.</param>
            <returns>The returned style is a CSSStyleDeclaration object.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.GetDefaultComputedStyle(Bridge.Html5.HTMLElement)">
            <summary>
            getDefaultComputedStyle() gives the default computed values of all the CSS properties of an element, ignoring author styling.  That is, only user-agent and user styles are taken into account.
            </summary>
            <param name="el">The Element for which to get the computed style.</param>
            <returns>The returned style is a CSSStyleDeclaration object.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.GetDefaultComputedStyle(Bridge.Html5.HTMLElement,System.String)">
            <summary>
            getDefaultComputedStyle() gives the default computed values of all the CSS properties of an element, ignoring author styling.  That is, only user-agent and user styles are taken into account.
            </summary>
            <param name="el">The Element for which to get the computed style.</param>
            <param name="pseudoElt">A string specifying the pseudo-element to match. Must be null (or not specified) for regular elements.</param>
            <returns>The returned style is a CSSStyleDeclaration object.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.GetSelection">
            <summary>
            Returns a selection object representing the range of text selected by the user.
            </summary>
            <returns>selection is a Selection object. When cast to string, either by adding empty quotes "" or using .toString, this object is the text selected.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Home">
            <summary>
            Returns the window to the home page.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Global.MatchMedia(System.String)">
            <summary>
            Returns a new MediaQueryList object representing the parsed results of the specified media query string.
            </summary>
            <param name="mediaQueryString">string representing the media query for which to return a new MediaQueryList object.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Global.MoveBy(System.Int32,System.Int32)">
            <summary>
            Moves the current window by a specified amount.
            </summary>
            <param name="deltaX">the amount of pixels to move the window horizontally.</param>
            <param name="deltaY">the amount of pixels to move the window vertically.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RequestAnimationFrame(System.Delegate)">
            <summary>
            The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser call a specified function to update an animation before the next repaint. The method takes as an argument a callback to be invoked before the repaint.
            </summary>
            <param name="callback">A parameter specifying a function to call when it's time to update your animation for the next repaint. The callback has one single argument, a DOMHighResTimeStamp, which indicates the current time for when requestAnimationFrame starts to fire callbacks.</param>
            <returns>requestID is a long integer value that uniquely identifies the entry in the callback list. This is a non-zero value, but you may not make any other assumptions about its value. You can pass this value to window.cancelAnimationFrame() to cancel the refresh callback request.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.RequestAnimationFrame(System.Action{System.Double})">
            <summary>
            The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser call a specified function to update an animation before the next repaint. The method takes as an argument a callback to be invoked before the repaint.
            </summary>
            <param name="callback">A parameter specifying a function to call when it's time to update your animation for the next repaint. The callback has one single argument, a DOMHighResTimeStamp, which indicates the current time for when requestAnimationFrame starts to fire callbacks.</param>
            <returns>requestID is a long integer value that uniquely identifies the entry in the callback list. This is a non-zero value, but you may not make any other assumptions about its value. You can pass this value to window.cancelAnimationFrame() to cancel the refresh callback request.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Open">
            <summary>
            The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.
            </summary>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Open(System.String)">
            <summary>
            The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Open(System.String,System.String)">
            <summary>
            The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <param name="name">A string name for the new window. The name can be used as the target of links and forms using the target attribute of an &lt;a&gt; or &lt;form&gt; element. The name should not contain any blank space. Note that strWindowName does not specify the title of the new window.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Open(System.String,System.String,System.String)">
            <summary>
            The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <param name="name">A string name for the new window. The name can be used as the target of links and forms using the target attribute of an &lt;a&gt; or &lt;form&gt; element. The name should not contain any blank space. Note that strWindowName does not specify the title of the new window.</param>
            <param name="features">Optional parameter listing the features (size, position, scrollbars, etc.) of the new window. The string must not contain any blank space, each feature name and value must be separated by a comma.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.OpenDialog">
            <summary>
            window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently.
            </summary>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.OpenDialog(System.String)">
            <summary>
            window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.OpenDialog(System.String,System.String)">
            <summary>
            window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <param name="name">A string name for the new window. The name can be used as the target of links and forms using the target attribute of an &lt;a&gt; or &lt;form&gt; element. The name should not contain any blank space. Note that strWindowName does not specify the title of the new window.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.OpenDialog(System.String,System.String,System.String)">
            <summary>
            window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <param name="name">A string name for the new window. The name can be used as the target of links and forms using the target attribute of an &lt;a&gt; or &lt;form&gt; element. The name should not contain any blank space. Note that strWindowName does not specify the title of the new window.</param>
            <param name="features">Optional parameter listing the features (size, position, scrollbars, etc.) of the new window. The string must not contain any blank space, each feature name and value must be separated by a comma.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.OpenDialog(System.String,System.String,System.String,System.Object[])">
            <summary>
            window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <param name="name">A string name for the new window. The name can be used as the target of links and forms using the target attribute of an &lt;a&gt; or &lt;form&gt; element. The name should not contain any blank space. Note that strWindowName does not specify the title of the new window.</param>
            <param name="features">Optional parameter listing the features (size, position, scrollbars, etc.) of the new window. The string must not contain any blank space, each feature name and value must be separated by a comma.</param>
            <param name="args">The arguments to be passed to the new window (optional).</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.PostMessage(System.Object,System.String)">
            <summary>
            The window.postMessage method safely enables cross-origin communication.
            </summary>
            <param name="message">Data to be sent to the other window.</param>
            <param name="targetOrigin">Specifies what the origin of otherWindow must be for the event to be dispatched, either as the literal string "*" (indicating no preference) or as a URI.</param>
        </member>
        <member name="M:Bridge.Html5.Global.PostMessage(System.Object,System.String,System.Object[])">
            <summary>
            The window.postMessage method safely enables cross-origin communication.
            </summary>
            <param name="message">Data to be sent to the other window.</param>
            <param name="targetOrigin">Specifies what the origin of otherWindow must be for the event to be dispatched, either as the literal string "*" (indicating no preference) or as a URI.</param>
            <param name="transfer">Is a sequence of Transferable objects that are transferred with the message.</param>
        </member>
        <member name="M:Bridge.Html5.Global.Print">
            <summary>
            Opens the Print Dialog to print the current document.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Global.Prompt">
            <summary>
            The Window.prompt() displays a dialog with an optional message prompting the user to input some text.
            </summary>
            <returns>string containing the text entered by the user, or the value null.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Prompt(System.String)">
            <summary>
            The Window.prompt() displays a dialog with an optional message prompting the user to input some text.
            </summary>
            <param name="message">string of text to display to the user. This parameter is optional and can be omitted if there is nothing to show in the prompt window.</param>
            <returns>string containing the text entered by the user, or the value null.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.Prompt(System.String,System.String)">
            <summary>
            The Window.prompt() displays a dialog with an optional message prompting the user to input some text.
            </summary>
            <param name="message">string of text to display to the user. This parameter is optional and can be omitted if there is nothing to show in the prompt window.</param>
            <param name="value">string containing the default value displayed in the text input field. It is an optional parameter. Note that in Internet Explorer 7 and 8, if you do not provide this parameter, the string "undefined" is the default value.</param>
            <returns>string containing the text entered by the user, or the value null.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(System.String,Bridge.Html5.IEventListener)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(System.String,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(Bridge.Html5.EventType,System.Delegate)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(Bridge.Html5.EventType,System.Action)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(Bridge.Html5.EventType,System.Delegate,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(Bridge.Html5.EventType,System.Action,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(System.String,System.Delegate)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(System.String,System.Action)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(System.String,System.Delegate,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(System.String,System.Action,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event})">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(System.String,System.Action{Bridge.Html5.Event})">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Global.RemoveEventListener(System.String,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Global.ResizeBy(System.Int32,System.Int32)">
            <summary>
            Resizes the current window by a certain amount.
            </summary>
            <param name="xDelta">the number of pixels to grow the window horizontally.</param>
            <param name="yDelta">the number of pixels to grow the window vertically.</param>
        </member>
        <member name="M:Bridge.Html5.Global.ResizeTo(System.Int32,System.Int32)">
            <summary>
            Dynamically resizes window.
            </summary>
            <param name="width">integer representing the new outerWidth in pixels (including scroll bars, title bars, etc).</param>
            <param name="height">integer value representing the new outerHeight in pixels (including scroll bars, title bars, etc).</param>
        </member>
        <member name="M:Bridge.Html5.Global.Scroll(System.Int32,System.Int32)">
            <summary>
            Scrolls the window to a particular place in the document.
            </summary>
            <param name="xcoord">the pixel along the horizontal axis of the document that you want displayed in the upper left.</param>
            <param name="ycoord">the pixel along the vertical axis of the document that you want displayed in the upper left.</param>
        </member>
        <member name="M:Bridge.Html5.Global.ScrollBy(System.Int32,System.Int32)">
            <summary>
            Scrolls the document in the window by the given amount.
            </summary>
            <param name="x">X is the offset in pixels to scroll horizontally.</param>
            <param name="y">Y is the offset in pixels to scroll vertically.</param>
        </member>
        <member name="M:Bridge.Html5.Global.ScrollByLines(System.Int32)">
            <summary>
            Scrolls the document by the given number of lines.
            </summary>
            <param name="lines">the number of lines to scroll the document by.</param>
        </member>
        <member name="M:Bridge.Html5.Global.ScrollByPages(System.Int32)">
            <summary>
            Scrolls the current document by the specified number of pages.
            </summary>
            <param name="pages">the number of pages to scroll.</param>
        </member>
        <member name="M:Bridge.Html5.Global.ScrollTo(System.Int32,System.Int32)">
            <summary>
            Scrolls to a particular set of coordinates in the document.
            </summary>
            <param name="x">the pixel along the horizontal axis of the document that you want displayed in the upper left.</param>
            <param name="y">the pixel along the vertical axis of the document that you want displayed in the upper left.</param>
        </member>
        <member name="M:Bridge.Html5.Global.SetInterval(System.Action)">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.Global.SetInterval(System.Action,System.Int32)">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.Global.SetInterval(System.Action,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <param name="arguments"></param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.Global.SetInterval(System.String)">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.Global.SetInterval(System.String,System.Int32)">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.Global.SetInterval(System.String,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <param name="arguments"></param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.Global.SetInterval(System.Delegate,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <param name="arguments"></param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.Global.SetTimeout(System.Action)">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.Global.SetTimeout(System.Action,System.Int32)">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.Global.SetTimeout(System.Action,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <param name="arguments"></param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.Global.SetTimeout(System.String)">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.Global.SetTimeout(System.String,System.Int32)">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.Global.SetTimeout(System.String,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <param name="arguments"></param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.Global.SetTimeout(System.Delegate,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <param name="arguments"></param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.Global.ShowModalDialog(System.String)">
            <summary>
            The Window.showModalDialog() creates and displays a modal dialog box containing a specified HTML document.
            </summary>
            <param name="uri"> the URI of the document to display in the dialog box.</param>
            <returns> a variant, indicating the returnValue property as set by the window of the document specified by uri.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.ShowModalDialog(System.String,System.Object)">
            <summary>
            The Window.showModalDialog() creates and displays a modal dialog box containing a specified HTML document.
            </summary>
            <param name="uri"> the URI of the document to display in the dialog box.</param>
            <param name="arguments">an optional variant that contains values that should be passed to the dialog box; these are made available in the window object's window.dialogArguments property.</param>
            <returns> a variant, indicating the returnValue property as set by the window of the document specified by uri.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.ShowModalDialog(System.String,System.Object,System.String)">
            <summary>
            The Window.showModalDialog() creates and displays a modal dialog box containing a specified HTML document.
            </summary>
            <param name="uri"> the URI of the document to display in the dialog box.</param>
            <param name="arguments">an optional variant that contains values that should be passed to the dialog box; these are made available in the window object's window.dialogArguments property.</param>
            <param name="options">an optional string that specifies window ornamentation for the dialog box, using one or more semicolon delimited values:</param>
            <returns> a variant, indicating the returnValue property as set by the window of the document specified by uri.</returns>
        </member>
        <member name="M:Bridge.Html5.Global.SizeToContent">
            <summary>
            Sizes the window according to its content.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Global.Stop">
            <summary>
            This method stops window loading.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Global.UpdateCommands(System.String)">
            <summary>
            Updates the state of commands of the current chrome window (UI).
            </summary>
            <param name="commandName">a particular string which describes what kind of update event this is (e.g. whether we are in bold right now).</param>
        </member>
        <member name="F:Bridge.Html5.Global.OnAbort">
            <summary>
            An event handler property for abort events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnBeforeUnload">
            <summary>
            An event handler property for before-unload events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnBlur">
            <summary>
            An event handler property for blur events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnChange">
            <summary>
            An event handler property for change events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnClick">
            <summary>
            An event handler property for click events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnClose">
            <summary>
            An event handler property for handling the window close event
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnContextMenu">
            <summary>
            An event handler property for right-click events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnDeviceLight">
            <summary>
            An event handler property for any ambient light levels changes
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnDeviceMotion">
            <summary>
            FIXME: NeedsContents
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnDeviceOrientation">
            <summary>
            An event handler property for any device orientation changes
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnDeviceProximity">
            <summary>
            An event handler property for device proximity event
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnDragDrop">
            <summary>
            An event handler property for drag and drop events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnError">
            <summary>
            An event handler property for errors raised on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnFocus">
            <summary>
            An event handler property for focus events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnHashChange">
            <summary>
            An event handler property for hash change events on the window; called when the part of the URL after the hash mark ("#") changes
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnKeyDown">
            <summary>
            An event handler property for keydown events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnKeyPress">
            <summary>
            An event handler property for keypress events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnKeyUp">
            <summary>
            An event handler property for keyup events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnLoad">
            <summary>
            An event handler property for window loading
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnMouseDown">
            <summary>
            An event handler property for mousedown events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnMouseMove">
            <summary>
            An event handler property for mousemove events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnMouseOut">
            <summary>
            An event handler property for mouseout events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnMouseOver">
            <summary>
            An event handler property for mouseover events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnMouseUp">
            <summary>
            An event handler property for mouseup events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnPaint">
            <summary>
            An event handler property for paint events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnPopState">
            <summary>
            An event handler property for popstate events, which are fired when navigating to a session history entry representing a state object
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnReset">
            <summary>
            An event handler property for reset events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnResize">
            <summary>
            An event handler property for window resizing
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnScroll">
            <summary>
            An event handler property for window scrolling
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnSelect">
            <summary>
            An event handler property for window selection
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnSubmit">
            <summary>
            An event handler property for submits on window forms
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnUnload">
            <summary>
            An event handler property for unload events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnUserProximity">
            <summary>
            An event handler property for user proximity events
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnPageShow">
            <summary>
            An event handler property for pageshow events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.OnPageHide">
            <summary>
            An event handler property for pagehide events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Infinity">
            <summary>
            The global Infinity property is a numeric value representing infinity.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.NaN">
            <summary>
            The global NaN property is a value representing Not-A-Number.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Global.Undefined">
            <summary>
            The global undefined property represents the value undefined.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Global.Eval``1(System.String)">
            <summary>
            The eval() method evaluates JavaScript code represented as a string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression">A string representing a JavaScript expression, statement, or sequence of statements. The expression can include variables and properties of existing objects.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Global.IsFinite(System.Object)">
            <summary>
            The global isFinite() function determines whether the passed value is a finite number. If needed, the parameter is first converted to a number.
            </summary>
            <param name="testValue">The value to be tested for finiteness.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Global.ParseFloat(System.String)">
            <summary>
            Parses a string argument and returns a floating point number corresponding to double .Net type.
            </summary>
            <param name="value">A string that represents the value you want to parse.</param>
            <returns>Parsed floating point number with type corresponding to double .Net type</returns>
        </member>
        <member name="M:Bridge.Html5.Global.ParseInt(System.String)">
            <summary>
            The parseInt() function parses a string argument and returns an integer of the specified radix or base.
            </summary>
            <param name="value">The value to parse. If string is not a string, then it is converted to one. Leading whitespace in the string is ignored.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Global.ParseInt(System.String,System.Int32)">
            <summary>
            The parseInt() function parses a string argument and returns an integer of the specified radix or base.
            </summary>
            <param name="value">The value to parse. If string is not a string, then it is converted to one. Leading whitespace in the string is ignored.</param>
            <param name="radix">An integer that represents the radix of the above mentioned string. Always specify this parameter to eliminate reader confusion and to guarantee predictable behavior. Different implementations produce different results when a radix is not specified.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Global.IsNaN(System.Object)">
            <summary>
            The isNaN() function determines whether a value is NaN or not. Be careful, this function is broken. You may be interested in Number.isNaN() as defined in ECMAScript 6 or you can use typeof to determine if the value is Not-A-Number.
            </summary>
            <param name="testValue">The value to be tested.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Global.DecodeURI(System.String)">
            <summary>
            The decodeURI() function decodes a Uniform Resource Identifier (URI) previously created by encodeURI or by a similar routine.
            </summary>
            <param name="encodedURI">A complete, encoded Uniform Resource Identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Global.DecodeURIComponent(System.String)">
            <summary>
            The decodeURIComponent() method decodes a Uniform Resource Identifier (URI) component previously created by encodeURIComponent or by a similar routine.
            </summary>
            <param name="encodedURI">An encoded component of a Uniform Resource Identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Global.EncodeURI(System.String)">
            <summary>
            The encodeURI() method encodes a Uniform Resource Identifier (URI) by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character (will only be four escape sequences for characters composed of two "surrogate" characters).
            </summary>
            <param name="uri">A complete Uniform Resource Identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Global.EncodeURIComponent(System.String)">
            <summary>
            The encodeURIComponent() method encodes a Uniform Resource Identifier (URI) component by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character (will only be four escape sequences for characters composed of two "surrogate" characters).
            </summary>
            <param name="component">A component of a URI.</param>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.WeakMap">
            <summary>
            HTML5 WeakMap. Keys must be object (primitives and string are not allowed). Values can be any type (inc. primitives)
            <a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/WeakMap">MDN</a>
            </summary>
        </member>
        <member name="M:Bridge.Html5.WeakMap.#ctor">
            <summary>
             Default constructor
            </summary>
        </member>
        <member name="M:Bridge.Html5.WeakMap.#ctor(System.Object[][])">
            <summary>
             Initialize WeakMap using items that are expected to be an array of the two-element-arrays. Each two-element-array is key and value respecively
            Beware that it is not widely implemented (2016-05)
            </summary>
        </member>
        <member name="M:Bridge.Html5.WeakMap.Get``1(``0)">
            <summary>
            gets contained element OR returns null.
            </summary>
        </member>
        <member name="M:Bridge.Html5.WeakMap.Set``1(``0,System.Object)">
            <summary>
            Sets value. Neither key nor value can be null
            </summary>
        </member>
        <member name="M:Bridge.Html5.WeakMap.Delete``1(``0)">
            <summary>
            Deletes element. Returns true if element was contained in the map. Returns false when it wasn't
            </summary>
        </member>
        <member name="M:Bridge.Html5.WeakMap.Has``1(``0)">
            <summary>
            Checks whether element with given key is present in map.
            </summary>
        </member>
        <member name="T:Bridge.Html5.WebSocket">
            <summary>
            The WebSocket interface provides the API for creating and managing a WebSocket connection
            to a server, as well as for sending and receiving data on the connection.
            </summary>
        </member>
        <member name="M:Bridge.Html5.WebSocket.#ctor(System.String)">
            <param name="url">
            The URL to which to connect; this should be the URL to which the WebSocket server will respond.
            </param>
        </member>
        <member name="M:Bridge.Html5.WebSocket.#ctor(System.String,System.String)">
            <param name="url">
            The URL to which to connect; this should be the URL to which the WebSocket server will respond.
            </param>
            <param name="protocol">
            This string is used to indicate sub-protocol, so that a single server
            can implement multiple WebSocket sub-protocols (for example, you might want one server
            to be able to handle different types of interactions depending on the specified protocol).
            </param>
        </member>
        <member name="M:Bridge.Html5.WebSocket.#ctor(System.String,System.String[])">
            <param name="url">
            The URL to which to connect; this should be the URL to which the WebSocket server will respond.
            </param>
            <param name="protocols">
            These strings are used to indicate sub-protocols, so that a single server
            can implement multiple WebSocket sub-protocols (for example, you might want one server
            to be able to handle different types of interactions depending on the specified protocol).
            </param>
        </member>
        <member name="M:Bridge.Html5.WebSocket.Close">
            <summary>
            Closes the WebSocket connection or connection attempt, if any.
            If the connection is already closed, this method does nothing.
            </summary>
        </member>
        <member name="M:Bridge.Html5.WebSocket.Close(Bridge.Html5.CloseEvent.StatusCode)">
            <summary>
            Closes the WebSocket connection or connection attempt, if any.
            If the connection is already closed, this method does nothing.
            </summary>
            <param name="code">
            A numeric value indicating the status code explaining why the connection is being closed.
            </param>
        </member>
        <member name="M:Bridge.Html5.WebSocket.Close(Bridge.Html5.CloseEvent.StatusCode,System.String)">
            <summary>
            Closes the WebSocket connection or connection attempt, if any.
            If the connection is already closed, this method does nothing.
            </summary>
            <param name="code">
            A numeric value indicating the status code explaining why the connection is being closed.
            </param>
            <param name="reason">
            A human-readable string explaining why the connection is closing. This string
            must be no longer than 123 bytes of UTF-8 text (not characters).
            </param>
        </member>
        <member name="M:Bridge.Html5.WebSocket.Send(System.String)">
            <summary>
            Transmits data to the server over the WebSocket connection.
            </summary>
            <param name="data">A text string to send to the server.</param>
        </member>
        <member name="M:Bridge.Html5.WebSocket.Send(Bridge.Html5.Blob)">
            <summary>
            Transmits data to the server over the WebSocket connection.
            </summary>
            <param name="data">A Blob to send to the server.</param>
        </member>
        <member name="M:Bridge.Html5.WebSocket.Send(Bridge.Html5.ArrayBuffer)">
            <summary>
            Transmits data to the server over the WebSocket connection.
            </summary>
            <param name="data">An ArrayBuffer to send to the server.</param>
        </member>
        <member name="F:Bridge.Html5.WebSocket.OnOpen">
            <summary>
            An event handler property for handling socket connection event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WebSocket.OnClose">
            <summary>
            An event handler property for handling socket closing event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WebSocket.OnMessage">
            <summary>
            An event handler property for handling incoming message event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WebSocket.OnError">
            <summary>
            An event handler property for handling socket error event.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WebSocket.ReadyState">
            <summary>
            The current state of the connection.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WebSocket.BinaryType">
            <summary>
            The type of binary data being transmitted by the connection.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WebSocket.BufferedAmount">
            <summary>
            The number of bytes of data that have been queued using calls to Send() but not yet
            transmitted to the network. This value does not reset to zero when the connection is closed;
            if you keep calling Send(), this will continue to climb.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WebSocket.Extensions">
            <summary>
            The extensions selected by the server.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WebSocket.Protocol">
            <summary>
            A string indicating the name of the sub-protocol the server selected;
            this will be one of the strings specified in the protocols parameter of constructor.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WebSocket.Url">
            <summary>
            The URL as resolved by the constructor. This is always an absolute URL.
            </summary>
        </member>
        <member name="T:Bridge.Html5.Window">
            <summary>
            The window object represents a window containing a DOM document; the document property points to the DOM document loaded in that window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Closed">
            <summary>
            This read-only property indicates whether the referenced window is closed or not.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.DialogArguments">
            <summary>
            Gets the arguments passed to the window (if it's a dialog box) at the time window.showModalDialog() was called.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Document">
            <summary>
            Returns a reference to the document that the window contains.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.FrameElement">
            <summary>
            Returns the element (such as &lt;iframe&gt; or &lt;object&gt;) in which the window is embedded, or null if the window is top-level.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Frames">
            <summary>
            Returns the window itself, which is an array-like object, listing the direct sub-frames of the current window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.History">
            <summary>
            Returns a reference to the history objectt, which provides an interface for manipulating the browser session history (pages visited in the tab or frame that the current page is loaded in).
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.InnerHeight">
            <summary>
            Height (in pixels) of the browser window viewport including, if rendered, the horizontal scrollbar.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.InnerWidth">
            <summary>
            Width (in pixels) of the browser window viewport including, if rendered, the vertical scrollbar.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Length">
            <summary>
            Returns the number of frames in the window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Location">
            <summary>
            The Window.location read-only property returns a Location object with information about the current location of the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Locationbar">
            <summary>
            Returns the locationbar object, whose visibility can be checked.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.LocalStorage">
            <summary>
            Returns a reference to the local storage object used to store data that may only be accessed by the origin that created it.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Menubar">
            <summary>
            Returns the menubar object, whose visibility can be toggled in the window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Name">
            <summary>
            Gets/sets the name of the window.
            The name of the window is used primarily for setting targets for hyperlinks and forms. Windows do not need to have names.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Navigator">
            <summary>
            The Window.navigator read-only property returns a reference to the Navigator object, which can be queried for information about the application running the script.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Opener">
            <summary>
            Returns a reference to the window that opened this current window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OuterHeight">
            <summary>
            Gets the height of the outside of the browser window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OuterWidth">
            <summary>
            Gets the width of the outside of the browser window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.PageXOffset">
            <summary>
            An alias for window.scrollX.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.PageYOffset">
            <summary>
            An alias for window.scrollY.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Parent">
            <summary>
            Returns a reference to the parent of the current window or subframe.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Performance">
            <summary>
            Provides a hosting area for performance related attributes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.ReturnValue">
            <summary>
            The return value to be returned to the function that called window.showModalDialog() to display the window as a modal dialog.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Screen">
            <summary>
            Returns a reference to the screen object associated with the window.
            The screen object is a special object for inspecting properties of the screen on which the current window is being rendered.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.ScreenX">
            <summary>
            Returns the horizontal distance of the left border of the user's browser from the left side of the screen.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.ScreenY">
            <summary>
            Returns the vertical distance of the top border of the user's browser from the top side of the screen.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Scrollbars">
            <summary>
            Returns the scrollbars object, whose visibility can be toggled in the window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.ScrollX">
            <summary>
            Returns the number of pixels that the document has already been scrolled horizontally.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.ScrollY">
            <summary>
            Returns the number of pixels that the document has already been scrolled vertically.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Self">
            <summary>
            Returns an object reference to the window object itself.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.SessionStorage">
            <summary>
            A storage object for storing data within a single page session.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Status">
            <summary>
            Gets/sets the text in the statusbar at the bottom of the browser.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Statusbar">
            <summary>
            Returns the statusbar object, whose visibility can be toggled in the window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Top">
            <summary>
            Returns a reference to the topmost window in the window hierarchy. This property is read only.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.WebSocket">
             <summary>
            
             </summary>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(System.String,System.Delegate)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(System.String,System.Action)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(Bridge.Html5.EventType,System.Delegate)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(Bridge.Html5.EventType,System.Action)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(System.String,System.Action{Bridge.Html5.Event})">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event})">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(System.String,System.Delegate,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(System.String,System.Action,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(Bridge.Html5.EventType,System.Delegate,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(Bridge.Html5.EventType,System.Action,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(System.String,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(System.String,Bridge.Html5.IEventListener)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(System.String,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Window.AddEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.Window.Alert">
            <summary>
            The Window.alert() method displays an alert dialog with the optional specified content and an OK button.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Window.Alert(System.String)">
            <summary>
            The Window.alert() method displays an alert dialog with the optional specified content and an OK button.
            </summary>
            <param name="message">message is an optional string of text you want to display in the alert dialog, or, alternatively, an object that is converted into a string and displayed.</param>
        </member>
        <member name="M:Bridge.Html5.Window.Atob(System.String)">
            <summary>
            The Window.atob()decodes a string of data which has been encoded using base-64 encoding. You can use the window.btoa() method to encode and transmit data which may otherwise cause communication problems, then transmit it and use the window.atob() method to decode the data again. For example, you can encode, transmit, and decode control characters such as ASCII values 0 through 31.
            </summary>
            <param name="encodedData">encoded string</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Window.Back">
            <summary>
            Returns the window to the previous item in the history.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Window.Blur">
            <summary>
            Shifts focus away from the window.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Window.Btoa(System.String)">
            <summary>
            Creates a base-64 encoded ASCII string from a "string" of binary data.
            You can use this method to encode data which may otherwise cause communication problems, transmit it, then use the window.atob method to decode the data again. For example, you can encode control characters such as ASCII values 0 through 31.
            </summary>
            <param name="stringToEncode">String to encode</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Window.CancelAnimationFrame(System.Int32)">
            <summary>
            Cancels an animation frame request previously scheduled through a call to window.requestAnimationFrame().
            </summary>
            <param name="requestID">The ID value returned by the call to window.requestAnimationFrame() that requested the callback.</param>
        </member>
        <member name="M:Bridge.Html5.Window.ClearInterval(System.Int32)">
            <summary>
            Cancels repeated action which was set up using setInterval.
            </summary>
            <param name="intervalID">intervalID is the identifier of the repeated action you want to cancel. This ID is returned from setInterval().</param>
        </member>
        <member name="M:Bridge.Html5.Window.ClearTimeout(System.Int32)">
            <summary>
            Clears the delay set by window.setTimeout().
            </summary>
            <param name="timeoutID">timeoutID is the ID of the timeout you wish to clear, as returned by window.setTimeout().</param>
        </member>
        <member name="M:Bridge.Html5.Window.Close">
            <summary>
            Closes the current window, or a referenced window.
            This method is only allowed to be called for windows that were opened by a script using the window.open method. If the window was not opened by a script, the following error appears in the JavaScript Console: Scripts may not close windows that were not opened by script.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Window.Confirm">
            <summary>
            The Window.confirm() method displays a modal dialog with an optional message and two buttons, OK and Cancel.
            </summary>
            <returns>result is a boolean value indicating whether OK or Cancel was selected (true means OK).</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Confirm(System.String)">
            <summary>
            The Window.confirm() method displays a modal dialog with an optional message and two buttons, OK and Cancel.
            </summary>
            <param name="message">message is the optional string to be displayed in the dialog.</param>
            <returns>result is a boolean value indicating whether OK or Cancel was selected (true means OK).</returns>
        </member>
        <member name="M:Bridge.Html5.Window.DispatchEvent(Bridge.Html5.Event)">
            <summary>
            Dispatches the specified event to the current element.
            To create an event object use the createEvent method in Firefox, Opera, Google Chrome, Safari and Internet Explorer from version 9. After the new event is created, initialize it first (for details, see the page for the createEvent method). When the event is initialized, it is ready for dispatching.
            </summary>
            <param name="e">Required. Reference to an event object to be dispatched.</param>
            <returns>Boolean that indicates whether the default action of the event was not canceled.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Dump(System.String)">
            <summary>
            Prints messages to the (native) console.
            </summary>
            <param name="message">message is the string message to log.</param>
        </member>
        <member name="M:Bridge.Html5.Window.Find(System.String)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Find(System.String,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">Boolean value. If true, specifies a case-sensitive search.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Find(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">Boolean value. If true, specifies a case-sensitive search.</param>
            <param name="backwards">Boolean. If true, specifies a backward search.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Find(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">Boolean value. If true, specifies a case-sensitive search.</param>
            <param name="backwards">Boolean. If true, specifies a backward search.</param>
            <param name="wrapAround">Boolean. If true, specifies a wrap around search.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Find(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">The text string for which to search.</param>
            <param name="backwards">Boolean. If true, specifies a backward search.</param>
            <param name="wrapAround">Boolean. If true, specifies a wrap around search.</param>
            <param name="wholeWord">Boolean. If true, specifies a whole word search. </param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Find(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">Boolean value. If true, specifies a case-sensitive search.</param>
            <param name="backwards">Boolean. If true, specifies a backward search.</param>
            <param name="wrapAround">Boolean. If true, specifies a wrap around search.</param>
            <param name="wholeWord">Boolean. If true, specifies a whole word search. </param>
            <param name="searchInFrames">Boolean. If true, specifies a search in frames.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Find(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">Boolean value. If true, specifies a case-sensitive search.</param>
            <param name="backwards">Boolean. If true, specifies a backward search.</param>
            <param name="wrapAround">Boolean. If true, specifies a wrap around search.</param>
            <param name="wholeWord">Boolean. If true, specifies a whole word search. </param>
            <param name="searchInFrames">Boolean. If true, specifies a search in frames.</param>
            <param name="showDialog">Boolean. If true, specifies a show Dialog.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Focus">
            <summary>
            Makes a request to bring the window to the front. It may fail due to user settings and the window isn't guaranteed to be frontmost before this method returns.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Window.Forward">
            <summary>
            Moves the window one document forward in the history.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Window.GetComputedStyle(Bridge.Html5.HTMLElement)">
            <summary>
            The Window.getComputedStyle() method gives the values of all the CSS properties of an element after applying the active stylesheets and resolving any basic computation those values may contain
            </summary>
            <param name="el">The Element for which to get the computed style.</param>
            <returns>The returned style is a CSSStyleDeclaration object.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.GetComputedStyle(Bridge.Html5.HTMLElement,System.String)">
            <summary>
            The Window.getComputedStyle() method gives the values of all the CSS properties of an element after applying the active stylesheets and resolving any basic computation those values may contain
            </summary>
            <param name="el">The Element for which to get the computed style.</param>
            <param name="pseudoElt">A string specifying the pseudo-element to match. Must be omitted (or null) for regular elements.</param>
            <returns>The returned style is a CSSStyleDeclaration object.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.GetDefaultComputedStyle(Bridge.Html5.HTMLElement)">
            <summary>
            getDefaultComputedStyle() gives the default computed values of all the CSS properties of an element, ignoring author styling.  That is, only user-agent and user styles are taken into account.
            </summary>
            <param name="el">The Element for which to get the computed style.</param>
            <returns>The returned style is a CSSStyleDeclaration object.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.GetDefaultComputedStyle(Bridge.Html5.HTMLElement,System.String)">
            <summary>
            getDefaultComputedStyle() gives the default computed values of all the CSS properties of an element, ignoring author styling.  That is, only user-agent and user styles are taken into account.
            </summary>
            <param name="el">The Element for which to get the computed style.</param>
            <param name="pseudoElt">A string specifying the pseudo-element to match. Must be null (or not specified) for regular elements.</param>
            <returns>The returned style is a CSSStyleDeclaration object.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.GetSelection">
            <summary>
            Returns a selection object representing the range of text selected by the user.
            </summary>
            <returns>selection is a Selection object. When cast to string, either by adding empty quotes "" or using .toString, this object is the text selected.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Home">
            <summary>
            Returns the window to the home page.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Window.MatchMedia(System.String)">
            <summary>
            Returns a new MediaQueryList object representing the parsed results of the specified media query string.
            </summary>
            <param name="mediaQueryString">string representing the media query for which to return a new MediaQueryList object.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Window.MoveBy(System.Int32,System.Int32)">
            <summary>
            Moves the current window by a specified amount.
            </summary>
            <param name="deltaX">the amount of pixels to move the window horizontally.</param>
            <param name="deltaY">the amount of pixels to move the window vertically.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RequestAnimationFrame(System.Delegate)">
            <summary>
            The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser call a specified function to update an animation before the next repaint. The method takes as an argument a callback to be invoked before the repaint.
            </summary>
            <param name="callback">A parameter specifying a function to call when it's time to update your animation for the next repaint. The callback has one single argument, a DOMHighResTimeStamp, which indicates the current time for when requestAnimationFrame starts to fire callbacks.</param>
            <returns>requestID is an integer value that uniquely identifies the entry in the callback list. This is a non-zero value, but you may not make any other assumptions about its value. You can pass this value to window.cancelAnimationFrame() to cancel the refresh callback request.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.RequestAnimationFrame(System.Action{System.Double})">
            <summary>
            The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser call a specified function to update an animation before the next repaint. The method takes as an argument a callback to be invoked before the repaint.
            </summary>
            <param name="callback">A parameter specifying a function to call when it's time to update your animation for the next repaint. The callback has one single argument, a DOMHighResTimeStamp, which indicates the current time for when requestAnimationFrame starts to fire callbacks.</param>
            <returns>requestID is an integer value that uniquely identifies the entry in the callback list. This is a non-zero value, but you may not make any other assumptions about its value. You can pass this value to window.cancelAnimationFrame() to cancel the refresh callback request.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.RequestAnimationFrame(System.Action)">
            <summary>
            The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser call a specified function to update an animation before the next repaint. The method takes as an argument a callback to be invoked before the repaint.
            </summary>
            <param name="callback">A parameter specifying a function to call when it's time to update your animation for the next repaint. The callback has one single argument, a DOMHighResTimeStamp, which indicates the current time for when requestAnimationFrame starts to fire callbacks.</param>
            <returns>requestID is a int integer value that uniquely identifies the entry in the callback list. This is a non-zero value, but you may not make any other assumptions about its value. You can pass this value to window.cancelAnimationFrame() to cancel the refresh callback request.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Open">
            <summary>
            The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.
            </summary>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Open(System.String)">
            <summary>
            The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Open(System.String,System.String)">
            <summary>
            The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <param name="name">A string name for the new window. The name can be used as the target of links and forms using the target attribute of an &lt;a&gt; or &lt;form&gt; element. The name should not contain any blank space. Note that strWindowName does not specify the title of the new window.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Open(System.String,System.String,System.String)">
            <summary>
            The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <param name="name">A string name for the new window. The name can be used as the target of links and forms using the target attribute of an &lt;a&gt; or &lt;form&gt; element. The name should not contain any blank space. Note that strWindowName does not specify the title of the new window.</param>
            <param name="features">Optional parameter listing the features (size, position, scrollbars, etc.) of the new window. The string must not contain any blank space, each feature name and value must be separated by a comma.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.OpenDialog">
            <summary>
            window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently.
            </summary>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.OpenDialog(System.String)">
            <summary>
            window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.OpenDialog(System.String,System.String)">
            <summary>
            window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <param name="name">A string name for the new window. The name can be used as the target of links and forms using the target attribute of an &lt;a&gt; or &lt;form&gt; element. The name should not contain any blank space. Note that strWindowName does not specify the title of the new window.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.OpenDialog(System.String,System.String,System.String)">
            <summary>
            window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <param name="name">A string name for the new window. The name can be used as the target of links and forms using the target attribute of an &lt;a&gt; or &lt;form&gt; element. The name should not contain any blank space. Note that strWindowName does not specify the title of the new window.</param>
            <param name="features">Optional parameter listing the features (size, position, scrollbars, etc.) of the new window. The string must not contain any blank space, each feature name and value must be separated by a comma.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.OpenDialog(System.String,System.String,System.String,System.Object[])">
            <summary>
            window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <param name="name">A string name for the new window. The name can be used as the target of links and forms using the target attribute of an &lt;a&gt; or &lt;form&gt; element. The name should not contain any blank space. Note that strWindowName does not specify the title of the new window.</param>
            <param name="features">Optional parameter listing the features (size, position, scrollbars, etc.) of the new window. The string must not contain any blank space, each feature name and value must be separated by a comma.</param>
            <param name="args">The arguments to be passed to the new window (optional).</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.PostMessage(System.Object,System.String)">
            <summary>
            The window.postMessage method safely enables cross-origin communication.
            </summary>
            <param name="message">Data to be sent to the other window.</param>
            <param name="targetOrigin">Specifies what the origin of otherWindow must be for the event to be dispatched, either as the literal string "*" (indicating no preference) or as a URI.</param>
        </member>
        <member name="M:Bridge.Html5.Window.PostMessage(System.Object,System.String,System.Object[])">
            <summary>
            The window.postMessage method safely enables cross-origin communication.
            </summary>
            <param name="message">Data to be sent to the other window.</param>
            <param name="targetOrigin">Specifies what the origin of otherWindow must be for the event to be dispatched, either as the literal string "*" (indicating no preference) or as a URI.</param>
            <param name="transfer">Is a sequence of Transferable objects that are transferred with the message.</param>
        </member>
        <member name="M:Bridge.Html5.Window.Print">
            <summary>
            Opens the Print Dialog to print the current document.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Window.Prompt">
            <summary>
            The Window.prompt() displays a dialog with an optional message prompting the user to input some text.
            </summary>
            <returns>string containing the text entered by the user, or the value null.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Prompt(System.String)">
            <summary>
            The Window.prompt() displays a dialog with an optional message prompting the user to input some text.
            </summary>
            <param name="message">string of text to display to the user. This parameter is optional and can be omitted if there is nothing to show in the prompt window.</param>
            <returns>string containing the text entered by the user, or the value null.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.Prompt(System.String,System.String)">
            <summary>
            The Window.prompt() displays a dialog with an optional message prompting the user to input some text.
            </summary>
            <param name="message">string of text to display to the user. This parameter is optional and can be omitted if there is nothing to show in the prompt window.</param>
            <param name="value">string containing the default value displayed in the text input field. It is an optional parameter. Note that in Internet Explorer 7 and 8, if you do not provide this parameter, the string "undefined" is the default value.</param>
            <returns>string containing the text entered by the user, or the value null.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(System.String,Bridge.Html5.IEventListener)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(System.String,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(Bridge.Html5.EventType,System.Delegate)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(Bridge.Html5.EventType,System.Action)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(Bridge.Html5.EventType,System.Delegate,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(Bridge.Html5.EventType,System.Action,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(System.String,System.Delegate)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(System.String,System.Action)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(System.String,System.Delegate,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(System.String,System.Action,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event})">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(System.String,System.Action{Bridge.Html5.Event})">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.Window.RemoveEventListener(System.String,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.Window.ResizeBy(System.Int32,System.Int32)">
            <summary>
            Resizes the current window by a certain amount.
            </summary>
            <param name="xDelta">the number of pixels to grow the window horizontally.</param>
            <param name="yDelta">the number of pixels to grow the window vertically.</param>
        </member>
        <member name="M:Bridge.Html5.Window.ResizeTo(System.Int32,System.Int32)">
            <summary>
            Dynamically resizes window.
            </summary>
            <param name="width">integer representing the new outerWidth in pixels (including scroll bars, title bars, etc).</param>
            <param name="height">integer value representing the new outerHeight in pixels (including scroll bars, title bars, etc).</param>
        </member>
        <member name="M:Bridge.Html5.Window.Scroll(System.Int32,System.Int32)">
            <summary>
            Scrolls the window to a particular place in the document.
            </summary>
            <param name="xcoord">the pixel along the horizontal axis of the document that you want displayed in the upper left.</param>
            <param name="ycoord">the pixel along the vertical axis of the document that you want displayed in the upper left.</param>
        </member>
        <member name="M:Bridge.Html5.Window.ScrollBy(System.Int32,System.Int32)">
            <summary>
            Scrolls the document in the window by the given amount.
            </summary>
            <param name="x">X is the offset in pixels to scroll horizontally.</param>
            <param name="y">Y is the offset in pixels to scroll vertically.</param>
        </member>
        <member name="M:Bridge.Html5.Window.ScrollByLines(System.Int32)">
            <summary>
            Scrolls the document by the given number of lines.
            </summary>
            <param name="lines">the number of lines to scroll the document by.</param>
        </member>
        <member name="M:Bridge.Html5.Window.ScrollByPages(System.Int32)">
            <summary>
            Scrolls the current document by the specified number of pages.
            </summary>
            <param name="pages">the number of pages to scroll.</param>
        </member>
        <member name="M:Bridge.Html5.Window.ScrollTo(System.Int32,System.Int32)">
            <summary>
            Scrolls to a particular set of coordinates in the document.
            </summary>
            <param name="x">the pixel along the horizontal axis of the document that you want displayed in the upper left.</param>
            <param name="y">the pixel along the vertical axis of the document that you want displayed in the upper left.</param>
        </member>
        <member name="M:Bridge.Html5.Window.SetInterval(System.Action)">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.Window.SetInterval(System.Action,System.Int32)">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.Window.SetInterval(System.Action,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <param name="arguments"></param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.Window.SetInterval(System.String)">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.Window.SetInterval(System.String,System.Int32)">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.Window.SetInterval(System.String,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <param name="arguments"></param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.Window.SetInterval(System.Delegate,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <param name="arguments"></param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.Window.SetTimeout(System.Action)">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.Window.SetTimeout(System.Action,System.Int32)">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.Window.SetTimeout(System.Action,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <param name="arguments"></param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.Window.SetTimeout(System.String)">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.Window.SetTimeout(System.String,System.Int32)">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.Window.SetTimeout(System.String,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <param name="arguments"></param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.Window.SetTimeout(System.Delegate,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <param name="arguments"></param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.Window.ShowModalDialog(System.String)">
            <summary>
            The Window.showModalDialog() creates and displays a modal dialog box containing a specified HTML document.
            </summary>
            <param name="uri"> the URI of the document to display in the dialog box.</param>
            <returns> a variant, indicating the returnValue property as set by the window of the document specified by uri.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.ShowModalDialog(System.String,System.Object)">
            <summary>
            The Window.showModalDialog() creates and displays a modal dialog box containing a specified HTML document.
            </summary>
            <param name="uri"> the URI of the document to display in the dialog box.</param>
            <param name="arguments">an optional variant that contains values that should be passed to the dialog box; these are made available in the window object's window.dialogArguments property.</param>
            <returns> a variant, indicating the returnValue property as set by the window of the document specified by uri.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.ShowModalDialog(System.String,System.Object,System.String)">
            <summary>
            The Window.showModalDialog() creates and displays a modal dialog box containing a specified HTML document.
            </summary>
            <param name="uri"> the URI of the document to display in the dialog box.</param>
            <param name="arguments">an optional variant that contains values that should be passed to the dialog box; these are made available in the window object's window.dialogArguments property.</param>
            <param name="options">an optional string that specifies window ornamentation for the dialog box, using one or more semicolon delimited values:</param>
            <returns> a variant, indicating the returnValue property as set by the window of the document specified by uri.</returns>
        </member>
        <member name="M:Bridge.Html5.Window.SizeToContent">
            <summary>
            Sizes the window according to its content.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Window.Stop">
            <summary>
            This method stops window loading.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Window.UpdateCommands(System.String)">
            <summary>
            Updates the state of commands of the current chrome window (UI).
            </summary>
            <param name="commandName">a particular string which describes what kind of update event this is (e.g. whether we are in bold right now).</param>
        </member>
        <member name="F:Bridge.Html5.Window.OnAbort">
            <summary>
            An event handler property for abort events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnBeforeUnload">
            <summary>
            An event handler property for before-unload events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnBlur">
            <summary>
            An event handler property for blur events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnChange">
            <summary>
            An event handler property for change events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnClick">
            <summary>
            An event handler property for click events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnClose">
            <summary>
            An event handler property for handling the window close event
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnContextMenu">
            <summary>
            An event handler property for right-click events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnDeviceLight">
            <summary>
            An event handler property for any ambient light levels changes
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnDeviceMotion">
            <summary>
            FIXME: NeedsContents
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnDeviceOrientation">
            <summary>
            An event handler property for any device orientation changes
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnDeviceProximity">
            <summary>
            An event handler property for device proximity event
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnDragDrop">
            <summary>
            An event handler property for drag and drop events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnError">
            <summary>
            An event handler property for errors raised on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnFocus">
            <summary>
            An event handler property for focus events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnHashChange">
            <summary>
            An event handler property for hash change events on the window; called when the part of the URL after the hash mark ("#") changes
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnKeyDown">
            <summary>
            An event handler property for keydown events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnKeyPress">
            <summary>
            An event handler property for keypress events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnKeyUp">
            <summary>
            An event handler property for keyup events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnLoad">
            <summary>
            An event handler property for window loading
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnMouseDown">
            <summary>
            An event handler property for mousedown events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnMouseMove">
            <summary>
            An event handler property for mousemove events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnMouseOut">
            <summary>
            An event handler property for mouseout events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnMouseOver">
            <summary>
            An event handler property for mouseover events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnMouseUp">
            <summary>
            An event handler property for mouseup events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnPaint">
            <summary>
            An event handler property for paint events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnPopState">
            <summary>
            An event handler property for popstate events, which are fired when navigating to a session history entry representing a state object
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnReset">
            <summary>
            An event handler property for reset events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnResize">
            <summary>
            An event handler property for window resizing
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnScroll">
            <summary>
            An event handler property for window scrolling
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnSelect">
            <summary>
            An event handler property for window selection
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnSubmit">
            <summary>
            An event handler property for submits on window forms
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnUnload">
            <summary>
            An event handler property for unload events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnUserProximity">
            <summary>
            An event handler property for user proximity events
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnPageShow">
            <summary>
            An event handler property for pageshow events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.OnPageHide">
            <summary>
            An event handler property for pagehide events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Infinity">
            <summary>
            The global Infinity property is a numeric value representing infinity.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.NaN">
            <summary>
            The global NaN property is a value representing Not-A-Number.
            </summary>
        </member>
        <member name="F:Bridge.Html5.Window.Undefined">
            <summary>
            The global undefined property represents the value undefined.
            </summary>
        </member>
        <member name="M:Bridge.Html5.Window.Eval``1(System.String)">
            <summary>
            The eval() method evaluates JavaScript code represented as a string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression">A string representing a JavaScript expression, statement, or sequence of statements. The expression can include variables and properties of existing objects.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Window.IsFinite(System.Object)">
            <summary>
            The global isFinite() function determines whether the passed value is a finite number. If needed, the parameter is first converted to a number.
            </summary>
            <param name="testValue">The value to be tested for finiteness.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Window.ParseFloat(System.String)">
            <summary>
            Parses a string argument and returns a floating point number corresponding to double .Net type.
            </summary>
            <param name="value">A string that represents the value you want to parse.</param>
            <returns>Parsed floating point number with type corresponding to double .Net type</returns>
        </member>
        <member name="M:Bridge.Html5.Window.ParseInt(System.String)">
            <summary>
            The parseInt() function parses a string argument and returns an integer of the specified radix or base.
            </summary>
            <param name="value">The value to parse. If string is not a string, then it is converted to one. Leading whitespace in the string is ignored.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Window.ParseInt(System.String,System.Int32)">
            <summary>
            The parseInt() function parses a string argument and returns an integer of the specified radix or base.
            </summary>
            <param name="value">The value to parse. If string is not a string, then it is converted to one. Leading whitespace in the string is ignored.</param>
            <param name="radix">An integer that represents the radix of the above mentioned string. Always specify this parameter to eliminate reader confusion and to guarantee predictable behavior. Different implementations produce different results when a radix is not specified.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Window.IsNaN(System.Object)">
            <summary>
            The isNaN() function determines whether a value is NaN or not. Be careful, this function is broken. You may be interested in Number.isNaN() as defined in ECMAScript 6 or you can use typeof to determine if the value is Not-A-Number.
            </summary>
            <param name="testValue">The value to be tested.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Window.DecodeURI(System.String)">
            <summary>
            The decodeURI() function decodes a Uniform Resource Identifier (URI) previously created by encodeURI or by a similar routine.
            </summary>
            <param name="encodedURI">A complete, encoded Uniform Resource Identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Window.DecodeURIComponent(System.String)">
            <summary>
            The decodeURIComponent() method decodes a Uniform Resource Identifier (URI) component previously created by encodeURIComponent or by a similar routine.
            </summary>
            <param name="encodedURI">An encoded component of a Uniform Resource Identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Window.EncodeURI(System.String)">
            <summary>
            The encodeURI() method encodes a Uniform Resource Identifier (URI) by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character (will only be four escape sequences for characters composed of two "surrogate" characters).
            </summary>
            <param name="uri">A complete Uniform Resource Identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.Window.EncodeURIComponent(System.String)">
            <summary>
            The encodeURIComponent() method encodes a Uniform Resource Identifier (URI) component by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character (will only be four escape sequences for characters composed of two "surrogate" characters).
            </summary>
            <param name="component">A component of a URI.</param>
            <returns></returns>
        </member>
        <member name="T:Bridge.Html5.WindowInstance">
            <summary>
            The window object represents a window containing a DOM document; the document property points to the DOM document loaded in that window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Closed">
            <summary>
            This read-only property indicates whether the referenced window is closed or not.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.DialogArguments">
            <summary>
            Gets the arguments passed to the window (if it's a dialog box) at the time window.showModalDialog() was called.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Document">
            <summary>
            Returns a reference to the document that the window contains.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.FrameElement">
            <summary>
            Returns the element (such as &lt;iframe&gt; or &lt;object&gt;) in which the window is embedded, or null if the window is top-level.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Frames">
            <summary>
            Returns the window itself, which is an array-like object, listing the direct sub-frames of the current window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.History">
            <summary>
            Returns a reference to the history objectt, which provides an interface for manipulating the browser session history (pages visited in the tab or frame that the current page is loaded in).
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.InnerHeight">
            <summary>
            Height (in pixels) of the browser window viewport including, if rendered, the horizontal scrollbar.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.InnerWidth">
            <summary>
            Width (in pixels) of the browser window viewport including, if rendered, the vertical scrollbar.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Length">
            <summary>
            Returns the number of frames in the window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Location">
            <summary>
            The Window.location read-only property returns a Location object with information about the current location of the document.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Locationbar">
            <summary>
            Returns the locationbar object, whose visibility can be checked.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.LocalStorage">
            <summary>
            Returns a reference to the local storage object used to store data that may only be accessed by the origin that created it.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Menubar">
            <summary>
            Returns the menubar object, whose visibility can be toggled in the window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Name">
            <summary>
            Gets/sets the name of the window.
            The name of the window is used primarily for setting targets for hyperlinks and forms. Windows do not need to have names.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Navigator">
            <summary>
            The Window.navigator read-only property returns a reference to the Navigator object, which can be queried for information about the application running the script.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Opener">
            <summary>
            Returns a reference to the window that opened this current window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OuterHeight">
            <summary>
            Gets the height of the outside of the browser window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OuterWidth">
            <summary>
            Gets the width of the outside of the browser window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.PageXOffset">
            <summary>
            An alias for window.scrollX.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.PageYOffset">
            <summary>
            An alias for window.scrollY.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Parent">
            <summary>
            Returns a reference to the parent of the current window or subframe.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Performance">
            <summary>
            Provides a hosting area for performance related attributes.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.ReturnValue">
            <summary>
            The return value to be returned to the function that called window.showModalDialog() to display the window as a modal dialog.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Screen">
            <summary>
            Returns a reference to the screen object associated with the window.
            The screen object is a special object for inspecting properties of the screen on which the current window is being rendered.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.ScreenX">
            <summary>
            Returns the horizontal distance of the left border of the user's browser from the left side of the screen.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.ScreenY">
            <summary>
            Returns the vertical distance of the top border of the user's browser from the top side of the screen.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Scrollbars">
            <summary>
            Returns the scrollbars object, whose visibility can be toggled in the window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.ScrollX">
            <summary>
            Returns the number of pixels that the document has already been scrolled horizontally.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.ScrollY">
            <summary>
            Returns the number of pixels that the document has already been scrolled vertically.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Self">
            <summary>
            Returns an object reference to the window object itself.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.SessionStorage">
            <summary>
            A storage object for storing data within a single page session.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Status">
            <summary>
            Gets/sets the text in the statusbar at the bottom of the browser.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Statusbar">
            <summary>
            Returns the statusbar object, whose visibility can be toggled in the window.
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.Top">
            <summary>
            Returns a reference to the topmost window in the window hierarchy. This property is read only.
            </summary>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(System.String,System.Delegate)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(System.String,System.Action)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(Bridge.Html5.EventType,System.Delegate)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(Bridge.Html5.EventType,System.Action)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(System.String,System.Action{Bridge.Html5.Event})">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event})">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(System.String,System.Delegate,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(System.String,System.Action,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(Bridge.Html5.EventType,System.Delegate,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(Bridge.Html5.EventType,System.Action,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(System.String,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(System.String,Bridge.Html5.IEventListener)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(System.String,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.AddEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            The method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events.
            </summary>
            <param name="type">A string representing the event type to listen for.</param>
            <param name="listener">The object that receives a notification when an event of the specified type occurs. This must be an object implementing the EventListener interface, or simply a JavaScript function.</param>
            <param name="useCapture"></param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Alert(System.String)">
            <summary>
            The Window.alert() method displays an alert dialog with the optional specified content and an OK button.
            </summary>
            <param name="message">message is an optional string of text you want to display in the alert dialog, or, alternatively, an object that is converted into a string and displayed.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Atob(System.String)">
            <summary>
            The Window.atob()decodes a string of data which has been encoded using base-64 encoding. You can use the window.btoa() method to encode and transmit data which may otherwise cause communication problems, then transmit it and use the window.atob() method to decode the data again. For example, you can encode, transmit, and decode control characters such as ASCII values 0 through 31.
            </summary>
            <param name="encodedData">encoded string</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Back">
            <summary>
            Returns the window to the previous item in the history.
            </summary>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Blur">
            <summary>
            Shifts focus away from the window.
            </summary>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Btoa(System.String)">
            <summary>
            Creates a base-64 encoded ASCII string from a "string" of binary data.
            You can use this method to encode data which may otherwise cause communication problems, transmit it, then use the window.atob method to decode the data again. For example, you can encode control characters such as ASCII values 0 through 31.
            </summary>
            <param name="stringToEncode">String to encode</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.CancelAnimationFrame(System.Int32)">
            <summary>
            Cancels an animation frame request previously scheduled through a call to window.requestAnimationFrame().
            </summary>
            <param name="requestID">The ID value returned by the call to window.requestAnimationFrame() that requested the callback.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.ClearInterval(System.Int32)">
            <summary>
            Cancels repeated action which was set up using setInterval.
            </summary>
            <param name="intervalID">intervalID is the identifier of the repeated action you want to cancel. This ID is returned from setInterval().</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.ClearTimeout(System.Int32)">
            <summary>
            Clears the delay set by window.setTimeout().
            </summary>
            <param name="timeoutID">timeoutID is the ID of the timeout you wish to clear, as returned by window.setTimeout().</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Close">
            <summary>
            Closes the current window, or a referenced window.
            This method is only allowed to be called for windows that were opened by a script using the window.open method. If the window was not opened by a script, the following error appears in the JavaScript Console: Scripts may not close windows that were not opened by script.
            </summary>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Confirm(System.String)">
            <summary>
            The Window.confirm() method displays a modal dialog with an optional message and two buttons, OK and Cancel.
            </summary>
            <param name="message">message is the optional string to be displayed in the dialog.</param>
            <returns>result is a boolean value indicating whether OK or Cancel was selected (true means OK).</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Confirm">
            <summary>
            The Window.confirm() method displays a modal dialog with an optional message and two buttons, OK and Cancel.
            </summary>
            <returns>result is a boolean value indicating whether OK or Cancel was selected (true means OK).</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.DispatchEvent(Bridge.Html5.Event)">
            <summary>
            Dispatches the specified event to the current element.
            To create an event object use the createEvent method in Firefox, Opera, Google Chrome, Safari and Internet Explorer from version 9. After the new event is created, initialize it first (for details, see the page for the createEvent method). When the event is initialized, it is ready for dispatching.
            </summary>
            <param name="e">Required. Reference to an event object to be dispatched.</param>
            <returns>Boolean that indicates whether the default action of the event was not canceled.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Dump(System.String)">
            <summary>
            Prints messages to the (native) console.
            </summary>
            <param name="message">message is the string message to log.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Find(System.String)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Find(System.String,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">Boolean value. If true, specifies a case-sensitive search.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Find(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">Boolean value. If true, specifies a case-sensitive search.</param>
            <param name="backwards">Boolean. If true, specifies a backward search.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Find(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">Boolean value. If true, specifies a case-sensitive search.</param>
            <param name="backwards">Boolean. If true, specifies a backward search.</param>
            <param name="wrapAround">Boolean. If true, specifies a wrap around search.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Find(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">The text string for which to search.</param>
            <param name="backwards">Boolean. If true, specifies a backward search.</param>
            <param name="wrapAround">Boolean. If true, specifies a wrap around search.</param>
            <param name="wholeWord">Boolean. If true, specifies a whole word search. </param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Find(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">Boolean value. If true, specifies a case-sensitive search.</param>
            <param name="backwards">Boolean. If true, specifies a backward search.</param>
            <param name="wrapAround">Boolean. If true, specifies a wrap around search.</param>
            <param name="wholeWord">Boolean. If true, specifies a whole word search. </param>
            <param name="searchInFrames">Boolean. If true, specifies a search in frames.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Find(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Finds a string in a window.
            </summary>
            <param name="str">The text string for which to search.</param>
            <param name="caseSensitive">Boolean value. If true, specifies a case-sensitive search.</param>
            <param name="backwards">Boolean. If true, specifies a backward search.</param>
            <param name="wrapAround">Boolean. If true, specifies a wrap around search.</param>
            <param name="wholeWord">Boolean. If true, specifies a whole word search. </param>
            <param name="searchInFrames">Boolean. If true, specifies a search in frames.</param>
            <param name="showDialog">Boolean. If true, specifies a show Dialog.</param>
            <returns>true if the string is found; otherwise, false.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Focus">
            <summary>
            Makes a request to bring the window to the front. It may fail due to user settings and the window isn't guaranteed to be frontmost before this method returns.
            </summary>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Forward">
            <summary>
            Moves the window one document forward in the history.
            </summary>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.GetComputedStyle(Bridge.Html5.HTMLElement)">
            <summary>
            The Window.getComputedStyle() method gives the values of all the CSS properties of an element after applying the active stylesheets and resolving any basic computation those values may contain
            </summary>
            <param name="el">The Element for which to get the computed style.</param>
            <returns>The returned style is a CSSStyleDeclaration object.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.GetComputedStyle(Bridge.Html5.HTMLElement,System.String)">
            <summary>
            The Window.getComputedStyle() method gives the values of all the CSS properties of an element after applying the active stylesheets and resolving any basic computation those values may contain
            </summary>
            <param name="el">The Element for which to get the computed style.</param>
            <param name="pseudoElt">A string specifying the pseudo-element to match. Must be omitted (or null) for regular elements.</param>
            <returns>The returned style is a CSSStyleDeclaration object.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.GetDefaultComputedStyle(Bridge.Html5.HTMLElement)">
            <summary>
            getDefaultComputedStyle() gives the default computed values of all the CSS properties of an element, ignoring author styling.  That is, only user-agent and user styles are taken into account.
            </summary>
            <param name="el">The Element for which to get the computed style.</param>
            <returns>The returned style is a CSSStyleDeclaration object.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.GetDefaultComputedStyle(Bridge.Html5.HTMLElement,System.String)">
            <summary>
            getDefaultComputedStyle() gives the default computed values of all the CSS properties of an element, ignoring author styling.  That is, only user-agent and user styles are taken into account.
            </summary>
            <param name="el">The Element for which to get the computed style.</param>
            <param name="pseudoElt">A string specifying the pseudo-element to match. Must be null (or not specified) for regular elements.</param>
            <returns>The returned style is a CSSStyleDeclaration object.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.GetSelection">
            <summary>
            Returns a selection object representing the range of text selected by the user.
            </summary>
            <returns>selection is a Selection object. When cast to string, either by adding empty quotes "" or using .toString, this object is the text selected.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Home">
            <summary>
            Returns the window to the home page.
            </summary>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.MatchMedia(System.String)">
            <summary>
            Returns a new MediaQueryList object representing the parsed results of the specified media query string.
            </summary>
            <param name="mediaQueryString">string representing the media query for which to return a new MediaQueryList object.</param>
            <returns></returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.MoveBy(System.Int32,System.Int32)">
            <summary>
            Moves the current window by a specified amount.
            </summary>
            <param name="deltaX">the amount of pixels to move the window horizontally.</param>
            <param name="deltaY">the amount of pixels to move the window vertically.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RequestAnimationFrame(System.Delegate)">
            <summary>
            The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser call a specified function to update an animation before the next repaint. The method takes as an argument a callback to be invoked before the repaint.
            </summary>
            <param name="callback">A parameter specifying a function to call when it's time to update your animation for the next repaint. The callback has one single argument, a DOMHighResTimeStamp, which indicates the current time for when requestAnimationFrame starts to fire callbacks.</param>
            <returns>requestID is a long integer value that uniquely identifies the entry in the callback list. This is a non-zero value, but you may not make any other assumptions about its value. You can pass this value to window.cancelAnimationFrame() to cancel the refresh callback request.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RequestAnimationFrame(System.Action{System.Double})">
            <summary>
            The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser call a specified function to update an animation before the next repaint. The method takes as an argument a callback to be invoked before the repaint.
            </summary>
            <param name="callback">A parameter specifying a function to call when it's time to update your animation for the next repaint. The callback has one single argument, a DOMHighResTimeStamp, which indicates the current time for when requestAnimationFrame starts to fire callbacks.</param>
            <returns>requestID is a long integer value that uniquely identifies the entry in the callback list. This is a non-zero value, but you may not make any other assumptions about its value. You can pass this value to window.cancelAnimationFrame() to cancel the refresh callback request.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Open">
            <summary>
            The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.
            </summary>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Open(System.String)">
            <summary>
            The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Open(System.String,System.String)">
            <summary>
            The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <param name="name">A string name for the new window. The name can be used as the target of links and forms using the target attribute of an &lt;a&gt; or &lt;form&gt; element. The name should not contain any blank space. Note that strWindowName does not specify the title of the new window.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Open(System.String,System.String,System.String)">
            <summary>
            The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <param name="name">A string name for the new window. The name can be used as the target of links and forms using the target attribute of an &lt;a&gt; or &lt;form&gt; element. The name should not contain any blank space. Note that strWindowName does not specify the title of the new window.</param>
            <param name="features">Optional parameter listing the features (size, position, scrollbars, etc.) of the new window. The string must not contain any blank space, each feature name and value must be separated by a comma.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.OpenDialog">
            <summary>
            window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently.
            </summary>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.OpenDialog(System.String)">
            <summary>
            window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.OpenDialog(System.String,System.String)">
            <summary>
            window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <param name="name">A string name for the new window. The name can be used as the target of links and forms using the target attribute of an &lt;a&gt; or &lt;form&gt; element. The name should not contain any blank space. Note that strWindowName does not specify the title of the new window.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.OpenDialog(System.String,System.String,System.String)">
            <summary>
            window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <param name="name">A string name for the new window. The name can be used as the target of links and forms using the target attribute of an &lt;a&gt; or &lt;form&gt; element. The name should not contain any blank space. Note that strWindowName does not specify the title of the new window.</param>
            <param name="features">Optional parameter listing the features (size, position, scrollbars, etc.) of the new window. The string must not contain any blank space, each feature name and value must be separated by a comma.</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.OpenDialog(System.String,System.String,System.String,System.Object[])">
            <summary>
            window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently.
            </summary>
            <param name="url">The URL to be loaded in the newly opened window. strUrl can be an HTML document on the web, image file or any resource supported by the browser.</param>
            <param name="name">A string name for the new window. The name can be used as the target of links and forms using the target attribute of an &lt;a&gt; or &lt;form&gt; element. The name should not contain any blank space. Note that strWindowName does not specify the title of the new window.</param>
            <param name="features">Optional parameter listing the features (size, position, scrollbars, etc.) of the new window. The string must not contain any blank space, each feature name and value must be separated by a comma.</param>
            <param name="args">The arguments to be passed to the new window (optional).</param>
            <returns>A reference to the newly created window. If the call failed, it will be null. The reference can be used to access properties and methods of the new window provided it complies with Same origin policy security requirements.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.PostMessage(System.Object,System.String)">
            <summary>
            The window.postMessage method safely enables cross-origin communication.
            </summary>
            <param name="message">Data to be sent to the other window.</param>
            <param name="targetOrigin">Specifies what the origin of otherWindow must be for the event to be dispatched, either as the literal string "*" (indicating no preference) or as a URI.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.PostMessage(System.Object,System.String,System.Object[])">
            <summary>
            The window.postMessage method safely enables cross-origin communication.
            </summary>
            <param name="message">Data to be sent to the other window.</param>
            <param name="targetOrigin">Specifies what the origin of otherWindow must be for the event to be dispatched, either as the literal string "*" (indicating no preference) or as a URI.</param>
            <param name="transfer">Is a sequence of Transferable objects that are transferred with the message.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Print">
            <summary>
            Opens the Print Dialog to print the current document.
            </summary>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Prompt">
            <summary>
            The Window.prompt() displays a dialog with an optional message prompting the user to input some text.
            </summary>
            <returns>string containing the text entered by the user, or the value null.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Prompt(System.String)">
            <summary>
            The Window.prompt() displays a dialog with an optional message prompting the user to input some text.
            </summary>
            <param name="message">string of text to display to the user. This parameter is optional and can be omitted if there is nothing to show in the prompt window.</param>
            <returns>string containing the text entered by the user, or the value null.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Prompt(System.String,System.String)">
            <summary>
            The Window.prompt() displays a dialog with an optional message prompting the user to input some text.
            </summary>
            <param name="message">string of text to display to the user. This parameter is optional and can be omitted if there is nothing to show in the prompt window.</param>
            <param name="value">string containing the default value displayed in the text input field. It is an optional parameter. Note that in Internet Explorer 7 and 8, if you do not provide this parameter, the string "undefined" is the default value.</param>
            <returns>string containing the text entered by the user, or the value null.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(Bridge.Html5.EventType,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(System.String,Bridge.Html5.IEventListener)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(System.String,Bridge.Html5.IEventListener,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(Bridge.Html5.EventType,System.Delegate)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(Bridge.Html5.EventType,System.Action)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(Bridge.Html5.EventType,System.Delegate,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(Bridge.Html5.EventType,System.Action,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(System.String,System.Delegate)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(System.String,System.Action)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(System.String,System.Delegate,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(System.String,System.Action,System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event})">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(Bridge.Html5.EventType,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(System.String,System.Action{Bridge.Html5.Event})">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.RemoveEventListener(System.String,System.Action{Bridge.Html5.Event},System.Boolean)">
            <summary>
            Removes the event listener previously registered with EventTarget.addEventListener.
            </summary>
            <param name="type">A string representing the event type being removed.</param>
            <param name="listener">The listener parameter indicates the EventListener function to be removed.</param>
            <param name="capture">Specifies whether the EventListener being removed was registered as a capturing listener or not. If not specified, useCapture defaults to false.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.ResizeBy(System.Int32,System.Int32)">
            <summary>
            Resizes the current window by a certain amount.
            </summary>
            <param name="xDelta">the number of pixels to grow the window horizontally.</param>
            <param name="yDelta">the number of pixels to grow the window vertically.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.ResizeTo(System.Int32,System.Int32)">
            <summary>
            Dynamically resizes window.
            </summary>
            <param name="width">integer representing the new outerWidth in pixels (including scroll bars, title bars, etc).</param>
            <param name="height">integer value representing the new outerHeight in pixels (including scroll bars, title bars, etc).</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Scroll(System.Int32,System.Int32)">
            <summary>
            Scrolls the window to a particular place in the document.
            </summary>
            <param name="xcoord">the pixel along the horizontal axis of the document that you want displayed in the upper left.</param>
            <param name="ycoord">the pixel along the vertical axis of the document that you want displayed in the upper left.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.ScrollBy(System.Int32,System.Int32)">
            <summary>
            Scrolls the document in the window by the given amount.
            </summary>
            <param name="x">X is the offset in pixels to scroll horizontally.</param>
            <param name="y">Y is the offset in pixels to scroll vertically.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.ScrollByLines(System.Int32)">
            <summary>
            Scrolls the document by the given number of lines.
            </summary>
            <param name="lines">the number of lines to scroll the document by.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.ScrollByPages(System.Int32)">
            <summary>
            Scrolls the current document by the specified number of pages.
            </summary>
            <param name="pages">the number of pages to scroll.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.ScrollTo(System.Int32,System.Int32)">
            <summary>
            Scrolls to a particular set of coordinates in the document.
            </summary>
            <param name="x">the pixel along the horizontal axis of the document that you want displayed in the upper left.</param>
            <param name="y">the pixel along the vertical axis of the document that you want displayed in the upper left.</param>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetInterval(System.Delegate)">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetInterval(System.Action)">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetInterval(System.Delegate,System.Int32)">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetInterval(System.Action,System.Int32)">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetInterval(System.Action,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <param name="arguments"></param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetInterval(System.String)">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetInterval(System.String,System.Int32)">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetInterval(System.String,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <param name="arguments"></param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetInterval(System.Delegate,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.
            </summary>
            <param name="handler">the function you want to be called repeatedly.</param>
            <param name="delay">the number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.</param>
            <param name="arguments"></param>
            <returns>a unique interval ID you can pass to clearInterval().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetTimeout(System.Delegate)">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetTimeout(System.Action)">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetTimeout(System.Delegate,System.Int32)">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetTimeout(System.Action,System.Int32)">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetTimeout(System.Action,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <param name="arguments"></param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetTimeout(System.String)">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetTimeout(System.String,System.Int32)">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetTimeout(System.String,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <param name="arguments"></param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SetTimeout(System.Delegate,System.Int32,System.Object[])">
            <summary>
            Calls a function or executes a code snippet after a specified delay.
            </summary>
            <param name="handler"> the function you want to execute after delay milliseconds.</param>
            <param name="delay"> the number of milliseconds (thousandths of a second) that the function call should be delayed by. The actual delay may be longer;</param>
            <param name="arguments"></param>
            <returns> the numerical ID of the timeout, which can be used later with window.clearTimeout().</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.ShowModalDialog(System.String)">
            <summary>
            The Window.showModalDialog() creates and displays a modal dialog box containing a specified HTML document.
            </summary>
            <param name="uri"> the URI of the document to display in the dialog box.</param>
            <returns> a variant, indicating the returnValue property as set by the window of the document specified by uri.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.ShowModalDialog(System.String,System.Object)">
            <summary>
            The Window.showModalDialog() creates and displays a modal dialog box containing a specified HTML document.
            </summary>
            <param name="uri"> the URI of the document to display in the dialog box.</param>
            <param name="arguments">an optional variant that contains values that should be passed to the dialog box; these are made available in the window object's window.dialogArguments property.</param>
            <returns> a variant, indicating the returnValue property as set by the window of the document specified by uri.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.ShowModalDialog(System.String,System.Object,System.String)">
            <summary>
            The Window.showModalDialog() creates and displays a modal dialog box containing a specified HTML document.
            </summary>
            <param name="uri"> the URI of the document to display in the dialog box.</param>
            <param name="arguments">an optional variant that contains values that should be passed to the dialog box; these are made available in the window object's window.dialogArguments property.</param>
            <param name="options">an optional string that specifies window ornamentation for the dialog box, using one or more semicolon delimited values:</param>
            <returns> a variant, indicating the returnValue property as set by the window of the document specified by uri.</returns>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.SizeToContent">
            <summary>
            Sizes the window according to its content.
            </summary>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.Stop">
            <summary>
            This method stops window loading.
            </summary>
        </member>
        <member name="M:Bridge.Html5.WindowInstance.UpdateCommands(System.String)">
            <summary>
            Updates the state of commands of the current chrome window (UI).
            </summary>
            <param name="commandName">a particular string which describes what kind of update event this is (e.g. whether we are in bold right now).</param>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnAbort">
            <summary>
            An event handler property for abort events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnBeforeUnload">
            <summary>
            An event handler property for before-unload events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnBlur">
            <summary>
            An event handler property for blur events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnChange">
            <summary>
            An event handler property for change events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnClick">
            <summary>
            An event handler property for click events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnClose">
            <summary>
            An event handler property for handling the window close event
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnContextMenu">
            <summary>
            An event handler property for right-click events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnDeviceLight">
            <summary>
            An event handler property for any ambient light levels changes
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnDeviceMotion">
            <summary>
            FIXME: NeedsContents
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnDeviceOrientation">
            <summary>
            An event handler property for any device orientation changes
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnDeviceProximity">
            <summary>
            An event handler property for device proximity event
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnDragDrop">
            <summary>
            An event handler property for drag and drop events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnError">
            <summary>
            An event handler property for errors raised on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnFocus">
            <summary>
            An event handler property for focus events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnHashChange">
            <summary>
            An event handler property for hash change events on the window; called when the part of the URL after the hash mark ("#") changes
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnKeyDown">
            <summary>
            An event handler property for keydown events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnKeyPress">
            <summary>
            An event handler property for keypress events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnKeyUp">
            <summary>
            An event handler property for keyup events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnLoad">
            <summary>
            An event handler property for window loading
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnMouseDown">
            <summary>
            An event handler property for mousedown events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnMouseMove">
            <summary>
            An event handler property for mousemove events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnMouseOut">
            <summary>
            An event handler property for mouseout events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnMouseOver">
            <summary>
            An event handler property for mouseover events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnMouseUp">
            <summary>
            An event handler property for mouseup events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnPaint">
            <summary>
            An event handler property for paint events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnPopState">
            <summary>
            An event handler property for popstate events, which are fired when navigating to a session history entry representing a state object
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnReset">
            <summary>
            An event handler property for reset events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnResize">
            <summary>
            An event handler property for window resizing
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnScroll">
            <summary>
            An event handler property for window scrolling
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnSelect">
            <summary>
            An event handler property for window selection
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnSubmit">
            <summary>
            An event handler property for submits on window forms
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnUnload">
            <summary>
            An event handler property for unload events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnUserProximity">
            <summary>
            An event handler property for user proximity events
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnPageShow">
            <summary>
            An event handler property for pageshow events on the window
            </summary>
        </member>
        <member name="F:Bridge.Html5.WindowInstance.OnPageHide">
            <summary>
            An event handler property for pagehide events on the window
            </summary>
        </member>
        <member name="T:System.EvalException">
            <summary>
            The EvalError object indicates an error regarding the global eval() function.
            </summary>
        </member>
        <member name="T:System.RangeException">
            <summary>
            The RangeError object indicates an error when a value is not in the set or range of allowed values.
            </summary>
        </member>
        <member name="T:System.ReferenceException">
            <summary>
            The ReferenceError object represents an error when a non-existent variable is referenced.
            </summary>
        </member>
        <member name="T:System.SyntaxException">
            <summary>
            The SyntaxError object represents an error when trying to interpret syntactically invalid code.
            </summary>
        </member>
        <member name="T:System.TypeException">
            <summary>
            The TypeError object represents an error when a value is not of the expected type.
            </summary>
        </member>
        <member name="T:System.URIException">
            <summary>
            The URIError object represents an error when a global URI handling function was used in a wrong way.
            </summary>
        </member>
    </members>
</doc>
